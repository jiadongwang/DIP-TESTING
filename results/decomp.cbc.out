Linux polyp1 2.6.32-5-amd64 #1 SMP Mon Sep 23 22:14:43 UTC 2013 x86_64 GNU/Linux
Fri Feb 21 16:05:14 EST 2014
MIPLIB script version 1.0.3
hard mem limit: 8388608 k
@01 instances/decomplib/atm_miplib2010.mps ===========
-----------------------------
Fri Feb 21 16:05:14 EST 2014
-----------------------------
@03 1393016714
Welcome to the CBC MILP Solver 
Version: Trunk (unstable) 
Build Date: Feb  9 2014 
Revision Number: 2007 

command line - /home/jiw508/miplib2010-1.0.3/bin/cbc -import instances/decomplib/atm_miplib2010.mps -sec 3600 -ratio 0.0 -solve -solution /home/jiw508/miplib2010-1.0.3/results/solutions/decomp.cbc.atm_miplib2010.mps.sol (default strategy 1)
At line 1 NAME BLANK
At line 2 ROWS
At line 4384 COLUMNS
At line 36843 RHS
At line 37914 BOUNDS
At line 42395 ENDATA
Problem BLANK has 4380 rows, 6480 columns and 58878 elements
Coin0008I BLANK read with 0 errors
seconds was changed from 1e+100 to 3600
ratioGap was changed from 0 to 0
Continuous objective value is 2.14173e+06 - 1.02 seconds
Cgl0004I processed model has 4013 rows, 5945 columns (2021 integer) and 57629 elements
Cbc0038I Initial state - 975 integers unsatisfied sum - 277.125
Cbc0038I Pass   1: (2.68 seconds) suminf.   71.96911 (354) obj. 3.66861e+06 iterations 1294
Cbc0038I Pass   2: (2.74 seconds) suminf.   70.70454 (351) obj. 3.67739e+06 iterations 6
Cbc0038I Pass   3: (2.84 seconds) suminf.   58.10190 (318) obj. 3.77239e+06 iterations 86
Cbc0038I Pass   4: (2.98 seconds) suminf.   50.37656 (297) obj. 3.84768e+06 iterations 104
Cbc0038I Pass   5: (3.05 seconds) suminf.   50.35541 (297) obj. 3.84171e+06 iterations 12
Cbc0038I Pass   6: (3.14 seconds) suminf.   46.75644 (292) obj. 3.88468e+06 iterations 44
Cbc0038I Pass   7: (3.21 seconds) suminf.   46.74046 (288) obj. 3.88235e+06 iterations 14
Cbc0038I Pass   8: (3.29 seconds) suminf.   42.40576 (276) obj. 3.94416e+06 iterations 44
Cbc0038I Pass   9: (3.36 seconds) suminf.   42.38929 (276) obj. 3.93717e+06 iterations 14
Cbc0038I Pass  10: (3.44 seconds) suminf.   39.27118 (265) obj. 3.9777e+06 iterations 39
Cbc0038I Pass  11: (3.51 seconds) suminf.   39.24684 (268) obj. 3.97396e+06 iterations 13
Cbc0038I Pass  12: (3.60 seconds) suminf.   35.54257 (253) obj. 4.02878e+06 iterations 62
Cbc0038I Pass  13: (3.67 seconds) suminf.   35.50503 (254) obj. 4.02553e+06 iterations 13
Cbc0038I Pass  14: (3.78 seconds) suminf.   30.84154 (235) obj. 4.0989e+06 iterations 76
Cbc0038I Pass  15: (3.88 seconds) suminf.   30.41655 (239) obj. 4.10023e+06 iterations 49
Cbc0038I Pass  16: (4.02 seconds) suminf.   26.88976 (220) obj. 4.17076e+06 iterations 101
Cbc0038I Pass  17: (4.10 seconds) suminf.   26.81339 (220) obj. 4.15979e+06 iterations 21
Cbc0038I Pass  18: (4.23 seconds) suminf.   23.97482 (198) obj. 4.22008e+06 iterations 80
Cbc0038I Pass  19: (4.35 seconds) suminf.   23.44526 (203) obj. 4.23e+06 iterations 54
Cbc0038I Pass  20: (4.47 seconds) suminf.   22.31916 (189) obj. 4.26865e+06 iterations 90
Cbc0038I Pass  21: (4.57 seconds) suminf.   22.06838 (193) obj. 4.27188e+06 iterations 36
Cbc0038I Pass  22: (4.68 seconds) suminf.   22.01456 (188) obj. 4.29587e+06 iterations 44
Cbc0038I Pass  23: (4.79 seconds) suminf.   21.42802 (191) obj. 4.27616e+06 iterations 49
Cbc0038I Pass  24: (4.92 seconds) suminf.   20.52850 (174) obj. 4.34374e+06 iterations 82
Cbc0038I Pass  25: (5.04 seconds) suminf.   19.81923 (180) obj. 4.32652e+06 iterations 53
Cbc0038I Pass  26: (5.15 seconds) suminf.   20.08360 (168) obj. 4.37831e+06 iterations 55
Cbc0038I Pass  27: (5.26 seconds) suminf.   19.37261 (175) obj. 4.35047e+06 iterations 45
Cbc0038I Pass  28: (5.34 seconds) suminf.   19.34334 (177) obj. 4.34556e+06 iterations 13
Cbc0038I Pass  29: (5.45 seconds) suminf.   18.51711 (161) obj. 4.4006e+06 iterations 62
Cbc0038I Pass  30: (5.56 seconds) suminf.   17.83323 (168) obj. 4.36958e+06 iterations 40
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1006 integers at bound fixed and 1179 continuous
Cbc0038I Mini branch and bound did not improve solution (6.22 seconds)
Cbc0038I After 8.67 seconds - Feasibility pump exiting - took 6.62 seconds
Cbc0031I 874 added rows had average density of 63.257437
Cbc0013I At root node, 874 cuts changed objective from 2141734.7 to 2209657.1 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 2180 row cuts average 15.3 elements, 0 column cuts (679 active)  in 2.692 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6706 row cuts average 85.3 elements, 0 column cuts (0 active)  in 24.714 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 73 row cuts average 9.2 elements, 0 column cuts (0 active)  in 5.808 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.208 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3493 row cuts average 16.4 elements, 0 column cuts (0 active)  in 2.600 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 1.824 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 3619 row cuts average 42.8 elements, 0 column cuts (0 active)  in 12.093 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 2209657.1 (96.46 seconds)
Cbc0010I After 100 nodes, 52 on tree, 1e+50 best solution, best possible 2209657.1 (701.78 seconds)
Cbc0010I After 200 nodes, 90 on tree, 1e+50 best solution, best possible 2209657.1 (981.45 seconds)
Cbc0010I After 300 nodes, 113 on tree, 1e+50 best solution, best possible 2209657.1 (1274.54 seconds)
Cbc0010I After 400 nodes, 120 on tree, 1e+50 best solution, best possible 2209657.1 (1552.73 seconds)
Cbc0010I After 500 nodes, 130 on tree, 1e+50 best solution, best possible 2209657.1 (1825.17 seconds)
Cbc0010I After 600 nodes, 135 on tree, 1e+50 best solution, best possible 2209657.1 (2102.37 seconds)
Cbc0010I After 700 nodes, 126 on tree, 1e+50 best solution, best possible 2209657.1 (2372.16 seconds)
Cbc0010I After 800 nodes, 122 on tree, 1e+50 best solution, best possible 2209657.1 (2648.06 seconds)
Cbc0010I After 900 nodes, 127 on tree, 1e+50 best solution, best possible 2209657.1 (2925.38 seconds)
Cbc0010I After 1000 nodes, 129 on tree, 1e+50 best solution, best possible 2209657.1 (3180.91 seconds)
Cbc0010I After 1100 nodes, 110 on tree, 1e+50 best solution, best possible 2210178 (3466.92 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 2210178), took 734531 iterations and 1148 nodes (3602.05 seconds)
Cbc0032I Strong branching done 10360 times (566330 iterations), fathomed 4 nodes and fixed 2 variables
Cbc0035I Maximum depth 325, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2.14173e+06 to 2.20966e+06
Probing was tried 506 times and created 15748 cuts of which 5274 were active after adding rounds of cuts (22.993 seconds)
Gomory was tried 506 times and created 12845 cuts of which 3004 were active after adding rounds of cuts (193.664 seconds)
Knapsack was tried 20 times and created 73 cuts of which 0 were active after adding rounds of cuts (5.808 seconds)
Clique was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.208 seconds)
MixedIntegerRounding2 was tried 506 times and created 41199 cuts of which 2190 were active after adding rounds of cuts (33.614 seconds)
FlowCover was tried 20 times and created 3 cuts of which 0 were active after adding rounds of cuts (1.824 seconds)
TwoMirCuts was tried 506 times and created 8010 cuts of which 0 were active after adding rounds of cuts (140.309 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    2210177.969
Enumerated nodes:               1148
Total iterations:               734531
Time (CPU seconds):             3603.06
Time (Wallclock seconds):       3618.11

Total time (CPU seconds):       3603.25   (Wallclock seconds):       3618.31


@04 1393020332
@05 3600

Read MPS: 1
MIP has 6480 vars and 4380 constraints
Read SOL: 0

-----------------------------
Fri Feb 21 17:05:33 EST 2014
-----------------------------

=ready=
@01 instances/decomplib/colore_errera.mps ===========
-----------------------------
Fri Feb 21 17:05:33 EST 2014
-----------------------------
@03 1393020333
Welcome to the CBC MILP Solver 
Version: Trunk (unstable) 
Build Date: Feb  9 2014 
Revision Number: 2007 

command line - /home/jiw508/miplib2010-1.0.3/bin/cbc -import instances/decomplib/colore_errera.mps -sec 3600 -ratio 0.0 -solve -solution /home/jiw508/miplib2010-1.0.3/results/solutions/decomp.cbc.colore_errera.mps.sol (default strategy 1)
At line 1 NAME colore_errera
At line 2 ROWS
At line 151 COLUMNS
At line 748 RHS
At line 794 BOUNDS
At line 1071 ENDATA
Problem colore_errera has 147 rows, 276 columns and 912 elements
Coin0008I colore_errera read with 0 errors
seconds was changed from 1e+100 to 3600
ratioGap was changed from 0 to 0
Continuous objective value is 6 - 0.02 seconds
Cgl0004I processed model has 147 rows, 276 columns (276 integer) and 912 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 6 integer variables out of 276 objects (276 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied N create fake objective Y random cost N
Cbc0038I Initial state - 47 integers unsatisfied sum - 22
Cbc0038I Pass   1: suminf.   14.00000 (28) obj. 6 iterations 117
Cbc0038I Pass   2: suminf.   14.00000 (28) obj. 6 iterations 18
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. 6 iterations 45
Cbc0038I Solution found of 6
Cbc0038I Before mini branch and bound, 219 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of 6 - took 0.03 seconds
Cbc0012I Integer solution of 6 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0001I Search completed - best objective 6, took 0 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 6 to 6
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                6.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.10
Time (Wallclock seconds):       0.10

Total time (CPU seconds):       0.10   (Wallclock seconds):       0.11

=obj= 6.00000000 
IsColor[1,5,1] 1 
IsColor[2,15,1] 1 
IsColor[3,11,1] 1 
IsColor[4,8,1] 1 
IsColor[6,13,1] 1 
IsColor[7,17,1] 1 
IsColor[9,14,1] 1 
IsColor[12,16,1] 1 
IsColor[2,8,2] 1 
IsColor[6,14,2] 1 
IsColor[7,16,2] 1 
IsColor[9,10,2] 1 
IsColor[11,15,2] 1 
IsColor[12,17,2] 1 
IsColor[1,17,3] 1 
IsColor[2,13,3] 1 
IsColor[3,10,3] 1 
IsColor[4,6,3] 1 
IsColor[5,12,3] 1 
IsColor[7,9,3] 1 
IsColor[8,15,3] 1 
IsColor[11,16,3] 1 
IsColor[1,12,4] 1 
IsColor[3,5,4] 1 
IsColor[4,11,4] 1 
IsColor[6,16,4] 1 
IsColor[7,14,4] 1 
IsColor[8,13,4] 1 
IsColor[9,15,4] 1 
IsColor[10,17,4] 1 
IsColor[1,3,5] 1 
IsColor[2,9,5] 1 
IsColor[4,16,5] 1 
IsColor[5,11,5] 1 
IsColor[7,12,5] 1 
IsColor[10,15,5] 1 
IsColor[13,14,5] 1 
IsColor[1,10,6] 1 
IsColor[2,14,6] 1 
IsColor[3,15,6] 1 
IsColor[4,13,6] 1 
IsColor[5,16,6] 1 
IsColor[6,7,6] 1 
IsColor[8,11,6] 1 
IsColor[9,17,6] 1 
UseColor[1] 1 
UseColor[2] 1 
UseColor[3] 1 
UseColor[4] 1 
UseColor[5] 1 
UseColor[6] 1 

@04 1393020333
@05 3600

Read MPS: 1
MIP has 276 vars and 147 constraints
Read SOL: 1
Objective value computed by solver: 6

Integrality tolerance: 1/10000
Linear tolerance: 1/10000
Objective tolerance: 1/10000

Check SOL: Integrality 1 Constraints 1 Objective 1
Maximum violations: Integrality 0 Constraints 0 Objective 0

-----------------------------
Fri Feb 21 17:05:33 EST 2014
-----------------------------

=ready=
@01 instances/decomplib/gap42.mps ===========
-----------------------------
Fri Feb 21 17:05:33 EST 2014
-----------------------------
@03 1393020333
Welcome to the CBC MILP Solver 
Version: Trunk (unstable) 
Build Date: Feb  9 2014 
Revision Number: 2007 

command line - /home/jiw508/miplib2010-1.0.3/bin/cbc -import instances/decomplib/gap42.mps -sec 3600 -ratio 0.0 -solve -solution /home/jiw508/miplib2010-1.0.3/results/solutions/decomp.cbc.gap42.mps.sol (default strategy 1)
At line 1 NAME check/instances/gap/gap4_2.txt
At line 2 ROWS
At line 39 COLUMNS
At line 342 RHS
At line 361 BOUNDS
At line 512 ENDATA
Problem check/instances/gap/gap4_2.txt has 35 rows, 150 columns and 300 elements
Coin0008I check/instances/gap/gap4_2.txt read with 0 errors
seconds was changed from 1e+100 to 3600
ratioGap was changed from 0 to 0
Continuous objective value is -654.978 - 0.01 seconds
Cgl0005I 30 SOS with 150 members
Cgl0004I processed model has 35 rows, 150 columns (150 integer) and 300 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 9 integers unsatisfied sum - 1.9639
Cbc0038I Pass   1: suminf.    1.26984 (8) obj. -650.556 iterations 26
Cbc0038I Pass   2: suminf.    0.58333 (6) obj. -645.069 iterations 8
Cbc0038I Pass   3: suminf.    2.10939 (6) obj. -626.815 iterations 31
Cbc0038I Pass   4: suminf.    1.37255 (4) obj. -625.078 iterations 10
Cbc0038I Pass   5: suminf.    1.83626 (4) obj. -620.485 iterations 21
Cbc0038I Pass   6: suminf.    0.70588 (2) obj. -614.412 iterations 14
Cbc0038I Pass   7: suminf.    0.88889 (2) obj. -615.222 iterations 11
Cbc0038I Pass   8: suminf.    2.32330 (10) obj. -585.185 iterations 35
Cbc0038I Pass   9: suminf.    1.40667 (7) obj. -588.736 iterations 18
Cbc0038I Pass  10: suminf.    1.35747 (4) obj. -601.611 iterations 28
Cbc0038I Pass  11: suminf.    1.00000 (3) obj. -601.729 iterations 5
Cbc0038I Pass  12: suminf.    0.40000 (2) obj. -597.2 iterations 3
Cbc0038I Solution found of -595
Cbc0038I Before mini branch and bound, 105 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 150 columns, reduced to 14 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -595 to -640 (0.10 seconds)
Cbc0038I Round again with cutoff of -642.398
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass  13: suminf.    1.26984 (8) obj. -650.556 iterations 0
Cbc0038I Pass  14: suminf.    0.58333 (6) obj. -645.069 iterations 9
Cbc0038I Pass  15: suminf.    1.65496 (6) obj. -642.398 iterations 18
Cbc0038I Pass  16: suminf.    2.51132 (12) obj. -642.398 iterations 31
Cbc0038I Pass  17: suminf.    1.92546 (8) obj. -642.398 iterations 17
Cbc0038I Pass  18: suminf.    2.38836 (9) obj. -642.398 iterations 21
Cbc0038I Pass  19: suminf.    1.58390 (7) obj. -642.398 iterations 12
Cbc0038I Pass  20: suminf.    2.06000 (7) obj. -642.398 iterations 26
Cbc0038I Pass  21: suminf.    1.41667 (5) obj. -643.562 iterations 28
Cbc0038I Pass  22: suminf.    1.41667 (5) obj. -643.562 iterations 0
Cbc0038I Pass  23: suminf.    1.96782 (7) obj. -642.398 iterations 19
Cbc0038I Pass  24: suminf.    1.96782 (7) obj. -642.398 iterations 0
Cbc0038I Pass  25: suminf.    1.72222 (7) obj. -642.398 iterations 25
Cbc0038I Pass  26: suminf.    1.72222 (7) obj. -642.398 iterations 0
Cbc0038I Pass  27: suminf.    2.84738 (8) obj. -642.398 iterations 18
Cbc0038I Pass  28: suminf.    1.79103 (6) obj. -642.398 iterations 9
Cbc0038I Pass  29: suminf.    1.80057 (7) obj. -642.398 iterations 29
Cbc0038I Pass  30: suminf.    1.26190 (6) obj. -642.398 iterations 12
Cbc0038I Pass  31: suminf.    2.01566 (7) obj. -642.398 iterations 22
Cbc0038I Pass  32: suminf.    1.63889 (6) obj. -642.398 iterations 11
Cbc0038I Pass  33: suminf.    1.77914 (6) obj. -642.398 iterations 17
Cbc0038I Pass  34: suminf.    2.40935 (12) obj. -642.398 iterations 22
Cbc0038I Pass  35: suminf.    1.05556 (7) obj. -642.398 iterations 21
Cbc0038I Pass  36: suminf.    1.47127 (6) obj. -642.398 iterations 18
Cbc0038I Pass  37: suminf.    1.39952 (5) obj. -642.398 iterations 9
Cbc0038I Pass  38: suminf.    1.49600 (5) obj. -642.398 iterations 14
Cbc0038I Pass  39: suminf.    3.29758 (12) obj. -642.398 iterations 21
Cbc0038I Pass  40: suminf.    2.05963 (10) obj. -642.398 iterations 10
Cbc0038I Pass  41: suminf.    1.75083 (8) obj. -642.398 iterations 13
Cbc0038I Pass  42: suminf.    0.70752 (6) obj. -646.992 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 150 columns, reduced to 16 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
Cbc0038I After 0.30 seconds - Feasibility pump exiting with objective of -640 - took 0.28 seconds
Cbc0012I Integer solution of -640 found by feasibility pump after 0 iterations and 0 nodes (0.30 seconds)
Cbc0038I Full problem 35 rows 150 columns, reduced to 3 rows 3 columns
Cbc0038I Full problem 35 rows 150 columns, reduced to 0 rows 0 columns
Cbc0031I 18 added rows had average density of 53.722222
Cbc0013I At root node, 18 cuts changed objective from -654.97817 to -646.68913 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 8 column cuts (13 active)  in 0.140 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 874 row cuts average 111.8 elements, 0 column cuts (4 active)  in 0.336 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 245 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 86.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 248 row cuts average 33.6 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -640 best solution, best possible -646.68913 (2.02 seconds)
Cbc0004I Integer solution of -642 found after 2087 iterations and 2 nodes (2.20 seconds)
Cbc0038I Full problem 35 rows 150 columns, reduced to 5 rows 8 columns
Cbc0004I Integer solution of -643 found after 2256 iterations and 6 nodes (2.31 seconds)
Cbc0038I Full problem 35 rows 150 columns, reduced to 5 rows 10 columns
Cbc0016I Integer solution of -644 found by strong branching after 3016 iterations and 28 nodes (2.80 seconds)
Cbc0001I Search completed - best objective -644, took 3158 iterations and 31 nodes (2.82 seconds)
Cbc0032I Strong branching done 394 times (3538 iterations), fathomed 4 nodes and fixed 8 variables
Cbc0035I Maximum depth 8, 356 variables fixed on reduced cost
Cuts at root node changed objective from -654.978 to -646.689
Probing was tried 100 times and created 8 cuts of which 5 were active after adding rounds of cuts (0.140 seconds)
Gomory was tried 176 times and created 1048 cuts of which 37 were active after adding rounds of cuts (0.432 seconds)
Knapsack was tried 176 times and created 412 cuts of which 40 were active after adding rounds of cuts (0.248 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
MixedIntegerRounding2 was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.064 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 176 times and created 460 cuts of which 11 were active after adding rounds of cuts (0.200 seconds)

Result - Optimal solution found

Objective value:                -644.00000000
Enumerated nodes:               31
Total iterations:               3158
Time (CPU seconds):             2.84
Time (Wallclock seconds):       2.88

Total time (CPU seconds):       2.85   (Wallclock seconds):       2.89

=obj= -644.00000000 
x#1#4 1 
x#1#6 1 
x#1#8 1 
x#1#13 1 
x#1#26 1 
x#1#28 1 
x#2#5 1 
x#2#10 1 
x#2#12 1 
x#2#17 1 
x#2#18 1 
x#2#30 1 
x#3#1 1 
x#3#2 1 
x#3#11 1 
x#3#20 1 
x#3#23 1 
x#3#25 1 
x#4#7 1 
x#4#9 1 
x#4#14 1 
x#4#15 1 
x#4#21 1 
x#4#27 1 
x#5#3 1 
x#5#16 1 
x#5#19 1 
x#5#22 1 
x#5#24 1 
x#5#29 1 

@04 1393020336
@05 3600

Read MPS: 1
MIP has 150 vars and 35 constraints
Read SOL: 1
Objective value computed by solver: -644

Integrality tolerance: 1/10000
Linear tolerance: 1/10000
Objective tolerance: 1/10000

Check SOL: Integrality 1 Constraints 1 Objective 1
Maximum violations: Integrality 0 Constraints 0 Objective 0

-----------------------------
Fri Feb 21 17:05:36 EST 2014
-----------------------------

=ready=
@01 instances/decomplib/kidney2_10_9.mps ===========
-----------------------------
Fri Feb 21 17:05:36 EST 2014
-----------------------------
@03 1393020336
Welcome to the CBC MILP Solver 
Version: Trunk (unstable) 
Build Date: Feb  9 2014 
Revision Number: 2007 

command line - /home/jiw508/miplib2010-1.0.3/bin/cbc -import instances/decomplib/kidney2_10_9.mps -sec 3600 -ratio 0.0 -solve -solution /home/jiw508/miplib2010-1.0.3/results/solutions/decomp.cbc.kidney2_10_9.mps.sol (default strategy 1)
At line 1 NAME kidney2_10_9
At line 2 ROWS
At line 1856 COLUMNS
At line 7194 RHS
At line 7301 BOUNDS
At line 10018 ENDATA
Problem kidney2_10_9 has 1852 rows, 2716 columns and 7954 elements
Coin0008I kidney2_10_9 read with 0 errors
seconds was changed from 1e+100 to 3600
ratioGap was changed from 0 to 0
Continuous objective value is 0 - 0.04 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 8 substitutions
Cgl0004I processed model has 527 rows, 1112 columns (1112 integer) and 4037 elements
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 1112 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.40 seconds)
Cbc0038I After 0.40 seconds - Feasibility pump exiting with objective of 0 - took 0.02 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.40 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.41 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.46
Time (Wallclock seconds):       0.46

Total time (CPU seconds):       0.50   (Wallclock seconds):       0.50

=obj= 0.00000000 
Slack[3] 1 
Slack[16] 1 
Slack[4] 1 
Slack[51] 1 
Slack[52] 1 
Slack[68] 1 
Slack[88] 1 
Slack[5] 1 
Slack[2] 1 
Slack[11] 1 
Slack[6] 1 
Slack[18] 1 
Slack[20] 1 
Slack[7] 1 
Slack[97] 1 
Slack[8] 1 
Slack[72] 1 
Slack[9] 1 
Slack[32] 1 
Slack[33] 1 
Slack[56] 1 
Slack[57] 1 
Slack[10] 1 
Slack[19] 1 
Slack[44] 1 
Slack[76] 1 
Slack[80] 1 
Slack[23] 1 
Slack[12] 1 
Slack[74] 1 
Slack[96] 1 
Slack[13] 1 
Slack[14] 1 
Slack[31] 1 
Slack[34] 1 
Slack[46] 1 
Slack[89] 1 
Slack[37] 1 
Slack[54] 1 
Slack[75] 1 
Slack[15] 1 
Slack[24] 1 
Slack[65] 1 
Slack[17] 1 
Slack[53] 1 
Slack[92] 1 
Slack[27] 1 
Slack[58] 1 
Slack[81] 1 
Slack[61] 1 
Slack[21] 1 
Slack[22] 1 
Slack[90] 1 
Slack[25] 1 
Slack[93] 1 
Slack[26] 1 
Slack[69] 1 
Slack[28] 1 
Slack[38] 1 
Slack[29] 1 
Slack[30] 1 
Slack[66] 1 
Slack[99] 1 
Slack[62] 1 
Slack[71] 1 
Slack[86] 1 
Slack[94] 1 
Slack[95] 1 
Slack[35] 1 
Slack[36] 1 
Slack[60] 1 
Slack[50] 1 
Slack[39] 1 
Slack[41] 1 
Slack[40] 1 
Slack[42] 1 
Slack[45] 1 
Slack[47] 1 
Slack[82] 1 
Slack[48] 1 
Slack[78] 1 
Slack[91] 1 
Slack[55] 1 
Slack[59] 1 
Slack[63] 1 
Slack[64] 1 
Slack[87] 1 
Slack[67] 1 
Slack[73] 1 
Slack[70] 1 
Slack[85] 1 
Slack[77] 1 
Slack[79] 1 
Slack[83] 1 
Slack[84] 1 
Slack[98] 1 
Slack[100] 1 

@04 1393020336
@05 3600

Read MPS: 1
MIP has 2716 vars and 1852 constraints
Read SOL: 1
Objective value computed by solver: 0

Integrality tolerance: 1/10000
Linear tolerance: 1/10000
Objective tolerance: 1/10000

Check SOL: Integrality 1 Constraints 1 Objective 1
Maximum violations: Integrality 0 Constraints 0 Objective 0

-----------------------------
Fri Feb 21 17:05:37 EST 2014
-----------------------------

=ready=
@01 instances/decomplib/kidney3_20_50.mps ===========
-----------------------------
Fri Feb 21 17:05:37 EST 2014
-----------------------------
@03 1393020337
Welcome to the CBC MILP Solver 
Version: Trunk (unstable) 
Build Date: Feb  9 2014 
Revision Number: 2007 

command line - /home/jiw508/miplib2010-1.0.3/bin/cbc -import instances/decomplib/kidney3_20_50.mps -sec 3600 -ratio 0.0 -solve -solution /home/jiw508/miplib2010-1.0.3/results/solutions/decomp.cbc.kidney3_20_50.mps.sol (default strategy 1)
At line 1 NAME kidney3_20_50
At line 2 ROWS
At line 30354 COLUMNS
At line 233857 RHS
At line 234208 BOUNDS
At line 336109 ENDATA
Problem kidney3_20_50 has 30350 rows, 101900 columns and 305100 elements
Coin0008I kidney3_20_50 read with 0 errors
seconds was changed from 1e+100 to 3600
ratioGap was changed from 0 to 0
Continuous objective value is 0 - 2.33 seconds
Cgl0004I processed model has 23858 rows, 94958 columns (94958 integer) and 311388 elements
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 94958 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (150.11 seconds)
Cbc0038I After 150.13 seconds - Feasibility pump exiting with objective of 0 - took 1.15 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (150.30 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (150.71 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             152.60
Time (Wallclock seconds):       153.13

Total time (CPU seconds):       153.71   (Wallclock seconds):       154.28

=obj= 0.00000000 
Slack[1] 1 
Slack[214] 1 
Slack[2] 1 
Slack[49] 1 
Slack[50] 1 
Slack[66] 1 
Slack[86] 1 
Slack[100] 1 
Slack[108] 1 
Slack[216] 1 
Slack[3] 1 
Slack[93] 1 
Slack[167] 1 
Slack[203] 1 
Slack[226] 1 
Slack[227] 1 
Slack[250] 1 
Slack[251] 1 
Slack[4] 1 
Slack[13] 1 
Slack[38] 1 
Slack[70] 1 
Slack[74] 1 
Slack[116] 1 
Slack[266] 1 
Slack[288] 1 
Slack[5] 1 
Slack[6] 1 
Slack[23] 1 
Slack[26] 1 
Slack[81] 1 
Slack[128] 1 
Slack[145] 1 
Slack[166] 1 
Slack[242] 1 
Slack[296] 1 
Slack[55] 1 
Slack[142] 1 
Slack[181] 1 
Slack[215] 1 
Slack[246] 1 
Slack[269] 1 
Slack[7] 1 
Slack[19] 1 
Slack[44] 1 
Slack[84] 1 
Slack[144] 1 
Slack[148] 1 
Slack[196] 1 
Slack[8] 1 
Slack[62] 1 
Slack[76] 1 
Slack[174] 1 
Slack[209] 1 
Slack[9] 1 
Slack[77] 1 
Slack[127] 1 
Slack[152] 1 
Slack[193] 1 
Slack[10] 1 
Slack[20] 1 
Slack[153] 1 
Slack[279] 1 
Slack[292] 1 
Slack[11] 1 
Slack[42] 1 
Slack[168] 1 
Slack[190] 1 
Slack[192] 1 
Slack[208] 1 
Slack[258] 1 
Slack[291] 1 
Slack[12] 1 
Slack[30] 1 
Slack[64] 1 
Slack[72] 1 
Slack[73] 1 
Slack[131] 1 
Slack[139] 1 
Slack[186] 1 
Slack[236] 1 
Slack[260] 1 
Slack[287] 1 
Slack[14] 1 
Slack[85] 1 
Slack[232] 1 
Slack[237] 1 
Slack[15] 1 
Slack[88] 1 
Slack[16] 1 
Slack[63] 1 
Slack[17] 1 
Slack[80] 1 
Slack[89] 1 
Slack[104] 1 
Slack[159] 1 
Slack[217] 1 
Slack[248] 1 
Slack[18] 1 
Slack[96] 1 
Slack[114] 1 
Slack[130] 1 
Slack[143] 1 
Slack[254] 1 
Slack[255] 1 
Slack[40] 1 
Slack[176] 1 
Slack[283] 1 
Slack[51] 1 
Slack[103] 1 
Slack[121] 1 
Slack[207] 1 
Slack[212] 1 
Slack[21] 1 
Slack[187] 1 
Slack[22] 1 
Slack[34] 1 
Slack[122] 1 
Slack[197] 1 
Slack[199] 1 
Slack[243] 1 
Slack[253] 1 
Slack[282] 1 
Slack[79] 1 
Slack[118] 1 
Slack[281] 1 
Slack[24] 1 
Slack[39] 1 
Slack[110] 1 
Slack[223] 1 
Slack[290] 1 
Slack[25] 1 
Slack[158] 1 
Slack[170] 1 
Slack[231] 1 
Slack[189] 1 
Slack[230] 1 
Slack[27] 1 
Slack[57] 1 
Slack[120] 1 
Slack[299] 1 
Slack[28] 1 
Slack[140] 1 
Slack[205] 1 
Slack[264] 1 
Slack[29] 1 
Slack[154] 1 
Slack[175] 1 
Slack[201] 1 
Slack[234] 1 
Slack[59] 1 
Slack[87] 1 
Slack[123] 1 
Slack[273] 1 
Slack[31] 1 
Slack[43] 1 
Slack[58] 1 
Slack[67] 1 
Slack[126] 1 
Slack[164] 1 
Slack[221] 1 
Slack[257] 1 
Slack[272] 1 
Slack[32] 1 
Slack[134] 1 
Slack[173] 1 
Slack[33] 1 
Slack[109] 1 
Slack[149] 1 
Slack[241] 1 
Slack[41] 1 
Slack[35] 1 
Slack[261] 1 
Slack[36] 1 
Slack[294] 1 
Slack[298] 1 
Slack[37] 1 
Slack[259] 1 
Slack[229] 1 
Slack[150] 1 
Slack[188] 1 
Slack[275] 1 
Slack[137] 1 
Slack[274] 1 
Slack[141] 1 
Slack[228] 1 
Slack[244] 1 
Slack[191] 1 
Slack[151] 1 
Slack[179] 1 
Slack[45] 1 
Slack[198] 1 
Slack[218] 1 
Slack[268] 1 
Slack[46] 1 
Slack[53] 1 
Slack[91] 1 
Slack[245] 1 
Slack[249] 1 
Slack[278] 1 
Slack[47] 1 
Slack[289] 1 
Slack[48] 1 
Slack[90] 1 
Slack[169] 1 
Slack[107] 1 
Slack[277] 1 
Slack[300] 1 
Slack[95] 1 
Slack[101] 1 
Slack[194] 1 
Slack[267] 1 
Slack[52] 1 
Slack[102] 1 
Slack[160] 1 
Slack[54] 1 
Slack[211] 1 
Slack[112] 1 
Slack[56] 1 
Slack[83] 1 
Slack[113] 1 
Slack[182] 1 
Slack[138] 1 
Slack[285] 1 
Slack[136] 1 
Slack[60] 1 
Slack[224] 1 
Slack[61] 1 
Slack[124] 1 
Slack[161] 1 
Slack[172] 1 
Slack[271] 1 
Slack[99] 1 
Slack[106] 1 
Slack[284] 1 
Slack[65] 1 
Slack[270] 1 
Slack[180] 1 
Slack[235] 1 
Slack[68] 1 
Slack[69] 1 
Slack[98] 1 
Slack[125] 1 
Slack[239] 1 
Slack[71] 1 
Slack[129] 1 
Slack[75] 1 
Slack[210] 1 
Slack[184] 1 
Slack[78] 1 
Slack[204] 1 
Slack[94] 1 
Slack[156] 1 
Slack[183] 1 
Slack[240] 1 
Slack[293] 1 
Slack[82] 1 
Slack[119] 1 
Slack[157] 1 
Slack[155] 1 
Slack[105] 1 
Slack[225] 1 
Slack[222] 1 
Slack[92] 1 
Slack[117] 1 
Slack[115] 1 
Slack[97] 1 
Slack[280] 1 
Slack[135] 1 
Slack[265] 1 
Slack[220] 1 
Slack[247] 1 
Slack[252] 1 
Slack[276] 1 
Slack[213] 1 
Slack[295] 1 
Slack[233] 1 
Slack[286] 1 
Slack[111] 1 
Slack[262] 1 
Slack[178] 1 
Slack[263] 1 
Slack[133] 1 
Slack[146] 1 
Slack[195] 1 
Slack[202] 1 
Slack[185] 1 
Slack[132] 1 
Slack[200] 1 
Slack[177] 1 
Slack[206] 1 
Slack[163] 1 
Slack[297] 1 
Slack[171] 1 
Slack[147] 1 
Slack[165] 1 
Slack[219] 1 
Slack[256] 1 
Slack[162] 1 
Slack[238] 1 

@04 1393020491
@05 3600

Read MPS: 1
MIP has 101900 vars and 30350 constraints
Read SOL: 1
Objective value computed by solver: 0

Integrality tolerance: 1/10000
Linear tolerance: 1/10000
Objective tolerance: 1/10000

Check SOL: Integrality 1 Constraints 1 Objective 1
Maximum violations: Integrality 0 Constraints 0 Objective 0

-----------------------------
Fri Feb 21 17:08:15 EST 2014
-----------------------------

=ready=
@01 instances/decomplib/n1c3w1a.mps ===========
-----------------------------
Fri Feb 21 17:08:15 EST 2014
-----------------------------
@03 1393020495
Welcome to the CBC MILP Solver 
Version: Trunk (unstable) 
Build Date: Feb  9 2014 
Revision Number: 2007 

command line - /home/jiw508/miplib2010-1.0.3/bin/cbc -import instances/decomplib/n1c3w1a.mps -sec 3600 -ratio 0.0 -solve -solution /home/jiw508/miplib2010-1.0.3/results/solutions/decomp.cbc.n1c3w1a.mps.sol (default strategy 1)
At line 1 NAME check/instances/bpp/N1C3W1_A.l
At line 2 ROWS
At line 78 COLUMNS
At line 2505 RHS
At line 2543 BOUNDS
At line 3768 ENDATA
Problem check/instances/bpp/N1C3W1_A.l has 74 rows, 1224 columns and 2424 elements
Coin0008I check/instances/bpp/N1C3W1_A.l read with 0 errors
seconds was changed from 1e+100 to 3600
ratioGap was changed from 0 to 0
Continuous objective value is 15.8733 - 0.02 seconds
Cgl0004I processed model has 74 rows, 1224 columns (1224 integer) and 2424 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 29 integers unsatisfied sum - 7.1514
Cbc0038I Pass   1: suminf.    3.24404 (16) obj. 18.2933 iterations 75
Cbc0038I Pass   2: suminf.    3.68410 (13) obj. 21 iterations 42
Cbc0038I Pass   3: suminf.    1.52562 (8) obj. 21 iterations 24
Cbc0038I Pass   4: suminf.    2.58082 (9) obj. 21 iterations 19
Cbc0038I Pass   5: suminf.    1.60166 (8) obj. 21 iterations 13
Cbc0038I Pass   6: suminf.    2.26623 (8) obj. 21 iterations 18
Cbc0038I Pass   7: suminf.    1.28706 (8) obj. 21 iterations 14
Cbc0038I Pass   8: suminf.   10.61913 (42) obj. 24 iterations 215
Cbc0038I Pass   9: suminf.    6.02037 (31) obj. 24 iterations 68
Cbc0038I Pass  10: suminf.    5.42329 (30) obj. 24 iterations 23
Cbc0038I Pass  11: suminf.    5.30669 (31) obj. 24 iterations 5
Cbc0038I Pass  12: suminf.    6.76999 (31) obj. 24 iterations 36
Cbc0038I Pass  13: suminf.    5.95855 (32) obj. 24 iterations 27
Cbc0038I Pass  14: suminf.    5.60439 (32) obj. 24 iterations 8
Cbc0038I Pass  15: suminf.    6.81445 (30) obj. 24 iterations 30
Cbc0038I Pass  16: suminf.    5.32387 (32) obj. 24 iterations 42
Cbc0038I Pass  17: suminf.    4.75597 (32) obj. 24 iterations 6
Cbc0038I Pass  18: suminf.    5.92672 (31) obj. 24 iterations 33
Cbc0038I Pass  19: suminf.    4.96005 (32) obj. 24 iterations 28
Cbc0038I Pass  20: suminf.    6.28932 (31) obj. 24 iterations 34
Cbc0038I Pass  21: suminf.    5.02663 (29) obj. 24 iterations 32
Cbc0038I Pass  22: suminf.    6.60592 (29) obj. 24 iterations 34
Cbc0038I Pass  23: suminf.    5.21717 (28) obj. 24 iterations 37
Cbc0038I Pass  24: suminf.    5.21717 (28) obj. 24 iterations 1
Cbc0038I Pass  25: suminf.    6.02925 (28) obj. 24 iterations 31
Cbc0038I Pass  26: suminf.   10.92946 (41) obj. 24 iterations 176
Cbc0038I Pass  27: suminf.    5.68455 (34) obj. 24 iterations 66
Cbc0038I Pass  28: suminf.    5.38947 (33) obj. 24 iterations 9
Cbc0038I Pass  29: suminf.    7.04735 (34) obj. 24 iterations 56
Cbc0038I Pass  30: suminf.    6.46485 (33) obj. 24 iterations 34
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 853 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 1224 columns, reduced to 70 rows 332 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to 18 (0.88 seconds)
Cbc0038I Round again with cutoff of 16.8874
Cbc0038I Pass  30: suminf.    4.64995 (22) obj. 16.8874 iterations 7
Cbc0038I Pass  31: suminf.    6.87446 (24) obj. 16.8874 iterations 56
Cbc0038I Pass  32: suminf.    5.27697 (21) obj. 16.8874 iterations 23
Cbc0038I Pass  33: suminf.    6.36848 (21) obj. 16.8874 iterations 37
Cbc0038I Pass  34: suminf.    5.14610 (20) obj. 16.8874 iterations 19
Cbc0038I Pass  35: suminf.    5.94403 (23) obj. 16.8874 iterations 36
Cbc0038I Pass  36: suminf.    5.58599 (21) obj. 16.8874 iterations 13
Cbc0038I Pass  37: suminf.    5.89621 (24) obj. 16.8874 iterations 27
Cbc0038I Pass  38: suminf.    5.89735 (23) obj. 16.8874 iterations 7
Cbc0038I Pass  39: suminf.    7.07635 (24) obj. 16.8874 iterations 41
Cbc0038I Pass  40: suminf.    5.08590 (20) obj. 16.8874 iterations 30
Cbc0038I Pass  41: suminf.    4.86590 (20) obj. 16.8874 iterations 10
Cbc0038I Pass  42: suminf.    5.46741 (21) obj. 16.8874 iterations 32
Cbc0038I Pass  43: suminf.    4.96590 (19) obj. 16.8874 iterations 26
Cbc0038I Pass  44: suminf.    5.83603 (22) obj. 16.8874 iterations 39
Cbc0038I Pass  45: suminf.    5.83603 (22) obj. 16.8874 iterations 13
Cbc0038I Pass  46: suminf.    5.42590 (22) obj. 16.8874 iterations 36
Cbc0038I Pass  47: suminf.    5.18590 (21) obj. 16.8874 iterations 16
Cbc0038I Pass  48: suminf.    4.96590 (19) obj. 16.8874 iterations 10
Cbc0038I Pass  49: suminf.    5.52686 (20) obj. 16.8874 iterations 29
Cbc0038I Pass  50: suminf.    5.10686 (20) obj. 16.8874 iterations 23
Cbc0038I Pass  51: suminf.    5.38590 (21) obj. 16.8874 iterations 30
Cbc0038I Pass  52: suminf.    8.68795 (38) obj. 16.8874 iterations 182
Cbc0038I Pass  53: suminf.    6.17468 (32) obj. 16.88 iterations 61
Cbc0038I Pass  54: suminf.    6.17468 (32) obj. 16.88 iterations 1
Cbc0038I Pass  55: suminf.    6.41581 (29) obj. 16.8874 iterations 53
Cbc0038I Pass  56: suminf.    5.89429 (29) obj. 16.8874 iterations 28
Cbc0038I Pass  57: suminf.    5.89429 (29) obj. 16.8874 iterations 6
Cbc0038I Pass  58: suminf.    6.12508 (29) obj. 16.8874 iterations 39
Cbc0038I Pass  59: suminf.    5.78508 (29) obj. 16.8874 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1003 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 1224 columns, reduced to 69 rows 211 columns
Cbc0038I Mini branch and bound did not improve solution (1.48 seconds)
Cbc0038I After 1.48 seconds - Feasibility pump exiting with objective of 18 - took 1.40 seconds
Cbc0012I Integer solution of 18 found by feasibility pump after 0 iterations and 0 nodes (1.49 seconds)
Cbc0031I 27 added rows had average density of 76.444444
Cbc0013I At root node, 27 cuts changed objective from 15.873333 to 15.873333 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 105 row cuts average 2.8 elements, 0 column cuts (24 active)  in 0.152 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 90 row cuts average 666.5 elements, 0 column cuts (0 active)  in 0.444 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 44 row cuts average 57.3 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 104 row cuts average 103.2 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 18 best solution, best possible 15.873333 (3.14 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 64 rows 107 columns
Cbc0012I Integer solution of 17 found by RINS after 2343 iterations and 41 nodes (4.61 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 0 rows 0 columns
Cbc0038I Full problem 74 rows 1224 columns, reduced to 44 rows 65 columns
Cbc0038I Full problem 74 rows 1224 columns, reduced to 54 rows 88 columns
Cbc0038I Full problem 74 rows 1224 columns, reduced to 61 rows 99 columns
Cbc0038I Full problem 74 rows 1224 columns, reduced to 64 rows 100 columns
Cbc0038I Full problem 74 rows 1224 columns, reduced to 64 rows 102 columns
Cbc0038I Full problem 74 rows 1224 columns, reduced to 59 rows 95 columns
Cbc0038I Full problem 74 rows 1224 columns, reduced to 63 rows 100 columns
Cbc0010I After 1000 nodes, 200 on tree, 17 best solution, best possible 15.873333 (13.79 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 64 rows 102 columns
Cbc0038I Full problem 74 rows 1224 columns, reduced to 64 rows 101 columns
Cbc0038I Full problem 74 rows 1224 columns, reduced to 63 rows 103 columns
Cbc0010I After 2000 nodes, 182 on tree, 17 best solution, best possible 15.873333 (18.68 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 63 rows 100 columns
Cbc0038I Full problem 74 rows 1224 columns, reduced to 62 rows 99 columns
Cbc0010I After 3000 nodes, 157 on tree, 17 best solution, best possible 15.873333 (23.42 seconds)
Cbc0010I After 4000 nodes, 162 on tree, 17 best solution, best possible 15.873333 (27.59 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 64 rows 106 columns
Cbc0010I After 5000 nodes, 162 on tree, 17 best solution, best possible 15.873333 (31.76 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 63 rows 102 columns
Cbc0010I After 6000 nodes, 153 on tree, 17 best solution, best possible 15.873333 (35.78 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 65 rows 106 columns
Cbc0010I After 7000 nodes, 167 on tree, 17 best solution, best possible 15.873333 (40.65 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 62 rows 97 columns
Cbc0010I After 8000 nodes, 162 on tree, 17 best solution, best possible 15.873333 (45.60 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 63 rows 100 columns
Cbc0038I Full problem 74 rows 1224 columns, reduced to 63 rows 102 columns
Cbc0010I After 9000 nodes, 172 on tree, 17 best solution, best possible 15.873333 (49.99 seconds)
Cbc0010I After 10000 nodes, 158 on tree, 17 best solution, best possible 15.873333 (54.10 seconds)
Cbc0010I After 11000 nodes, 158 on tree, 17 best solution, best possible 15.873333 (58.44 seconds)
Cbc0010I After 12000 nodes, 431 on tree, 17 best solution, best possible 15.873333 (67.48 seconds)
Cbc0010I After 13000 nodes, 696 on tree, 17 best solution, best possible 15.873333 (78.40 seconds)
Cbc0010I After 14000 nodes, 704 on tree, 17 best solution, best possible 15.873333 (82.83 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 62 rows 102 columns
Cbc0010I After 15000 nodes, 938 on tree, 17 best solution, best possible 15.873333 (95.28 seconds)
Cbc0010I After 16000 nodes, 1206 on tree, 17 best solution, best possible 15.873333 (105.63 seconds)
Cbc0010I After 17000 nodes, 1469 on tree, 17 best solution, best possible 15.873333 (114.93 seconds)
Cbc0010I After 18000 nodes, 1466 on tree, 17 best solution, best possible 15.873333 (119.66 seconds)
Cbc0010I After 19000 nodes, 1677 on tree, 17 best solution, best possible 15.873333 (128.67 seconds)
Cbc0010I After 20000 nodes, 1910 on tree, 17 best solution, best possible 15.873333 (138.10 seconds)
Cbc0010I After 21000 nodes, 2115 on tree, 17 best solution, best possible 15.873333 (148.79 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 63 rows 102 columns
Cbc0010I After 22000 nodes, 2112 on tree, 17 best solution, best possible 15.873333 (154.53 seconds)
Cbc0010I After 23000 nodes, 2354 on tree, 17 best solution, best possible 15.873333 (167.39 seconds)
Cbc0010I After 24000 nodes, 2582 on tree, 17 best solution, best possible 15.873333 (180.41 seconds)
Cbc0010I After 25000 nodes, 2881 on tree, 17 best solution, best possible 15.873333 (189.94 seconds)
Cbc0010I After 26000 nodes, 2876 on tree, 17 best solution, best possible 15.873333 (195.59 seconds)
Cbc0010I After 27000 nodes, 3231 on tree, 17 best solution, best possible 15.873333 (205.69 seconds)
Cbc0010I After 28000 nodes, 3457 on tree, 17 best solution, best possible 15.873333 (217.30 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 59 rows 99 columns
Cbc0010I After 29000 nodes, 3711 on tree, 17 best solution, best possible 15.873333 (232.98 seconds)
Cbc0010I After 30000 nodes, 3771 on tree, 17 best solution, best possible 15.873333 (237.21 seconds)
Cbc0010I After 31000 nodes, 4039 on tree, 17 best solution, best possible 15.873333 (252.08 seconds)
Cbc0010I After 32000 nodes, 4348 on tree, 17 best solution, best possible 15.873333 (263.68 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 63 rows 104 columns
Cbc0010I After 33000 nodes, 4578 on tree, 17 best solution, best possible 15.873333 (277.93 seconds)
Cbc0010I After 34000 nodes, 4576 on tree, 17 best solution, best possible 15.873333 (282.89 seconds)
Cbc0010I After 35000 nodes, 4835 on tree, 17 best solution, best possible 15.873333 (295.65 seconds)
Cbc0010I After 36000 nodes, 5093 on tree, 17 best solution, best possible 15.873333 (305.06 seconds)
Cbc0010I After 37000 nodes, 5311 on tree, 17 best solution, best possible 15.873333 (316.03 seconds)
Cbc0010I After 38000 nodes, 5329 on tree, 17 best solution, best possible 15.873333 (320.59 seconds)
Cbc0010I After 39000 nodes, 5644 on tree, 17 best solution, best possible 15.873333 (337.49 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 55 rows 88 columns
Cbc0010I After 40000 nodes, 5952 on tree, 17 best solution, best possible 15.873333 (350.18 seconds)
Cbc0010I After 41000 nodes, 6236 on tree, 17 best solution, best possible 15.873333 (365.79 seconds)
Cbc0010I After 42000 nodes, 6258 on tree, 17 best solution, best possible 15.873333 (369.96 seconds)
Cbc0010I After 43000 nodes, 6487 on tree, 17 best solution, best possible 15.873333 (382.18 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 61 rows 99 columns
Cbc0010I After 44000 nodes, 6724 on tree, 17 best solution, best possible 15.873333 (395.84 seconds)
Cbc0010I After 45000 nodes, 6973 on tree, 17 best solution, best possible 15.873333 (408.99 seconds)
Cbc0010I After 46000 nodes, 6989 on tree, 17 best solution, best possible 15.873333 (413.49 seconds)
Cbc0010I After 47000 nodes, 7223 on tree, 17 best solution, best possible 15.873333 (426.37 seconds)
Cbc0010I After 48000 nodes, 7473 on tree, 17 best solution, best possible 15.873333 (440.50 seconds)
Cbc0010I After 49000 nodes, 7807 on tree, 17 best solution, best possible 15.873333 (454.86 seconds)
Cbc0010I After 50000 nodes, 7793 on tree, 17 best solution, best possible 15.873333 (459.26 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 51 rows 84 columns
Cbc0010I After 51000 nodes, 8133 on tree, 17 best solution, best possible 15.873333 (470.84 seconds)
Cbc0010I After 52000 nodes, 8510 on tree, 17 best solution, best possible 15.873333 (482.09 seconds)
Cbc0010I After 53000 nodes, 8842 on tree, 17 best solution, best possible 15.873333 (490.69 seconds)
Cbc0010I After 54000 nodes, 8861 on tree, 17 best solution, best possible 15.873333 (495.33 seconds)
Cbc0010I After 55000 nodes, 9124 on tree, 17 best solution, best possible 15.873333 (502.17 seconds)
Cbc0010I After 56000 nodes, 9354 on tree, 17 best solution, best possible 15.873333 (510.18 seconds)
Cbc0010I After 57000 nodes, 9600 on tree, 17 best solution, best possible 15.873333 (519.10 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 67 rows 109 columns
Cbc0010I After 58000 nodes, 9593 on tree, 17 best solution, best possible 15.873333 (523.77 seconds)
Cbc0010I After 59000 nodes, 9831 on tree, 17 best solution, best possible 15.873333 (538.17 seconds)
Cbc0010I After 60000 nodes, 10056 on tree, 17 best solution, best possible 15.873333 (550.95 seconds)
Cbc0010I After 61000 nodes, 10174 on tree, 17 best solution, best possible 15.873333 (555.17 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 69 rows 113 columns
Cbc0010I After 62000 nodes, 10128 on tree, 17 best solution, best possible 15.873333 (559.63 seconds)
Cbc0010I After 63000 nodes, 10253 on tree, 17 best solution, best possible 15.873333 (564.23 seconds)
Cbc0010I After 64000 nodes, 10292 on tree, 17 best solution, best possible 15.873333 (567.98 seconds)
Cbc0010I After 65000 nodes, 10280 on tree, 17 best solution, best possible 15.873333 (572.76 seconds)
Cbc0010I After 66000 nodes, 10416 on tree, 17 best solution, best possible 15.873333 (578.24 seconds)
Cbc0010I After 67000 nodes, 10665 on tree, 17 best solution, best possible 15.873333 (583.79 seconds)
Cbc0010I After 68000 nodes, 10758 on tree, 17 best solution, best possible 15.873333 (588.20 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 62 rows 97 columns
Cbc0010I After 69000 nodes, 10797 on tree, 17 best solution, best possible 15.873333 (592.36 seconds)
Cbc0010I After 70000 nodes, 10802 on tree, 17 best solution, best possible 15.873333 (596.71 seconds)
Cbc0010I After 71000 nodes, 10912 on tree, 17 best solution, best possible 15.873333 (600.80 seconds)
Cbc0010I After 72000 nodes, 10950 on tree, 17 best solution, best possible 15.873333 (604.74 seconds)
Cbc0010I After 73000 nodes, 10938 on tree, 17 best solution, best possible 15.873333 (608.70 seconds)
Cbc0010I After 74000 nodes, 10945 on tree, 17 best solution, best possible 15.873333 (614.23 seconds)
Cbc0010I After 75000 nodes, 11127 on tree, 17 best solution, best possible 15.873333 (618.67 seconds)
Cbc0010I After 76000 nodes, 11228 on tree, 17 best solution, best possible 15.873333 (622.70 seconds)
Cbc0010I After 77000 nodes, 11273 on tree, 17 best solution, best possible 15.873333 (626.66 seconds)
Cbc0010I After 78000 nodes, 11271 on tree, 17 best solution, best possible 15.873333 (630.88 seconds)
Cbc0010I After 79000 nodes, 11308 on tree, 17 best solution, best possible 15.873333 (634.42 seconds)
Cbc0010I After 80000 nodes, 11353 on tree, 17 best solution, best possible 15.873333 (638.23 seconds)
Cbc0010I After 81000 nodes, 11333 on tree, 17 best solution, best possible 15.873333 (641.78 seconds)
Cbc0010I After 82000 nodes, 11324 on tree, 17 best solution, best possible 15.873333 (646.01 seconds)
Cbc0010I After 83000 nodes, 11387 on tree, 17 best solution, best possible 15.873333 (649.88 seconds)
Cbc0010I After 84000 nodes, 11433 on tree, 17 best solution, best possible 15.873333 (653.78 seconds)
Cbc0010I After 85000 nodes, 11457 on tree, 17 best solution, best possible 15.873333 (657.50 seconds)
Cbc0010I After 86000 nodes, 11456 on tree, 17 best solution, best possible 15.873333 (662.03 seconds)
Cbc0010I After 87000 nodes, 11510 on tree, 17 best solution, best possible 15.873333 (666.22 seconds)
Cbc0010I After 88000 nodes, 11493 on tree, 17 best solution, best possible 15.873333 (670.07 seconds)
Cbc0010I After 89000 nodes, 11477 on tree, 17 best solution, best possible 15.873333 (674.17 seconds)
Cbc0010I After 90000 nodes, 11475 on tree, 17 best solution, best possible 15.873333 (678.06 seconds)
Cbc0010I After 91000 nodes, 11539 on tree, 17 best solution, best possible 15.873333 (681.58 seconds)
Cbc0010I After 92000 nodes, 11558 on tree, 17 best solution, best possible 15.873333 (685.25 seconds)
Cbc0010I After 93000 nodes, 11534 on tree, 17 best solution, best possible 15.873333 (689.02 seconds)
Cbc0010I After 94000 nodes, 11534 on tree, 17 best solution, best possible 15.873333 (692.89 seconds)
Cbc0010I After 95000 nodes, 11647 on tree, 17 best solution, best possible 15.873333 (697.24 seconds)
Cbc0010I After 96000 nodes, 11704 on tree, 17 best solution, best possible 15.873333 (700.99 seconds)
Cbc0010I After 97000 nodes, 11685 on tree, 17 best solution, best possible 15.873333 (704.53 seconds)
Cbc0010I After 98000 nodes, 11685 on tree, 17 best solution, best possible 15.873333 (708.36 seconds)
Cbc0010I After 99000 nodes, 11768 on tree, 17 best solution, best possible 15.873333 (712.62 seconds)
Cbc0010I After 100000 nodes, 11751 on tree, 17 best solution, best possible 15.873333 (716.37 seconds)
Cbc0010I After 101000 nodes, 11723 on tree, 17 best solution, best possible 15.873333 (720.04 seconds)
Cbc0010I After 102000 nodes, 11975 on tree, 17 best solution, best possible 15.873333 (731.03 seconds)
Cbc0010I After 103000 nodes, 12028 on tree, 17 best solution, best possible 15.873333 (734.23 seconds)
Cbc0010I After 104000 nodes, 12046 on tree, 17 best solution, best possible 15.873333 (737.45 seconds)
Cbc0010I After 105000 nodes, 11998 on tree, 17 best solution, best possible 15.873333 (740.37 seconds)
Cbc0010I After 106000 nodes, 12194 on tree, 17 best solution, best possible 15.873333 (749.36 seconds)
Cbc0010I After 107000 nodes, 12259 on tree, 17 best solution, best possible 15.873333 (752.54 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 65 rows 101 columns
Cbc0010I After 108000 nodes, 12338 on tree, 17 best solution, best possible 15.873333 (756.06 seconds)
Cbc0010I After 109000 nodes, 12319 on tree, 17 best solution, best possible 15.873333 (759.08 seconds)
Cbc0010I After 110000 nodes, 12585 on tree, 17 best solution, best possible 15.873333 (767.61 seconds)
Cbc0010I After 111000 nodes, 12638 on tree, 17 best solution, best possible 15.873333 (770.68 seconds)
Cbc0010I After 112000 nodes, 12767 on tree, 17 best solution, best possible 15.873333 (774.35 seconds)
Cbc0010I After 113000 nodes, 12830 on tree, 17 best solution, best possible 15.873333 (777.83 seconds)
Cbc0010I After 114000 nodes, 13100 on tree, 17 best solution, best possible 15.873333 (789.37 seconds)
Cbc0010I After 115000 nodes, 13198 on tree, 17 best solution, best possible 15.873333 (792.68 seconds)
Cbc0010I After 116000 nodes, 13173 on tree, 17 best solution, best possible 15.873333 (796.02 seconds)
Cbc0010I After 117000 nodes, 13075 on tree, 17 best solution, best possible 15.873333 (799.35 seconds)
Cbc0010I After 118000 nodes, 13304 on tree, 17 best solution, best possible 15.873333 (809.56 seconds)
Cbc0010I After 119000 nodes, 13336 on tree, 17 best solution, best possible 15.873333 (812.18 seconds)
Cbc0010I After 120000 nodes, 13366 on tree, 17 best solution, best possible 15.873333 (815.01 seconds)
Cbc0010I After 121000 nodes, 13354 on tree, 17 best solution, best possible 15.873333 (817.83 seconds)
Cbc0010I After 122000 nodes, 13549 on tree, 17 best solution, best possible 15.873333 (830.02 seconds)
Cbc0010I After 123000 nodes, 13554 on tree, 17 best solution, best possible 15.873333 (832.99 seconds)
Cbc0010I After 124000 nodes, 13621 on tree, 17 best solution, best possible 15.873333 (836.06 seconds)
Cbc0010I After 125000 nodes, 13642 on tree, 17 best solution, best possible 15.873333 (838.90 seconds)
Cbc0010I After 126000 nodes, 13900 on tree, 17 best solution, best possible 15.873333 (850.85 seconds)
Cbc0010I After 127000 nodes, 13915 on tree, 17 best solution, best possible 15.873333 (853.73 seconds)
Cbc0010I After 128000 nodes, 13909 on tree, 17 best solution, best possible 15.873333 (856.65 seconds)
Cbc0010I After 129000 nodes, 13846 on tree, 17 best solution, best possible 15.873333 (859.59 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 60 rows 98 columns
Cbc0010I After 130000 nodes, 14111 on tree, 17 best solution, best possible 15.873333 (871.47 seconds)
Cbc0010I After 131000 nodes, 14147 on tree, 17 best solution, best possible 15.873333 (874.45 seconds)
Cbc0010I After 132000 nodes, 14186 on tree, 17 best solution, best possible 15.873333 (877.74 seconds)
Cbc0010I After 133000 nodes, 14187 on tree, 17 best solution, best possible 15.873333 (880.69 seconds)
Cbc0010I After 134000 nodes, 14615 on tree, 17 best solution, best possible 15.873333 (890.69 seconds)
Cbc0010I After 135000 nodes, 14620 on tree, 17 best solution, best possible 15.873333 (893.90 seconds)
Cbc0010I After 136000 nodes, 14631 on tree, 17 best solution, best possible 15.873333 (897.17 seconds)
Cbc0010I After 137000 nodes, 14601 on tree, 17 best solution, best possible 15.873333 (900.54 seconds)
Cbc0010I After 138000 nodes, 14948 on tree, 17 best solution, best possible 15.873333 (907.80 seconds)
Cbc0010I After 139000 nodes, 15010 on tree, 17 best solution, best possible 15.873333 (910.74 seconds)
Cbc0010I After 140000 nodes, 15013 on tree, 17 best solution, best possible 15.873333 (913.23 seconds)
Cbc0010I After 141000 nodes, 15031 on tree, 17 best solution, best possible 15.873333 (915.81 seconds)
Cbc0010I After 142000 nodes, 15320 on tree, 17 best solution, best possible 15.873333 (925.15 seconds)
Cbc0010I After 143000 nodes, 15388 on tree, 17 best solution, best possible 15.873333 (927.69 seconds)
Cbc0010I After 144000 nodes, 15406 on tree, 17 best solution, best possible 15.873333 (930.15 seconds)
Cbc0010I After 145000 nodes, 15379 on tree, 17 best solution, best possible 15.873333 (932.55 seconds)
Cbc0010I After 146000 nodes, 15733 on tree, 17 best solution, best possible 15.873333 (940.46 seconds)
Cbc0010I After 147000 nodes, 15774 on tree, 17 best solution, best possible 15.873333 (942.95 seconds)
Cbc0010I After 148000 nodes, 15751 on tree, 17 best solution, best possible 15.873333 (945.32 seconds)
Cbc0010I After 149000 nodes, 15693 on tree, 17 best solution, best possible 15.873333 (947.74 seconds)
Cbc0010I After 150000 nodes, 15903 on tree, 17 best solution, best possible 15.873333 (958.76 seconds)
Cbc0010I After 151000 nodes, 16041 on tree, 17 best solution, best possible 15.873333 (961.80 seconds)
Cbc0010I After 152000 nodes, 16110 on tree, 17 best solution, best possible 15.873333 (964.70 seconds)
Cbc0010I After 153000 nodes, 16113 on tree, 17 best solution, best possible 15.873333 (967.71 seconds)
Cbc0010I After 154000 nodes, 16317 on tree, 17 best solution, best possible 15.873333 (979.23 seconds)
Cbc0010I After 155000 nodes, 16357 on tree, 17 best solution, best possible 15.873333 (982.23 seconds)
Cbc0010I After 156000 nodes, 16421 on tree, 17 best solution, best possible 15.873333 (985.13 seconds)
Cbc0010I After 157000 nodes, 16356 on tree, 17 best solution, best possible 15.873333 (988.13 seconds)
Cbc0010I After 158000 nodes, 16598 on tree, 17 best solution, best possible 15.873333 (999.62 seconds)
Cbc0010I After 159000 nodes, 16687 on tree, 17 best solution, best possible 15.873333 (1002.63 seconds)
Cbc0010I After 160000 nodes, 16702 on tree, 17 best solution, best possible 15.873333 (1005.35 seconds)
Cbc0010I After 161000 nodes, 16683 on tree, 17 best solution, best possible 15.873333 (1007.92 seconds)
Cbc0010I After 162000 nodes, 16857 on tree, 17 best solution, best possible 15.873333 (1020.36 seconds)
Cbc0010I After 163000 nodes, 16865 on tree, 17 best solution, best possible 15.873333 (1023.27 seconds)
Cbc0010I After 164000 nodes, 16923 on tree, 17 best solution, best possible 15.873333 (1026.03 seconds)
Cbc0010I After 165000 nodes, 16925 on tree, 17 best solution, best possible 15.873333 (1028.82 seconds)
Cbc0010I After 166000 nodes, 17227 on tree, 17 best solution, best possible 15.873333 (1038.68 seconds)
Cbc0010I After 167000 nodes, 17257 on tree, 17 best solution, best possible 15.873333 (1041.22 seconds)
Cbc0010I After 168000 nodes, 17235 on tree, 17 best solution, best possible 15.873333 (1043.81 seconds)
Cbc0010I After 169000 nodes, 17210 on tree, 17 best solution, best possible 15.873333 (1046.77 seconds)
Cbc0010I After 170000 nodes, 17450 on tree, 17 best solution, best possible 15.873333 (1058.16 seconds)
Cbc0010I After 171000 nodes, 17482 on tree, 17 best solution, best possible 15.873333 (1060.94 seconds)
Cbc0010I After 172000 nodes, 17497 on tree, 17 best solution, best possible 15.873333 (1063.61 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 65 rows 100 columns
Cbc0010I After 173000 nodes, 17474 on tree, 17 best solution, best possible 15.873333 (1066.33 seconds)
Cbc0010I After 174000 nodes, 17725 on tree, 17 best solution, best possible 15.873333 (1076.48 seconds)
Cbc0010I After 175000 nodes, 17722 on tree, 17 best solution, best possible 15.873333 (1078.96 seconds)
Cbc0010I After 176000 nodes, 17708 on tree, 17 best solution, best possible 15.873333 (1081.55 seconds)
Cbc0010I After 177000 nodes, 17670 on tree, 17 best solution, best possible 15.873333 (1084.09 seconds)
Cbc0010I After 178000 nodes, 17917 on tree, 17 best solution, best possible 15.873333 (1092.69 seconds)
Cbc0010I After 179000 nodes, 17929 on tree, 17 best solution, best possible 15.873333 (1095.22 seconds)
Cbc0010I After 180000 nodes, 17926 on tree, 17 best solution, best possible 15.873333 (1097.77 seconds)
Cbc0010I After 181000 nodes, 17857 on tree, 17 best solution, best possible 15.873333 (1100.62 seconds)
Cbc0010I After 182000 nodes, 18125 on tree, 17 best solution, best possible 15.873333 (1109.68 seconds)
Cbc0010I After 183000 nodes, 18208 on tree, 17 best solution, best possible 15.873333 (1112.93 seconds)
Cbc0010I After 184000 nodes, 18222 on tree, 17 best solution, best possible 15.873333 (1116.29 seconds)
Cbc0010I After 185000 nodes, 18196 on tree, 17 best solution, best possible 15.873333 (1119.19 seconds)
Cbc0010I After 186000 nodes, 18444 on tree, 17 best solution, best possible 15.873333 (1129.41 seconds)
Cbc0010I After 187000 nodes, 18480 on tree, 17 best solution, best possible 15.873333 (1132.07 seconds)
Cbc0010I After 188000 nodes, 18492 on tree, 17 best solution, best possible 15.873333 (1134.57 seconds)
Cbc0010I After 189000 nodes, 18466 on tree, 17 best solution, best possible 15.873333 (1137.10 seconds)
Cbc0010I After 190000 nodes, 18730 on tree, 17 best solution, best possible 15.873333 (1148.06 seconds)
Cbc0010I After 191000 nodes, 18713 on tree, 17 best solution, best possible 15.873333 (1151.43 seconds)
Cbc0010I After 192000 nodes, 18705 on tree, 17 best solution, best possible 15.873333 (1155.03 seconds)
Cbc0010I After 193000 nodes, 18659 on tree, 17 best solution, best possible 15.873333 (1158.42 seconds)
Cbc0010I After 194000 nodes, 18927 on tree, 17 best solution, best possible 15.873333 (1167.71 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 71 rows 114 columns
Cbc0010I After 195000 nodes, 18923 on tree, 17 best solution, best possible 15.873333 (1172.38 seconds)
Cbc0010I After 196000 nodes, 18926 on tree, 17 best solution, best possible 15.873333 (1176.22 seconds)
Cbc0010I After 197000 nodes, 18909 on tree, 17 best solution, best possible 15.873333 (1180.42 seconds)
Cbc0010I After 198000 nodes, 18922 on tree, 17 best solution, best possible 15.873333 (1184.29 seconds)
Cbc0010I After 199000 nodes, 18913 on tree, 17 best solution, best possible 15.873333 (1187.71 seconds)
Cbc0010I After 200000 nodes, 18927 on tree, 17 best solution, best possible 15.873333 (1191.24 seconds)
Cbc0010I After 201000 nodes, 18920 on tree, 17 best solution, best possible 15.873333 (1194.04 seconds)
Cbc0010I After 202000 nodes, 18907 on tree, 17 best solution, best possible 15.873333 (1196.56 seconds)
Cbc0010I After 203000 nodes, 18911 on tree, 17 best solution, best possible 15.873333 (1200.39 seconds)
Cbc0010I After 204000 nodes, 18909 on tree, 17 best solution, best possible 15.873333 (1204.33 seconds)
Cbc0010I After 205000 nodes, 18927 on tree, 17 best solution, best possible 15.873333 (1208.26 seconds)
Cbc0010I After 206000 nodes, 18908 on tree, 17 best solution, best possible 15.873333 (1212.04 seconds)
Cbc0010I After 207000 nodes, 18917 on tree, 17 best solution, best possible 15.873333 (1216.14 seconds)
Cbc0010I After 208000 nodes, 18915 on tree, 17 best solution, best possible 15.873333 (1219.15 seconds)
Cbc0010I After 209000 nodes, 18919 on tree, 17 best solution, best possible 15.873333 (1222.32 seconds)
Cbc0010I After 210000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (1226.26 seconds)
Cbc0010I After 211000 nodes, 18908 on tree, 17 best solution, best possible 15.873333 (1230.42 seconds)
Cbc0010I After 212000 nodes, 18910 on tree, 17 best solution, best possible 15.873333 (1234.12 seconds)
Cbc0010I After 213000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (1237.83 seconds)
Cbc0010I After 214000 nodes, 18911 on tree, 17 best solution, best possible 15.873333 (1241.38 seconds)
Cbc0010I After 215000 nodes, 18910 on tree, 17 best solution, best possible 15.873333 (1244.37 seconds)
Cbc0010I After 216000 nodes, 18917 on tree, 17 best solution, best possible 15.873333 (1247.79 seconds)
Cbc0010I After 217000 nodes, 18919 on tree, 17 best solution, best possible 15.873333 (1251.11 seconds)
Cbc0010I After 218000 nodes, 18927 on tree, 17 best solution, best possible 15.873333 (1254.33 seconds)
Cbc0010I After 219000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (1257.34 seconds)
Cbc0010I After 220000 nodes, 18910 on tree, 17 best solution, best possible 15.873333 (1260.40 seconds)
Cbc0010I After 221000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (1263.87 seconds)
Cbc0010I After 222000 nodes, 18907 on tree, 17 best solution, best possible 15.873333 (1266.97 seconds)
Cbc0010I After 223000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (1270.32 seconds)
Cbc0010I After 224000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (1274.63 seconds)
Cbc0010I After 225000 nodes, 18907 on tree, 17 best solution, best possible 15.873333 (1279.13 seconds)
Cbc0010I After 226000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (1282.61 seconds)
Cbc0010I After 227000 nodes, 18914 on tree, 17 best solution, best possible 15.873333 (1286.07 seconds)
Cbc0010I After 228000 nodes, 18914 on tree, 17 best solution, best possible 15.873333 (1290.49 seconds)
Cbc0010I After 229000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (1294.39 seconds)
Cbc0010I After 230000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (1297.97 seconds)
Cbc0010I After 231000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (1301.96 seconds)
Cbc0010I After 232000 nodes, 18914 on tree, 17 best solution, best possible 15.873333 (1306.33 seconds)
Cbc0010I After 233000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (1310.12 seconds)
Cbc0010I After 234000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (1314.07 seconds)
Cbc0010I After 235000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (1318.26 seconds)
Cbc0010I After 236000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (1322.17 seconds)
Cbc0010I After 237000 nodes, 18907 on tree, 17 best solution, best possible 15.873333 (1326.16 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 71 rows 115 columns
Cbc0010I After 238000 nodes, 18907 on tree, 17 best solution, best possible 15.873333 (1330.21 seconds)
Cbc0010I After 239000 nodes, 18905 on tree, 17 best solution, best possible 15.873333 (1334.05 seconds)
Cbc0010I After 240000 nodes, 18905 on tree, 17 best solution, best possible 15.873333 (1337.10 seconds)
Cbc0010I After 241000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (1340.58 seconds)
Cbc0010I After 242000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (1344.10 seconds)
Cbc0010I After 243000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (1347.43 seconds)
Cbc0010I After 244000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (1351.24 seconds)
Cbc0010I After 245000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (1354.58 seconds)
Cbc0010I After 246000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (1357.51 seconds)
Cbc0010I After 247000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (1360.23 seconds)
Cbc0010I After 248000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (1363.25 seconds)
Cbc0010I After 249000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (1366.43 seconds)
Cbc0010I After 250000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (1369.31 seconds)
Cbc0010I After 251000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (1372.79 seconds)
Cbc0010I After 252000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (1376.66 seconds)
Cbc0010I After 253000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (1380.43 seconds)
Cbc0010I After 254000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (1384.29 seconds)
Cbc0010I After 255000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (1389.12 seconds)
Cbc0010I After 256000 nodes, 18884 on tree, 17 best solution, best possible 15.873333 (1393.85 seconds)
Cbc0010I After 257000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (1398.33 seconds)
Cbc0010I After 258000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (1401.67 seconds)
Cbc0010I After 259000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (1405.46 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 71 rows 116 columns
Cbc0010I After 260000 nodes, 18882 on tree, 17 best solution, best possible 15.873333 (1408.68 seconds)
Cbc0010I After 261000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (1413.04 seconds)
Cbc0010I After 262000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (1417.92 seconds)
Cbc0010I After 263000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (1422.16 seconds)
Cbc0010I After 264000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (1426.02 seconds)
Cbc0010I After 265000 nodes, 18886 on tree, 17 best solution, best possible 15.873333 (1429.55 seconds)
Cbc0010I After 266000 nodes, 18906 on tree, 17 best solution, best possible 15.873333 (1433.75 seconds)
Cbc0010I After 267000 nodes, 18911 on tree, 17 best solution, best possible 15.873333 (1438.16 seconds)
Cbc0010I After 268000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (1442.99 seconds)
Cbc0010I After 269000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (1446.41 seconds)
Cbc0010I After 270000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (1449.73 seconds)
Cbc0010I After 271000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (1454.10 seconds)
Cbc0010I After 272000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (1458.26 seconds)
Cbc0010I After 273000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (1462.26 seconds)
Cbc0010I After 274000 nodes, 18908 on tree, 17 best solution, best possible 15.873333 (1465.94 seconds)
Cbc0010I After 275000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (1469.54 seconds)
Cbc0010I After 276000 nodes, 18914 on tree, 17 best solution, best possible 15.873333 (1473.04 seconds)
Cbc0010I After 277000 nodes, 18905 on tree, 17 best solution, best possible 15.873333 (1476.12 seconds)
Cbc0010I After 278000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (1478.95 seconds)
Cbc0010I After 279000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (1481.75 seconds)
Cbc0010I After 280000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (1484.54 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 72 rows 117 columns
Cbc0010I After 281000 nodes, 18906 on tree, 17 best solution, best possible 15.873333 (1487.60 seconds)
Cbc0010I After 282000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (1491.11 seconds)
Cbc0010I After 283000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (1495.33 seconds)
Cbc0010I After 284000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (1499.15 seconds)
Cbc0010I After 285000 nodes, 18909 on tree, 17 best solution, best possible 15.873333 (1502.81 seconds)
Cbc0010I After 286000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (1506.77 seconds)
Cbc0010I After 287000 nodes, 18907 on tree, 17 best solution, best possible 15.873333 (1510.77 seconds)
Cbc0010I After 288000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (1515.19 seconds)
Cbc0010I After 289000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (1519.38 seconds)
Cbc0010I After 290000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (1523.45 seconds)
Cbc0010I After 291000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (1528.02 seconds)
Cbc0010I After 292000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (1532.34 seconds)
Cbc0010I After 293000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (1536.73 seconds)
Cbc0010I After 294000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (1541.32 seconds)
Cbc0010I After 295000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (1545.92 seconds)
Cbc0010I After 296000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (1549.59 seconds)
Cbc0010I After 297000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (1553.64 seconds)
Cbc0010I After 298000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (1557.29 seconds)
Cbc0010I After 299000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (1560.81 seconds)
Cbc0010I After 300000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (1564.79 seconds)
Cbc0010I After 301000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (1568.95 seconds)
Cbc0010I After 302000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (1573.03 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 70 rows 114 columns
Cbc0010I After 303000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (1576.97 seconds)
Cbc0010I After 304000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (1580.97 seconds)
Cbc0010I After 305000 nodes, 18888 on tree, 17 best solution, best possible 15.873333 (1584.85 seconds)
Cbc0010I After 306000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (1588.03 seconds)
Cbc0010I After 307000 nodes, 18905 on tree, 17 best solution, best possible 15.873333 (1592.34 seconds)
Cbc0010I After 308000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (1596.00 seconds)
Cbc0010I After 309000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (1600.33 seconds)
Cbc0010I After 310000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (1604.03 seconds)
Cbc0010I After 311000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (1607.67 seconds)
Cbc0010I After 312000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (1612.11 seconds)
Cbc0010I After 313000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (1615.68 seconds)
Cbc0010I After 314000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (1619.59 seconds)
Cbc0010I After 315000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (1623.61 seconds)
Cbc0010I After 316000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (1627.29 seconds)
Cbc0010I After 317000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (1631.18 seconds)
Cbc0010I After 318000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (1635.50 seconds)
Cbc0010I After 319000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (1639.68 seconds)
Cbc0010I After 320000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (1643.95 seconds)
Cbc0010I After 321000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (1648.54 seconds)
Cbc0010I After 322000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (1652.45 seconds)
Cbc0010I After 323000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (1656.19 seconds)
Cbc0010I After 324000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (1659.95 seconds)
Cbc0010I After 325000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (1664.12 seconds)
Cbc0010I After 326000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (1668.29 seconds)
Cbc0010I After 327000 nodes, 18908 on tree, 17 best solution, best possible 15.873333 (1672.45 seconds)
Cbc0010I After 328000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (1676.36 seconds)
Cbc0010I After 329000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (1680.69 seconds)
Cbc0010I After 330000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (1685.29 seconds)
Cbc0010I After 331000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (1689.62 seconds)
Cbc0010I After 332000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (1693.77 seconds)
Cbc0010I After 333000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (1698.20 seconds)
Cbc0010I After 334000 nodes, 18906 on tree, 17 best solution, best possible 15.873333 (1702.13 seconds)
Cbc0010I After 335000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (1706.09 seconds)
Cbc0010I After 336000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (1710.17 seconds)
Cbc0010I After 337000 nodes, 18885 on tree, 17 best solution, best possible 15.873333 (1714.56 seconds)
Cbc0010I After 338000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (1718.72 seconds)
Cbc0010I After 339000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (1722.92 seconds)
Cbc0010I After 340000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (1726.99 seconds)
Cbc0010I After 341000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (1731.33 seconds)
Cbc0010I After 342000 nodes, 18905 on tree, 17 best solution, best possible 15.873333 (1735.08 seconds)
Cbc0010I After 343000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (1739.12 seconds)
Cbc0010I After 344000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (1742.76 seconds)
Cbc0010I After 345000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (1745.66 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 71 rows 116 columns
Cbc0010I After 346000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (1748.89 seconds)
Cbc0010I After 347000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (1752.57 seconds)
Cbc0010I After 348000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (1755.65 seconds)
Cbc0010I After 349000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (1759.38 seconds)
Cbc0010I After 350000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (1762.83 seconds)
Cbc0010I After 351000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (1766.20 seconds)
Cbc0010I After 352000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (1769.82 seconds)
Cbc0010I After 353000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (1772.94 seconds)
Cbc0010I After 354000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (1776.20 seconds)
Cbc0010I After 355000 nodes, 18884 on tree, 17 best solution, best possible 15.873333 (1779.21 seconds)
Cbc0010I After 356000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (1782.67 seconds)
Cbc0010I After 357000 nodes, 18888 on tree, 17 best solution, best possible 15.873333 (1786.29 seconds)
Cbc0010I After 358000 nodes, 18884 on tree, 17 best solution, best possible 15.873333 (1789.95 seconds)
Cbc0010I After 359000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (1794.10 seconds)
Cbc0010I After 360000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (1797.14 seconds)
Cbc0010I After 361000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (1800.71 seconds)
Cbc0010I After 362000 nodes, 18886 on tree, 17 best solution, best possible 15.873333 (1803.89 seconds)
Cbc0010I After 363000 nodes, 18887 on tree, 17 best solution, best possible 15.873333 (1806.70 seconds)
Cbc0010I After 364000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (1810.21 seconds)
Cbc0010I After 365000 nodes, 18888 on tree, 17 best solution, best possible 15.873333 (1813.26 seconds)
Cbc0010I After 366000 nodes, 18882 on tree, 17 best solution, best possible 15.873333 (1817.11 seconds)
Cbc0010I After 367000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (1820.31 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 71 rows 114 columns
Cbc0010I After 368000 nodes, 18883 on tree, 17 best solution, best possible 15.873333 (1823.68 seconds)
Cbc0010I After 369000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (1827.39 seconds)
Cbc0010I After 370000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (1830.67 seconds)
Cbc0010I After 371000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (1834.11 seconds)
Cbc0010I After 372000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (1837.86 seconds)
Cbc0010I After 373000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (1841.10 seconds)
Cbc0010I After 374000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (1844.80 seconds)
Cbc0010I After 375000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (1848.90 seconds)
Cbc0010I After 376000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (1852.60 seconds)
Cbc0010I After 377000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (1856.74 seconds)
Cbc0010I After 378000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (1860.52 seconds)
Cbc0010I After 379000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (1864.47 seconds)
Cbc0010I After 380000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (1868.40 seconds)
Cbc0010I After 381000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (1872.04 seconds)
Cbc0010I After 382000 nodes, 18883 on tree, 17 best solution, best possible 15.873333 (1875.84 seconds)
Cbc0010I After 383000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (1879.80 seconds)
Cbc0010I After 384000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (1883.43 seconds)
Cbc0010I After 385000 nodes, 18886 on tree, 17 best solution, best possible 15.873333 (1886.41 seconds)
Cbc0010I After 386000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (1889.88 seconds)
Cbc0010I After 387000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (1894.07 seconds)
Cbc0010I After 388000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (1898.00 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 72 rows 116 columns
Cbc0010I After 389000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (1901.75 seconds)
Cbc0010I After 390000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (1905.38 seconds)
Cbc0010I After 391000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (1909.06 seconds)
Cbc0010I After 392000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (1912.94 seconds)
Cbc0010I After 393000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (1916.49 seconds)
Cbc0010I After 394000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (1920.40 seconds)
Cbc0010I After 395000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (1924.35 seconds)
Cbc0010I After 396000 nodes, 18888 on tree, 17 best solution, best possible 15.873333 (1928.64 seconds)
Cbc0010I After 397000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (1932.86 seconds)
Cbc0010I After 398000 nodes, 18884 on tree, 17 best solution, best possible 15.873333 (1936.49 seconds)
Cbc0010I After 399000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (1940.23 seconds)
Cbc0010I After 400000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (1944.29 seconds)
Cbc0010I After 401000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (1948.04 seconds)
Cbc0010I After 402000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (1951.75 seconds)
Cbc0010I After 403000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (1955.13 seconds)
Cbc0010I After 404000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (1958.77 seconds)
Cbc0010I After 405000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (1962.87 seconds)
Cbc0010I After 406000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (1967.07 seconds)
Cbc0010I After 407000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (1971.30 seconds)
Cbc0010I After 408000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (1975.37 seconds)
Cbc0010I After 409000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (1979.01 seconds)
Cbc0010I After 410000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (1982.71 seconds)
Cbc0010I After 411000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (1986.10 seconds)
Cbc0010I After 412000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (1989.27 seconds)
Cbc0010I After 413000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (1992.06 seconds)
Cbc0010I After 414000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (1995.24 seconds)
Cbc0010I After 415000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (1998.20 seconds)
Cbc0010I After 416000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (2001.33 seconds)
Cbc0010I After 417000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (2004.46 seconds)
Cbc0010I After 418000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (2007.32 seconds)
Cbc0010I After 419000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (2010.13 seconds)
Cbc0010I After 420000 nodes, 18884 on tree, 17 best solution, best possible 15.873333 (2013.39 seconds)
Cbc0010I After 421000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (2016.59 seconds)
Cbc0010I After 422000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (2019.33 seconds)
Cbc0010I After 423000 nodes, 18886 on tree, 17 best solution, best possible 15.873333 (2022.22 seconds)
Cbc0010I After 424000 nodes, 18910 on tree, 17 best solution, best possible 15.873333 (2025.81 seconds)
Cbc0010I After 425000 nodes, 18916 on tree, 17 best solution, best possible 15.873333 (2029.85 seconds)
Cbc0010I After 426000 nodes, 18909 on tree, 17 best solution, best possible 15.873333 (2034.04 seconds)
Cbc0010I After 427000 nodes, 18914 on tree, 17 best solution, best possible 15.873333 (2038.29 seconds)
Cbc0010I After 428000 nodes, 18913 on tree, 17 best solution, best possible 15.873333 (2042.21 seconds)
Cbc0010I After 429000 nodes, 18906 on tree, 17 best solution, best possible 15.873333 (2046.15 seconds)
Cbc0010I After 430000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (2050.20 seconds)
Cbc0010I After 431000 nodes, 18910 on tree, 17 best solution, best possible 15.873333 (2054.14 seconds)
Cbc0010I After 432000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2058.02 seconds)
Cbc0010I After 433000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2061.73 seconds)
Cbc0010I After 434000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2065.39 seconds)
Cbc0010I After 435000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (2068.59 seconds)
Cbc0010I After 436000 nodes, 18888 on tree, 17 best solution, best possible 15.873333 (2071.91 seconds)
Cbc0010I After 437000 nodes, 18887 on tree, 17 best solution, best possible 15.873333 (2074.97 seconds)
Cbc0010I After 438000 nodes, 18888 on tree, 17 best solution, best possible 15.873333 (2078.42 seconds)
Cbc0010I After 439000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (2081.89 seconds)
Cbc0010I After 440000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (2085.50 seconds)
Cbc0010I After 441000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (2089.03 seconds)
Cbc0010I After 442000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (2092.57 seconds)
Cbc0010I After 443000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (2096.38 seconds)
Cbc0010I After 444000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (2099.48 seconds)
Cbc0010I After 445000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2103.10 seconds)
Cbc0010I After 446000 nodes, 18885 on tree, 17 best solution, best possible 15.873333 (2106.89 seconds)
Cbc0010I After 447000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (2111.04 seconds)
Cbc0010I After 448000 nodes, 18880 on tree, 17 best solution, best possible 15.873333 (2115.34 seconds)
Cbc0010I After 449000 nodes, 18886 on tree, 17 best solution, best possible 15.873333 (2119.84 seconds)
Cbc0010I After 450000 nodes, 18883 on tree, 17 best solution, best possible 15.873333 (2123.83 seconds)
Cbc0010I After 451000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (2127.91 seconds)
Cbc0010I After 452000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (2131.36 seconds)
Cbc0010I After 453000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2134.63 seconds)
Cbc0010I After 454000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2137.65 seconds)
Cbc0010I After 455000 nodes, 18886 on tree, 17 best solution, best possible 15.873333 (2140.83 seconds)
Cbc0010I After 456000 nodes, 18884 on tree, 17 best solution, best possible 15.873333 (2144.65 seconds)
Cbc0010I After 457000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (2149.21 seconds)
Cbc0010I After 458000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (2153.39 seconds)
Cbc0010I After 459000 nodes, 18911 on tree, 17 best solution, best possible 15.873333 (2157.14 seconds)
Cbc0010I After 460000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (2161.13 seconds)
Cbc0010I After 461000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (2164.89 seconds)
Cbc0010I After 462000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (2168.94 seconds)
Cbc0010I After 463000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (2172.74 seconds)
Cbc0010I After 464000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (2176.45 seconds)
Cbc0010I After 465000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (2180.00 seconds)
Cbc0010I After 466000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (2182.85 seconds)
Cbc0010I After 467000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2185.46 seconds)
Cbc0010I After 468000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (2188.68 seconds)
Cbc0010I After 469000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (2191.90 seconds)
Cbc0010I After 470000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (2195.42 seconds)
Cbc0010I After 471000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (2199.09 seconds)
Cbc0010I After 472000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (2202.95 seconds)
Cbc0010I After 473000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2206.81 seconds)
Cbc0010I After 474000 nodes, 18906 on tree, 17 best solution, best possible 15.873333 (2210.57 seconds)
Cbc0010I After 475000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (2214.28 seconds)
Cbc0010I After 476000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (2217.76 seconds)
Cbc0010I After 477000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (2221.36 seconds)
Cbc0010I After 478000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2225.05 seconds)
Cbc0010I After 479000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (2228.50 seconds)
Cbc0010I After 480000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (2232.19 seconds)
Cbc0010I After 481000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (2236.44 seconds)
Cbc0010I After 482000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (2241.12 seconds)
Cbc0010I After 483000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (2245.89 seconds)
Cbc0010I After 484000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (2250.50 seconds)
Cbc0010I After 485000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (2253.69 seconds)
Cbc0010I After 486000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (2257.22 seconds)
Cbc0010I After 487000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (2260.17 seconds)
Cbc0010I After 488000 nodes, 18887 on tree, 17 best solution, best possible 15.873333 (2263.16 seconds)
Cbc0010I After 489000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (2266.58 seconds)
Cbc0010I After 490000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (2269.41 seconds)
Cbc0010I After 491000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2272.30 seconds)
Cbc0010I After 492000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2275.21 seconds)
Cbc0010I After 493000 nodes, 18885 on tree, 17 best solution, best possible 15.873333 (2278.02 seconds)
Cbc0010I After 494000 nodes, 18885 on tree, 17 best solution, best possible 15.873333 (2281.11 seconds)
Cbc0010I After 495000 nodes, 18907 on tree, 17 best solution, best possible 15.873333 (2284.65 seconds)
Cbc0010I After 496000 nodes, 18906 on tree, 17 best solution, best possible 15.873333 (2288.11 seconds)
Cbc0010I After 497000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (2291.68 seconds)
Cbc0010I After 498000 nodes, 18907 on tree, 17 best solution, best possible 15.873333 (2295.46 seconds)
Cbc0010I After 499000 nodes, 18908 on tree, 17 best solution, best possible 15.873333 (2298.93 seconds)
Cbc0010I After 500000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (2302.50 seconds)
Cbc0010I After 501000 nodes, 18913 on tree, 17 best solution, best possible 15.873333 (2305.66 seconds)
Cbc0010I After 502000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2308.38 seconds)
Cbc0010I After 503000 nodes, 18906 on tree, 17 best solution, best possible 15.873333 (2311.16 seconds)
Cbc0010I After 504000 nodes, 18908 on tree, 17 best solution, best possible 15.873333 (2314.41 seconds)
Cbc0010I After 505000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (2318.20 seconds)
Cbc0010I After 506000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2321.69 seconds)
Cbc0010I After 507000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (2325.21 seconds)
Cbc0010I After 508000 nodes, 18888 on tree, 17 best solution, best possible 15.873333 (2329.43 seconds)
Cbc0010I After 509000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (2333.37 seconds)
Cbc0010I After 510000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (2336.29 seconds)
Cbc0010I After 511000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2339.07 seconds)
Cbc0010I After 512000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (2341.85 seconds)
Cbc0010I After 513000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (2345.56 seconds)
Cbc0010I After 514000 nodes, 18887 on tree, 17 best solution, best possible 15.873333 (2348.83 seconds)
Cbc0010I After 515000 nodes, 18888 on tree, 17 best solution, best possible 15.873333 (2351.47 seconds)
Cbc0010I After 516000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (2354.71 seconds)
Cbc0010I After 517000 nodes, 18884 on tree, 17 best solution, best possible 15.873333 (2357.47 seconds)
Cbc0010I After 518000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (2361.37 seconds)
Cbc0010I After 519000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (2365.18 seconds)
Cbc0010I After 520000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (2368.18 seconds)
Cbc0010I After 521000 nodes, 18884 on tree, 17 best solution, best possible 15.873333 (2371.03 seconds)
Cbc0010I After 522000 nodes, 18887 on tree, 17 best solution, best possible 15.873333 (2374.21 seconds)
Cbc0010I After 523000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (2377.28 seconds)
Cbc0010I After 524000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (2380.73 seconds)
Cbc0010I After 525000 nodes, 18886 on tree, 17 best solution, best possible 15.873333 (2384.20 seconds)
Cbc0010I After 526000 nodes, 18908 on tree, 17 best solution, best possible 15.873333 (2387.40 seconds)
Cbc0010I After 527000 nodes, 18905 on tree, 17 best solution, best possible 15.873333 (2390.75 seconds)
Cbc0010I After 528000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (2394.31 seconds)
Cbc0010I After 529000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (2397.89 seconds)
Cbc0010I After 530000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (2401.69 seconds)
Cbc0010I After 531000 nodes, 18906 on tree, 17 best solution, best possible 15.873333 (2405.43 seconds)
Cbc0010I After 532000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (2408.43 seconds)
Cbc0010I After 533000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (2411.49 seconds)
Cbc0010I After 534000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (2414.65 seconds)
Cbc0010I After 535000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (2417.82 seconds)
Cbc0010I After 536000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (2421.09 seconds)
Cbc0010I After 537000 nodes, 18886 on tree, 17 best solution, best possible 15.873333 (2423.97 seconds)
Cbc0010I After 538000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (2427.22 seconds)
Cbc0010I After 539000 nodes, 18886 on tree, 17 best solution, best possible 15.873333 (2430.94 seconds)
Cbc0010I After 540000 nodes, 18888 on tree, 17 best solution, best possible 15.873333 (2435.78 seconds)
Cbc0010I After 541000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (2440.77 seconds)
Cbc0010I After 542000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (2445.36 seconds)
Cbc0010I After 543000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (2449.71 seconds)
Cbc0010I After 544000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (2453.78 seconds)
Cbc0010I After 545000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (2457.67 seconds)
Cbc0010I After 546000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2461.95 seconds)
Cbc0010I After 547000 nodes, 18887 on tree, 17 best solution, best possible 15.873333 (2466.28 seconds)
Cbc0010I After 548000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (2470.22 seconds)
Cbc0010I After 549000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (2473.81 seconds)
Cbc0010I After 550000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (2477.38 seconds)
Cbc0010I After 551000 nodes, 18887 on tree, 17 best solution, best possible 15.873333 (2480.61 seconds)
Cbc0010I After 552000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (2483.80 seconds)
Cbc0010I After 553000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (2486.86 seconds)
Cbc0010I After 554000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (2490.64 seconds)
Cbc0010I After 555000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2494.03 seconds)
Cbc0010I After 556000 nodes, 18887 on tree, 17 best solution, best possible 15.873333 (2496.90 seconds)
Cbc0010I After 557000 nodes, 18882 on tree, 17 best solution, best possible 15.873333 (2500.22 seconds)
Cbc0010I After 558000 nodes, 18888 on tree, 17 best solution, best possible 15.873333 (2504.57 seconds)
Cbc0010I After 559000 nodes, 18885 on tree, 17 best solution, best possible 15.873333 (2508.42 seconds)
Cbc0010I After 560000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2512.03 seconds)
Cbc0010I After 561000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (2515.54 seconds)
Cbc0010I After 562000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (2519.90 seconds)
Cbc0010I After 563000 nodes, 18882 on tree, 17 best solution, best possible 15.873333 (2523.41 seconds)
Cbc0010I After 564000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (2527.22 seconds)
Cbc0010I After 565000 nodes, 18906 on tree, 17 best solution, best possible 15.873333 (2530.65 seconds)
Cbc0010I After 566000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (2533.83 seconds)
Cbc0010I After 567000 nodes, 18911 on tree, 17 best solution, best possible 15.873333 (2537.22 seconds)
Cbc0010I After 568000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2540.70 seconds)
Cbc0010I After 569000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (2543.86 seconds)
Cbc0010I After 570000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (2546.86 seconds)
Cbc0010I After 571000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (2549.73 seconds)
Cbc0010I After 572000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (2552.58 seconds)
Cbc0010I After 573000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (2556.47 seconds)
Cbc0010I After 574000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2560.29 seconds)
Cbc0010I After 575000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (2564.11 seconds)
Cbc0010I After 576000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (2568.36 seconds)
Cbc0010I After 577000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (2572.13 seconds)
Cbc0010I After 578000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (2576.03 seconds)
Cbc0010I After 579000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2579.94 seconds)
Cbc0010I After 580000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (2584.67 seconds)
Cbc0010I After 581000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2589.97 seconds)
Cbc0010I After 582000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (2594.33 seconds)
Cbc0010I After 583000 nodes, 18909 on tree, 17 best solution, best possible 15.873333 (2597.93 seconds)
Cbc0010I After 584000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (2601.15 seconds)
Cbc0010I After 585000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (2604.66 seconds)
Cbc0010I After 586000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2608.05 seconds)
Cbc0010I After 587000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (2612.16 seconds)
Cbc0010I After 588000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (2616.68 seconds)
Cbc0010I After 589000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (2620.31 seconds)
Cbc0010I After 590000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2624.21 seconds)
Cbc0010I After 591000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (2627.82 seconds)
Cbc0010I After 592000 nodes, 18882 on tree, 17 best solution, best possible 15.873333 (2631.37 seconds)
Cbc0010I After 593000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (2635.89 seconds)
Cbc0010I After 594000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (2640.71 seconds)
Cbc0010I After 595000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2645.41 seconds)
Cbc0010I After 596000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (2649.99 seconds)
Cbc0010I After 597000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2653.97 seconds)
Cbc0010I After 598000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (2657.98 seconds)
Cbc0010I After 599000 nodes, 18905 on tree, 17 best solution, best possible 15.873333 (2661.49 seconds)
Cbc0010I After 600000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (2664.34 seconds)
Cbc0010I After 601000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (2667.22 seconds)
Cbc0010I After 602000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (2670.95 seconds)
Cbc0010I After 603000 nodes, 18911 on tree, 17 best solution, best possible 15.873333 (2675.52 seconds)
Cbc0010I After 604000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (2680.20 seconds)
Cbc0010I After 605000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2684.58 seconds)
Cbc0010I After 606000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (2688.72 seconds)
Cbc0010I After 607000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (2693.32 seconds)
Cbc0010I After 608000 nodes, 18914 on tree, 17 best solution, best possible 15.873333 (2698.22 seconds)
Cbc0010I After 609000 nodes, 18906 on tree, 17 best solution, best possible 15.873333 (2702.83 seconds)
Cbc0010I After 610000 nodes, 18909 on tree, 17 best solution, best possible 15.873333 (2707.30 seconds)
Cbc0010I After 611000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (2711.97 seconds)
Cbc0010I After 612000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (2716.75 seconds)
Cbc0010I After 613000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2722.24 seconds)
Cbc0010I After 614000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2726.54 seconds)
Cbc0010I After 615000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (2730.86 seconds)
Cbc0010I After 616000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (2735.07 seconds)
Cbc0010I After 617000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (2738.43 seconds)
Cbc0010I After 618000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2741.95 seconds)
Cbc0010I After 619000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2745.35 seconds)
Cbc0010I After 620000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (2749.01 seconds)
Cbc0010I After 621000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (2752.39 seconds)
Cbc0010I After 622000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (2756.07 seconds)
Cbc0010I After 623000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (2759.27 seconds)
Cbc0010I After 624000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (2762.73 seconds)
Cbc0010I After 625000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2767.05 seconds)
Cbc0010I After 626000 nodes, 18905 on tree, 17 best solution, best possible 15.873333 (2771.04 seconds)
Cbc0010I After 627000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (2775.19 seconds)
Cbc0010I After 628000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (2778.93 seconds)
Cbc0010I After 629000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (2783.25 seconds)
Cbc0010I After 630000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (2787.45 seconds)
Cbc0010I After 631000 nodes, 18905 on tree, 17 best solution, best possible 15.873333 (2791.80 seconds)
Cbc0010I After 632000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (2795.46 seconds)
Cbc0010I After 633000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2798.96 seconds)
Cbc0010I After 634000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (2802.74 seconds)
Cbc0010I After 635000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (2806.20 seconds)
Cbc0010I After 636000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (2810.67 seconds)
Cbc0010I After 637000 nodes, 18887 on tree, 17 best solution, best possible 15.873333 (2815.59 seconds)
Cbc0010I After 638000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (2819.94 seconds)
Cbc0010I After 639000 nodes, 18887 on tree, 17 best solution, best possible 15.873333 (2823.62 seconds)
Cbc0010I After 640000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (2827.47 seconds)
Cbc0010I After 641000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (2830.72 seconds)
Cbc0010I After 642000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (2833.62 seconds)
Cbc0010I After 643000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2836.92 seconds)
Cbc0010I After 644000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (2840.42 seconds)
Cbc0010I After 645000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (2844.12 seconds)
Cbc0010I After 646000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (2847.81 seconds)
Cbc0010I After 647000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (2851.11 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 71 rows 113 columns
Cbc0010I After 648000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (2854.38 seconds)
Cbc0010I After 649000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (2857.79 seconds)
Cbc0010I After 650000 nodes, 18905 on tree, 17 best solution, best possible 15.873333 (2861.07 seconds)
Cbc0010I After 651000 nodes, 18910 on tree, 17 best solution, best possible 15.873333 (2864.49 seconds)
Cbc0010I After 652000 nodes, 18905 on tree, 17 best solution, best possible 15.873333 (2867.94 seconds)
Cbc0010I After 653000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (2870.98 seconds)
Cbc0010I After 654000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (2874.18 seconds)
Cbc0010I After 655000 nodes, 18906 on tree, 17 best solution, best possible 15.873333 (2877.76 seconds)
Cbc0010I After 656000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (2881.21 seconds)
Cbc0010I After 657000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (2884.26 seconds)
Cbc0010I After 658000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2887.68 seconds)
Cbc0010I After 659000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (2890.84 seconds)
Cbc0010I After 660000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (2893.65 seconds)
Cbc0010I After 661000 nodes, 18911 on tree, 17 best solution, best possible 15.873333 (2897.47 seconds)
Cbc0010I After 662000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2901.47 seconds)
Cbc0010I After 663000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (2905.11 seconds)
Cbc0010I After 664000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (2908.63 seconds)
Cbc0010I After 665000 nodes, 18888 on tree, 17 best solution, best possible 15.873333 (2912.11 seconds)
Cbc0010I After 666000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (2915.55 seconds)
Cbc0010I After 667000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (2918.50 seconds)
Cbc0010I After 668000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (2922.15 seconds)
Cbc0010I After 669000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (2925.70 seconds)
Cbc0010I After 670000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (2929.16 seconds)
Cbc0010I After 671000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (2933.10 seconds)
Cbc0010I After 672000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (2936.38 seconds)
Cbc0010I After 673000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (2939.95 seconds)
Cbc0010I After 674000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2943.64 seconds)
Cbc0010I After 675000 nodes, 18887 on tree, 17 best solution, best possible 15.873333 (2947.12 seconds)
Cbc0010I After 676000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (2950.37 seconds)
Cbc0010I After 677000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (2953.51 seconds)
Cbc0010I After 678000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (2956.84 seconds)
Cbc0010I After 679000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (2960.14 seconds)
Cbc0010I After 680000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2963.80 seconds)
Cbc0010I After 681000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (2967.21 seconds)
Cbc0010I After 682000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (2970.87 seconds)
Cbc0010I After 683000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (2974.36 seconds)
Cbc0010I After 684000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (2977.85 seconds)
Cbc0010I After 685000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (2981.60 seconds)
Cbc0010I After 686000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (2984.52 seconds)
Cbc0010I After 687000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (2987.18 seconds)
Cbc0010I After 688000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (2990.04 seconds)
Cbc0010I After 689000 nodes, 18906 on tree, 17 best solution, best possible 15.873333 (2993.41 seconds)
Cbc0010I After 690000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (2996.82 seconds)
Cbc0010I After 691000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (3000.26 seconds)
Cbc0010I After 692000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (3003.58 seconds)
Cbc0010I After 693000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (3007.08 seconds)
Cbc0010I After 694000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (3010.53 seconds)
Cbc0010I After 695000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (3014.06 seconds)
Cbc0010I After 696000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (3017.28 seconds)
Cbc0010I After 697000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3020.49 seconds)
Cbc0010I After 698000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (3023.54 seconds)
Cbc0010I After 699000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (3026.64 seconds)
Cbc0010I After 700000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (3029.63 seconds)
Cbc0010I After 701000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (3032.53 seconds)
Cbc0010I After 702000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (3035.16 seconds)
Cbc0010I After 703000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (3038.04 seconds)
Cbc0010I After 704000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (3041.07 seconds)
Cbc0010I After 705000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (3044.05 seconds)
Cbc0010I After 706000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3047.15 seconds)
Cbc0010I After 707000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (3049.78 seconds)
Cbc0010I After 708000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (3052.42 seconds)
Cbc0010I After 709000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (3055.15 seconds)
Cbc0010I After 710000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (3057.82 seconds)
Cbc0010I After 711000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (3060.34 seconds)
Cbc0010I After 712000 nodes, 18912 on tree, 17 best solution, best possible 15.873333 (3063.12 seconds)
Cbc0010I After 713000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (3066.16 seconds)
Cbc0010I After 714000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (3068.72 seconds)
Cbc0010I After 715000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (3071.57 seconds)
Cbc0010I After 716000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (3074.42 seconds)
Cbc0010I After 717000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (3077.47 seconds)
Cbc0010I After 718000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (3080.67 seconds)
Cbc0010I After 719000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (3083.91 seconds)
Cbc0010I After 720000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (3087.01 seconds)
Cbc0010I After 721000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (3090.09 seconds)
Cbc0010I After 722000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (3092.80 seconds)
Cbc0010I After 723000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (3095.37 seconds)
Cbc0010I After 724000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (3097.90 seconds)
Cbc0010I After 725000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (3100.60 seconds)
Cbc0010I After 726000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (3103.42 seconds)
Cbc0010I After 727000 nodes, 18888 on tree, 17 best solution, best possible 15.873333 (3105.91 seconds)
Cbc0010I After 728000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (3108.73 seconds)
Cbc0010I After 729000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (3111.62 seconds)
Cbc0010I After 730000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (3114.50 seconds)
Cbc0010I After 731000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (3117.50 seconds)
Cbc0010I After 732000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3120.51 seconds)
Cbc0010I After 733000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (3123.50 seconds)
Cbc0010I After 734000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (3126.85 seconds)
Cbc0010I After 735000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3129.91 seconds)
Cbc0010I After 736000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (3133.02 seconds)
Cbc0010I After 737000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (3135.66 seconds)
Cbc0010I After 738000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (3138.70 seconds)
Cbc0010I After 739000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (3141.74 seconds)
Cbc0010I After 740000 nodes, 18905 on tree, 17 best solution, best possible 15.873333 (3145.03 seconds)
Cbc0010I After 741000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (3148.56 seconds)
Cbc0010I After 742000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (3151.90 seconds)
Cbc0010I After 743000 nodes, 18883 on tree, 17 best solution, best possible 15.873333 (3155.22 seconds)
Cbc0010I After 744000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (3158.21 seconds)
Cbc0010I After 745000 nodes, 18886 on tree, 17 best solution, best possible 15.873333 (3161.18 seconds)
Cbc0010I After 746000 nodes, 18907 on tree, 17 best solution, best possible 15.873333 (3164.13 seconds)
Cbc0010I After 747000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (3166.89 seconds)
Cbc0010I After 748000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (3170.32 seconds)
Cbc0010I After 749000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (3173.15 seconds)
Cbc0010I After 750000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3175.87 seconds)
Cbc0010I After 751000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (3178.66 seconds)
Cbc0010I After 752000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (3181.30 seconds)
Cbc0010I After 753000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (3184.03 seconds)
Cbc0010I After 754000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3186.81 seconds)
Cbc0010I After 755000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (3189.76 seconds)
Cbc0010I After 756000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (3192.31 seconds)
Cbc0010I After 757000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (3194.95 seconds)
Cbc0010I After 758000 nodes, 18887 on tree, 17 best solution, best possible 15.873333 (3197.84 seconds)
Cbc0010I After 759000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (3200.69 seconds)
Cbc0010I After 760000 nodes, 18886 on tree, 17 best solution, best possible 15.873333 (3203.72 seconds)
Cbc0010I After 761000 nodes, 18888 on tree, 17 best solution, best possible 15.873333 (3206.64 seconds)
Cbc0010I After 762000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3209.49 seconds)
Cbc0010I After 763000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (3212.62 seconds)
Cbc0010I After 764000 nodes, 18909 on tree, 17 best solution, best possible 15.873333 (3216.08 seconds)
Cbc0010I After 765000 nodes, 18908 on tree, 17 best solution, best possible 15.873333 (3219.56 seconds)
Cbc0010I After 766000 nodes, 18909 on tree, 17 best solution, best possible 15.873333 (3223.05 seconds)
Cbc0010I After 767000 nodes, 18906 on tree, 17 best solution, best possible 15.873333 (3226.31 seconds)
Cbc0010I After 768000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (3230.03 seconds)
Cbc0010I After 769000 nodes, 18906 on tree, 17 best solution, best possible 15.873333 (3233.38 seconds)
Cbc0010I After 770000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (3236.41 seconds)
Cbc0010I After 771000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (3239.14 seconds)
Cbc0010I After 772000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (3242.31 seconds)
Cbc0010I After 773000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (3245.99 seconds)
Cbc0010I After 774000 nodes, 18904 on tree, 17 best solution, best possible 15.873333 (3249.70 seconds)
Cbc0010I After 775000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (3253.01 seconds)
Cbc0010I After 776000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3256.40 seconds)
Cbc0010I After 777000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (3259.49 seconds)
Cbc0038I Full problem 74 rows 1224 columns, reduced to 72 rows 117 columns
Cbc0010I After 778000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (3262.76 seconds)
Cbc0010I After 779000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (3265.83 seconds)
Cbc0010I After 780000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (3268.92 seconds)
Cbc0010I After 781000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (3271.93 seconds)
Cbc0010I After 782000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (3274.98 seconds)
Cbc0010I After 783000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (3278.48 seconds)
Cbc0010I After 784000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (3281.96 seconds)
Cbc0010I After 785000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (3285.56 seconds)
Cbc0010I After 786000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (3289.06 seconds)
Cbc0010I After 787000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (3292.95 seconds)
Cbc0010I After 788000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (3295.94 seconds)
Cbc0010I After 789000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (3298.74 seconds)
Cbc0010I After 790000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3302.16 seconds)
Cbc0010I After 791000 nodes, 18905 on tree, 17 best solution, best possible 15.873333 (3305.08 seconds)
Cbc0010I After 792000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (3307.99 seconds)
Cbc0010I After 793000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (3311.23 seconds)
Cbc0010I After 794000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (3314.31 seconds)
Cbc0010I After 795000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (3317.26 seconds)
Cbc0010I After 796000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (3320.69 seconds)
Cbc0010I After 797000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (3323.67 seconds)
Cbc0010I After 798000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (3326.80 seconds)
Cbc0010I After 799000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (3329.81 seconds)
Cbc0010I After 800000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (3333.46 seconds)
Cbc0010I After 801000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (3336.58 seconds)
Cbc0010I After 802000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (3339.78 seconds)
Cbc0010I After 803000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (3343.08 seconds)
Cbc0010I After 804000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (3346.03 seconds)
Cbc0010I After 805000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (3349.27 seconds)
Cbc0010I After 806000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (3352.63 seconds)
Cbc0010I After 807000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (3355.97 seconds)
Cbc0010I After 808000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (3359.09 seconds)
Cbc0010I After 809000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (3362.03 seconds)
Cbc0010I After 810000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3364.73 seconds)
Cbc0010I After 811000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3367.48 seconds)
Cbc0010I After 812000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (3370.07 seconds)
Cbc0010I After 813000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3372.64 seconds)
Cbc0010I After 814000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3375.59 seconds)
Cbc0010I After 815000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3378.80 seconds)
Cbc0010I After 816000 nodes, 18906 on tree, 17 best solution, best possible 15.873333 (3381.83 seconds)
Cbc0010I After 817000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3384.65 seconds)
Cbc0010I After 818000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (3387.71 seconds)
Cbc0010I After 819000 nodes, 18901 on tree, 17 best solution, best possible 15.873333 (3390.44 seconds)
Cbc0010I After 820000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3393.02 seconds)
Cbc0010I After 821000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (3395.50 seconds)
Cbc0010I After 822000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (3398.27 seconds)
Cbc0010I After 823000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (3401.07 seconds)
Cbc0010I After 824000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (3404.11 seconds)
Cbc0010I After 825000 nodes, 18903 on tree, 17 best solution, best possible 15.873333 (3406.67 seconds)
Cbc0010I After 826000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (3409.33 seconds)
Cbc0010I After 827000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (3412.02 seconds)
Cbc0010I After 828000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (3414.59 seconds)
Cbc0010I After 829000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (3417.35 seconds)
Cbc0010I After 830000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (3419.99 seconds)
Cbc0010I After 831000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3423.16 seconds)
Cbc0010I After 832000 nodes, 18888 on tree, 17 best solution, best possible 15.873333 (3426.14 seconds)
Cbc0010I After 833000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (3429.20 seconds)
Cbc0010I After 834000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (3432.42 seconds)
Cbc0010I After 835000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (3435.35 seconds)
Cbc0010I After 836000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3438.66 seconds)
Cbc0010I After 837000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (3441.70 seconds)
Cbc0010I After 838000 nodes, 18883 on tree, 17 best solution, best possible 15.873333 (3444.73 seconds)
Cbc0010I After 839000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (3447.58 seconds)
Cbc0010I After 840000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (3450.68 seconds)
Cbc0010I After 841000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (3453.14 seconds)
Cbc0010I After 842000 nodes, 18886 on tree, 17 best solution, best possible 15.873333 (3455.81 seconds)
Cbc0010I After 843000 nodes, 18884 on tree, 17 best solution, best possible 15.873333 (3458.17 seconds)
Cbc0010I After 844000 nodes, 18909 on tree, 17 best solution, best possible 15.873333 (3461.22 seconds)
Cbc0010I After 845000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (3463.94 seconds)
Cbc0010I After 846000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (3466.84 seconds)
Cbc0010I After 847000 nodes, 18902 on tree, 17 best solution, best possible 15.873333 (3469.83 seconds)
Cbc0010I After 848000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (3473.01 seconds)
Cbc0010I After 849000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (3476.53 seconds)
Cbc0010I After 850000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (3480.18 seconds)
Cbc0010I After 851000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (3483.91 seconds)
Cbc0010I After 852000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (3487.38 seconds)
Cbc0010I After 853000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (3491.89 seconds)
Cbc0010I After 854000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3496.65 seconds)
Cbc0010I After 855000 nodes, 18889 on tree, 17 best solution, best possible 15.873333 (3500.47 seconds)
Cbc0010I After 856000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (3504.41 seconds)
Cbc0010I After 857000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (3508.30 seconds)
Cbc0010I After 858000 nodes, 18898 on tree, 17 best solution, best possible 15.873333 (3511.99 seconds)
Cbc0010I After 859000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (3515.60 seconds)
Cbc0010I After 860000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (3519.40 seconds)
Cbc0010I After 861000 nodes, 18884 on tree, 17 best solution, best possible 15.873333 (3523.40 seconds)
Cbc0010I After 862000 nodes, 18887 on tree, 17 best solution, best possible 15.873333 (3526.90 seconds)
Cbc0010I After 863000 nodes, 18900 on tree, 17 best solution, best possible 15.873333 (3530.40 seconds)
Cbc0010I After 864000 nodes, 18893 on tree, 17 best solution, best possible 15.873333 (3533.82 seconds)
Cbc0010I After 865000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (3537.26 seconds)
Cbc0010I After 866000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (3540.78 seconds)
Cbc0010I After 867000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (3544.05 seconds)
Cbc0010I After 868000 nodes, 18887 on tree, 17 best solution, best possible 15.873333 (3547.44 seconds)
Cbc0010I After 869000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (3551.09 seconds)
Cbc0010I After 870000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (3554.16 seconds)
Cbc0010I After 871000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (3557.72 seconds)
Cbc0010I After 872000 nodes, 18894 on tree, 17 best solution, best possible 15.873333 (3561.72 seconds)
Cbc0010I After 873000 nodes, 18899 on tree, 17 best solution, best possible 15.873333 (3565.57 seconds)
Cbc0010I After 874000 nodes, 18890 on tree, 17 best solution, best possible 15.873333 (3569.44 seconds)
Cbc0010I After 875000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (3572.98 seconds)
Cbc0010I After 876000 nodes, 18891 on tree, 17 best solution, best possible 15.873333 (3576.25 seconds)
Cbc0010I After 877000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (3579.56 seconds)
Cbc0010I After 878000 nodes, 18896 on tree, 17 best solution, best possible 15.873333 (3583.02 seconds)
Cbc0010I After 879000 nodes, 18895 on tree, 17 best solution, best possible 15.873333 (3586.71 seconds)
Cbc0010I After 880000 nodes, 18892 on tree, 17 best solution, best possible 15.873333 (3590.46 seconds)
Cbc0010I After 881000 nodes, 18897 on tree, 17 best solution, best possible 15.873333 (3594.04 seconds)
Cbc0010I After 882000 nodes, 18887 on tree, 17 best solution, best possible 15.873333 (3597.64 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 17 (best possible 15.873333), took 6976875 iterations and 882646 nodes (3601.70 seconds)
Cbc0032I Strong branching done 713394 times (4350178 iterations), fathomed 51805 nodes and fixed 82446 variables
Cbc0035I Maximum depth 198, 84103 variables fixed on reduced cost
Cuts at root node changed objective from 15.8733 to 15.8733
Probing was tried 10 times and created 105 cuts of which 24 were active after adding rounds of cuts (0.152 seconds)
Gomory was tried 10 times and created 90 cuts of which 0 were active after adding rounds of cuts (0.444 seconds)
Knapsack was tried 10 times and created 25 cuts of which 0 were active after adding rounds of cuts (0.040 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 10 times and created 44 cuts of which 0 were active after adding rounds of cuts (0.080 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 10 times and created 104 cuts of which 0 were active after adding rounds of cuts (0.092 seconds)

Result - Stopped on time limit

Objective value:                17.00000000
Lower bound:                    15.873
Gap:                            0.07
Enumerated nodes:               882646
Total iterations:               6976875
Time (CPU seconds):             3601.77
Time (Wallclock seconds):       3754.69

Total time (CPU seconds):       3601.79   (Wallclock seconds):       3754.79

=obj= 17.00000000 
y#2 1 
y#3 1 
y#4 1 
y#5 1 
y#6 1 
y#7 1 
y#8 1 
y#9 1 
y#10 1 
y#12 1 
y#13 1 
y#14 1 
y#15 1 
y#16 1 
y#18 1 
y#20 1 
y#24 1 
x#37#2 1 
x#27#2 1 
x#14#2 1 
x#49#3 1 
x#32#3 1 
x#1#3 1 
x#35#4 1 
x#19#4 1 
x#18#4 1 
x#48#5 1 
x#39#5 1 
x#21#5 1 
x#15#5 1 
x#24#6 1 
x#3#6 1 
x#44#7 1 
x#31#7 1 
x#2#7 1 
x#50#8 1 
x#16#8 1 
x#12#8 1 
x#22#9 1 
x#5#9 1 
x#46#10 1 
x#45#10 1 
x#42#10 1 
x#36#10 1 
x#13#10 1 
x#47#12 1 
x#40#12 1 
x#34#12 1 
x#11#12 1 
x#30#13 1 
x#6#13 1 
x#43#14 1 
x#29#14 1 
x#26#14 1 
x#23#14 1 
x#28#15 1 
x#4#15 1 
x#20#16 1 
x#10#16 1 
x#41#18 1 
x#38#18 1 
x#33#18 1 
x#9#18 1 
x#25#20 1 
x#8#20 1 
x#17#24 1 
x#7#24 1 

@04 1393024252
@05 3600

Read MPS: 1
MIP has 1224 vars and 74 constraints
Read SOL: 1
Objective value computed by solver: 17

Integrality tolerance: 1/10000
Linear tolerance: 1/10000
Objective tolerance: 1/10000

Check SOL: Integrality 1 Constraints 1 Objective 1
Maximum violations: Integrality 0 Constraints 0 Objective 0

-----------------------------
Fri Feb 21 18:10:52 EST 2014
-----------------------------

=ready=
@01 instances/decomplib/neos_911880.mps ===========
-----------------------------
Fri Feb 21 18:10:52 EST 2014
-----------------------------
@03 1393024252
Welcome to the CBC MILP Solver 
Version: Trunk (unstable) 
Build Date: Feb  9 2014 
Revision Number: 2007 

command line - /home/jiw508/miplib2010-1.0.3/bin/cbc -import instances/decomplib/neos_911880.mps -sec 3600 -ratio 0.0 -solve -solution /home/jiw508/miplib2010-1.0.3/results/solutions/decomp.cbc.neos_911880.mps.sol (default strategy 1)
At line 1 NAME           neos-911880
At line 2 ROWS
At line 87 COLUMNS
At line 2706 RHS
At line 2790 BOUNDS
At line 3631 ENDATA
Problem neos-911880 has 83 rows, 888 columns and 2568 elements
Coin0008I neos-911880 read with 0 errors
seconds was changed from 1e+100 to 3600
ratioGap was changed from 0 to 0
Continuous objective value is 23.26 - 0.02 seconds
Cgl0005I 35 SOS with 840 members
Cgl0004I processed model has 83 rows, 888 columns (840 integer) and 2568 elements
Cbc0038I Initial state - 41 integers unsatisfied sum - 11.2967
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 186.48 iterations 70
Cbc0038I Solution found of 186.48
Cbc0038I Relaxing continuous gives 186.48
Cbc0038I Before mini branch and bound, 798 integers at bound fixed and 34 continuous
Cbc0038I Full problem 83 rows 888 columns, reduced to 6 rows 5 columns
Cbc0038I Mini branch and bound improved solution from 186.48 to 162.64 (0.15 seconds)
0  Obj 162.64 Dual inf 2.27994 (11)
End of values pass after 11 iterations
11  Obj 162.64
Perturbing problem by 0.001 % of 4.0030961 - largest nonzero change 3.9654822e-05 (% 0.00078265152) - largest zero change 0
11  Obj 162.64
Optimal - objective value 162.64
Cbc0038I Round again with cutoff of 148.702
Cbc0038I Pass   2: suminf.    0.92108 (2) obj. 148.702 iterations 1
Cbc0038I Pass   3: suminf.    0.62806 (3) obj. 148.702 iterations 14
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. 148.702 iterations 23
Cbc0038I Solution found of 148.702
Cbc0038I Relaxing continuous gives 144.94
Cbc0038I Before mini branch and bound, 796 integers at bound fixed and 33 continuous
Cbc0038I Full problem 83 rows 888 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I Round again with cutoff of 120.604
Cbc0038I Pass   5: suminf.    0.94000 (4) obj. 120.604 iterations 5
Cbc0038I Pass   6: suminf.    0.64748 (3) obj. 120.604 iterations 13
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. 120.604 iterations 23
Cbc0038I Solution found of 120.604
Cbc0038I Relaxing continuous gives 118.01
Cbc0038I Before mini branch and bound, 795 integers at bound fixed and 31 continuous
Cbc0038I Full problem 83 rows 888 columns, reduced to 9 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I Freeing continuous variables gives a solution of 118.01
Cbc0038I Round again with cutoff of 89.585
Cbc0038I Pass   8: suminf.    1.55566 (10) obj. 89.585 iterations 31
Cbc0038I Pass   9: suminf.    1.26459 (6) obj. 89.585 iterations 14
Cbc0038I Pass  10: suminf.    0.58628 (2) obj. 89.585 iterations 32
Cbc0038I Pass  11: suminf.    0.58527 (2) obj. 89.585 iterations 8
Cbc0038I Pass  12: suminf.    0.45131 (3) obj. 89.585 iterations 8
Cbc0038I Pass  13: suminf.    0.45551 (2) obj. 89.585 iterations 21
Cbc0038I Pass  14: suminf.    0.44533 (2) obj. 89.585 iterations 9
Cbc0038I Pass  15: suminf.    7.44875 (30) obj. 89.585 iterations 130
Cbc0038I Pass  16: suminf.    1.88570 (7) obj. 89.585 iterations 81
Cbc0038I Pass  17: suminf.    1.26108 (7) obj. 89.585 iterations 15
Cbc0038I Pass  18: suminf.    1.04309 (4) obj. 89.585 iterations 29
Cbc0038I Pass  19: suminf.    0.49218 (2) obj. 89.585 iterations 15
Cbc0038I Pass  20: suminf.    0.42390 (2) obj. 89.585 iterations 14
Cbc0038I Pass  21: suminf.    7.02016 (27) obj. 89.585 iterations 136
Cbc0038I Pass  22: suminf.    3.93740 (20) obj. 89.585 iterations 70
Cbc0038I Pass  23: suminf.    3.93740 (20) obj. 89.585 iterations 4
Cbc0038I Pass  24: suminf.    4.21746 (16) obj. 89.585 iterations 59
Cbc0038I Pass  25: suminf.    3.23378 (15) obj. 89.585 iterations 32
Cbc0038I Pass  26: suminf.    3.23378 (15) obj. 89.585 iterations 3
Cbc0038I Pass  27: suminf.    3.54656 (14) obj. 89.585 iterations 32
Cbc0038I Pass  28: suminf.    2.94342 (14) obj. 89.585 iterations 25
Cbc0038I Pass  29: suminf.    3.43401 (15) obj. 89.585 iterations 44
Cbc0038I Pass  30: suminf.    2.27493 (12) obj. 89.585 iterations 24
Cbc0038I Pass  31: suminf.    2.59667 (9) obj. 89.585 iterations 28
Cbc0038I Pass  32: suminf.    2.48322 (9) obj. 89.585 iterations 7
Cbc0038I Pass  33: suminf.    2.50000 (10) obj. 89.585 iterations 38
Cbc0038I Pass  34: suminf.    2.14390 (10) obj. 89.585 iterations 13
Cbc0038I Pass  35: suminf.    2.88823 (10) obj. 89.585 iterations 23
Cbc0038I Pass  36: suminf.    2.14390 (11) obj. 89.585 iterations 17
Cbc0038I Pass  37: suminf.    2.50000 (10) obj. 89.585 iterations 30
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 678 integers at bound fixed and 6 continuous
Cbc0038I Full problem 83 rows 888 columns, reduced to 74 rows 187 columns
Cbc0038I Mini branch and bound did not improve solution (1.06 seconds)
Cbc0038I After 1.06 seconds - Feasibility pump exiting with objective of 118.01 - took 0.95 seconds
Cbc0012I Integer solution of 118.01 found by feasibility pump after 0 iterations and 0 nodes (1.06 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 39 rows 64 columns
Cbc0012I Integer solution of 104.04 found by RINS after 0 iterations and 0 nodes (1.28 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of 82.01 found by DiveCoefficient after 17111 iterations and 0 nodes (24.49 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 44 rows 77 columns
Cbc0012I Integer solution of 59.31 found by combine solutions after 17111 iterations and 0 nodes (24.69 seconds)
Cbc0031I 143 added rows had average density of 99.412587
Cbc0013I At root node, 143 cuts changed objective from 23.26 to 52.193866 in 56 passes
Cbc0014I Cut generator 0 (Probing) - 232 row cuts average 2.8 elements, 1 column cuts (101 active)  in 1.208 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1049 row cuts average 512.4 elements, 0 column cuts (12 active)  in 3.272 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.312 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2134 row cuts average 31.0 elements, 0 column cuts (0 active)  in 3.668 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 714 row cuts average 60.5 elements, 0 column cuts (0 active)  in 0.256 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 59.31 best solution, best possible 52.193866 (25.82 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 50 rows 91 columns
Cbc0012I Integer solution of 55.6 found by RINS after 23056 iterations and 41 nodes (31.63 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 59 rows 107 columns
Cbc0038I Full problem 83 rows 888 columns, reduced to 50 rows 95 columns
Cbc0012I Integer solution of 55.26 found by rounding after 31301 iterations and 137 nodes (41.07 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 77 rows 150 columns
Cbc0016I Integer solution of 54.76 found by strong branching after 34119 iterations and 188 nodes (45.76 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 80 rows 169 columns
Cbc0038I Full problem 83 rows 888 columns, reduced to 36 rows 65 columns
Cbc0038I Full problem 83 rows 888 columns, reduced to 35 rows 68 columns
Cbc0038I Full problem 83 rows 888 columns, reduced to 31 rows 59 columns
Cbc0038I Full problem 83 rows 888 columns, reduced to 36 rows 69 columns
Cbc0038I Full problem 83 rows 888 columns, reduced to 32 rows 61 columns
Cbc0010I After 1000 nodes, 87 on tree, 54.76 best solution, best possible 52.193866 (72.61 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 28 rows 55 columns
Cbc0038I Full problem 83 rows 888 columns, reduced to 37 rows 72 columns
Cbc0038I Full problem 83 rows 888 columns, reduced to 34 rows 64 columns
Cbc0010I After 2000 nodes, 46 on tree, 54.76 best solution, best possible 52.193866 (97.99 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 36 rows 70 columns
Cbc0010I After 3000 nodes, 31 on tree, 54.76 best solution, best possible 52.193866 (126.72 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 37 rows 68 columns
Cbc0010I After 4000 nodes, 35 on tree, 54.76 best solution, best possible 52.193866 (153.91 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 38 rows 69 columns
Cbc0010I After 5000 nodes, 28 on tree, 54.76 best solution, best possible 52.193866 (181.64 seconds)
Cbc0010I After 6000 nodes, 26 on tree, 54.76 best solution, best possible 52.193866 (209.50 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 31 rows 56 columns
Cbc0038I Full problem 83 rows 888 columns, reduced to 37 rows 67 columns
Cbc0010I After 7000 nodes, 29 on tree, 54.76 best solution, best possible 52.193866 (237.58 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 33 rows 63 columns
Cbc0010I After 8000 nodes, 36 on tree, 54.76 best solution, best possible 52.193866 (264.00 seconds)
Cbc0010I After 9000 nodes, 33 on tree, 54.76 best solution, best possible 52.193866 (288.87 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 33 rows 63 columns
Cbc0010I After 10000 nodes, 34 on tree, 54.76 best solution, best possible 52.193866 (314.61 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 36 rows 71 columns
Cbc0010I After 11000 nodes, 25 on tree, 54.76 best solution, best possible 52.193866 (339.40 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 52 rows 98 columns
Cbc0010I After 12000 nodes, 274 on tree, 54.76 best solution, best possible 54.739999 (402.68 seconds)
Cbc0010I After 13000 nodes, 479 on tree, 54.76 best solution, best possible 54.74 (440.48 seconds)
Cbc0010I After 14000 nodes, 496 on tree, 54.76 best solution, best possible 54.74 (465.07 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 54 rows 101 columns
Cbc0010I After 15000 nodes, 720 on tree, 54.76 best solution, best possible 54.74 (504.02 seconds)
Cbc0010I After 16000 nodes, 1014 on tree, 54.76 best solution, best possible 54.74 (546.45 seconds)
Cbc0010I After 17000 nodes, 1248 on tree, 54.76 best solution, best possible 54.74 (586.94 seconds)
Cbc0010I After 18000 nodes, 1260 on tree, 54.76 best solution, best possible 54.74 (611.26 seconds)
Cbc0010I After 19000 nodes, 1515 on tree, 54.76 best solution, best possible 54.74 (652.06 seconds)
Cbc0010I After 20000 nodes, 1828 on tree, 54.76 best solution, best possible 54.74 (691.43 seconds)
Cbc0010I After 21000 nodes, 2107 on tree, 54.76 best solution, best possible 54.74 (731.48 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 46 rows 78 columns
Cbc0010I After 22000 nodes, 2118 on tree, 54.76 best solution, best possible 54.74 (752.31 seconds)
Cbc0010I After 23000 nodes, 2454 on tree, 54.76 best solution, best possible 54.74 (792.33 seconds)
Cbc0010I After 24000 nodes, 2664 on tree, 54.76 best solution, best possible 54.74 (830.42 seconds)
Cbc0010I After 25000 nodes, 2906 on tree, 54.76 best solution, best possible 54.74 (866.98 seconds)
Cbc0010I After 26000 nodes, 2862 on tree, 54.76 best solution, best possible 54.74 (890.84 seconds)
Cbc0010I After 27000 nodes, 3217 on tree, 54.76 best solution, best possible 54.74 (925.85 seconds)
Cbc0010I After 28000 nodes, 3562 on tree, 54.76 best solution, best possible 54.74 (963.13 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 50 rows 90 columns
Cbc0010I After 29000 nodes, 3903 on tree, 54.76 best solution, best possible 54.74 (1002.14 seconds)
Cbc0010I After 30000 nodes, 3848 on tree, 54.76 best solution, best possible 54.74 (1025.42 seconds)
Cbc0010I After 31000 nodes, 4072 on tree, 54.76 best solution, best possible 54.740062 (1062.62 seconds)
Cbc0010I After 32000 nodes, 4291 on tree, 54.76 best solution, best possible 54.740468 (1103.37 seconds)
Cbc0010I After 33000 nodes, 4453 on tree, 54.76 best solution, best possible 54.740917 (1145.26 seconds)
Cbc0010I After 34000 nodes, 4384 on tree, 54.76 best solution, best possible 54.740917 (1168.22 seconds)
Cbc0010I After 35000 nodes, 4559 on tree, 54.76 best solution, best possible 54.741091 (1201.76 seconds)
Cbc0010I After 36000 nodes, 4661 on tree, 54.76 best solution, best possible 54.741091 (1223.21 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 46 rows 82 columns
Cbc0010I After 37000 nodes, 4733 on tree, 54.76 best solution, best possible 54.741091 (1244.75 seconds)
Cbc0010I After 38000 nodes, 4739 on tree, 54.76 best solution, best possible 54.741091 (1269.46 seconds)
Cbc0010I After 39000 nodes, 4811 on tree, 54.76 best solution, best possible 54.741091 (1291.66 seconds)
Cbc0010I After 40000 nodes, 4863 on tree, 54.76 best solution, best possible 54.741298 (1317.75 seconds)
Cbc0010I After 41000 nodes, 5093 on tree, 54.76 best solution, best possible 54.741539 (1356.68 seconds)
Cbc0010I After 42000 nodes, 5022 on tree, 54.76 best solution, best possible 54.741539 (1379.38 seconds)
Cbc0010I After 43000 nodes, 5232 on tree, 54.76 best solution, best possible 54.741696 (1409.89 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 46 rows 86 columns
Cbc0010I After 44000 nodes, 5484 on tree, 54.76 best solution, best possible 54.741696 (1437.49 seconds)
Cbc0010I After 45000 nodes, 5727 on tree, 54.76 best solution, best possible 54.741696 (1465.28 seconds)
Cbc0010I After 46000 nodes, 5512 on tree, 54.76 best solution, best possible 54.741696 (1483.40 seconds)
Cbc0010I After 47000 nodes, 5720 on tree, 54.76 best solution, best possible 54.741696 (1510.64 seconds)
Cbc0010I After 48000 nodes, 5991 on tree, 54.76 best solution, best possible 54.741696 (1539.08 seconds)
Cbc0010I After 49000 nodes, 6199 on tree, 54.76 best solution, best possible 54.741696 (1567.93 seconds)
Cbc0010I After 50000 nodes, 6208 on tree, 54.76 best solution, best possible 54.741696 (1591.48 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 37 rows 70 columns
Cbc0010I After 51000 nodes, 6415 on tree, 54.76 best solution, best possible 54.741696 (1619.51 seconds)
Cbc0010I After 52000 nodes, 6664 on tree, 54.76 best solution, best possible 54.741696 (1646.80 seconds)
Cbc0010I After 53000 nodes, 6887 on tree, 54.76 best solution, best possible 54.741696 (1674.54 seconds)
Cbc0010I After 54000 nodes, 6765 on tree, 54.76 best solution, best possible 54.741696 (1695.92 seconds)
Cbc0010I After 55000 nodes, 6973 on tree, 54.76 best solution, best possible 54.741696 (1723.41 seconds)
Cbc0010I After 56000 nodes, 7178 on tree, 54.76 best solution, best possible 54.741696 (1751.47 seconds)
Cbc0010I After 57000 nodes, 7387 on tree, 54.76 best solution, best possible 54.741696 (1778.52 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 46 rows 83 columns
Cbc0010I After 58000 nodes, 7101 on tree, 54.76 best solution, best possible 54.741696 (1796.72 seconds)
Cbc0010I After 59000 nodes, 7383 on tree, 54.76 best solution, best possible 54.741696 (1824.68 seconds)
Cbc0010I After 60000 nodes, 7620 on tree, 54.76 best solution, best possible 54.741696 (1851.62 seconds)
Cbc0010I After 61000 nodes, 7901 on tree, 54.76 best solution, best possible 54.741696 (1878.60 seconds)
Cbc0010I After 62000 nodes, 7666 on tree, 54.76 best solution, best possible 54.741696 (1897.66 seconds)
Cbc0010I After 63000 nodes, 7954 on tree, 54.76 best solution, best possible 54.741696 (1925.90 seconds)
Cbc0010I After 64000 nodes, 8234 on tree, 54.76 best solution, best possible 54.741696 (1953.61 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 52 rows 92 columns
Cbc0010I After 65000 nodes, 8431 on tree, 54.76 best solution, best possible 54.741696 (1979.42 seconds)
Cbc0010I After 66000 nodes, 8229 on tree, 54.76 best solution, best possible 54.741696 (1999.10 seconds)
Cbc0010I After 67000 nodes, 8472 on tree, 54.76 best solution, best possible 54.741696 (2026.95 seconds)
Cbc0010I After 68000 nodes, 8700 on tree, 54.76 best solution, best possible 54.741696 (2052.94 seconds)
Cbc0010I After 69000 nodes, 8923 on tree, 54.76 best solution, best possible 54.741696 (2079.95 seconds)
Cbc0010I After 70000 nodes, 8683 on tree, 54.76 best solution, best possible 54.741696 (2098.56 seconds)
Cbc0010I After 71000 nodes, 8918 on tree, 54.76 best solution, best possible 54.741696 (2124.53 seconds)
Cbc0010I After 72000 nodes, 9111 on tree, 54.76 best solution, best possible 54.741696 (2150.99 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 40 rows 75 columns
Cbc0010I After 73000 nodes, 9273 on tree, 54.76 best solution, best possible 54.741696 (2177.79 seconds)
Cbc0010I After 74000 nodes, 9001 on tree, 54.76 best solution, best possible 54.741696 (2194.54 seconds)
Cbc0010I After 75000 nodes, 9244 on tree, 54.76 best solution, best possible 54.741696 (2222.84 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 46 rows 87 columns
Cbc0010I After 76000 nodes, 9410 on tree, 54.76 best solution, best possible 54.741696 (2247.95 seconds)
Cbc0010I After 77000 nodes, 9580 on tree, 54.76 best solution, best possible 54.741696 (2274.59 seconds)
Cbc0010I After 78000 nodes, 9371 on tree, 54.76 best solution, best possible 54.741696 (2292.80 seconds)
Cbc0010I After 79000 nodes, 9581 on tree, 54.76 best solution, best possible 54.741696 (2319.57 seconds)
Cbc0010I After 80000 nodes, 9756 on tree, 54.76 best solution, best possible 54.741696 (2345.69 seconds)
Cbc0010I After 81000 nodes, 9944 on tree, 54.76 best solution, best possible 54.741696 (2372.69 seconds)
Cbc0010I After 82000 nodes, 9777 on tree, 54.76 best solution, best possible 54.741696 (2392.10 seconds)
Cbc0010I After 83000 nodes, 9988 on tree, 54.76 best solution, best possible 54.741696 (2418.34 seconds)
Cbc0010I After 84000 nodes, 10146 on tree, 54.76 best solution, best possible 54.741696 (2444.28 seconds)
Cbc0010I After 85000 nodes, 10124 on tree, 54.76 best solution, best possible 54.741696 (2466.25 seconds)
Cbc0010I After 86000 nodes, 9899 on tree, 54.76 best solution, best possible 54.741696 (2484.94 seconds)
Cbc0010I After 87000 nodes, 9717 on tree, 54.76 best solution, best possible 54.741696 (2505.11 seconds)
Cbc0010I After 88000 nodes, 9514 on tree, 54.76 best solution, best possible 54.741696 (2524.43 seconds)
Cbc0010I After 89000 nodes, 9316 on tree, 54.76 best solution, best possible 54.741696 (2545.03 seconds)
Cbc0010I After 90000 nodes, 9082 on tree, 54.76 best solution, best possible 54.741696 (2563.10 seconds)
Cbc0010I After 91000 nodes, 9286 on tree, 54.76 best solution, best possible 54.741696 (2590.01 seconds)
Cbc0010I After 92000 nodes, 9418 on tree, 54.76 best solution, best possible 54.741696 (2615.49 seconds)
Cbc0010I After 93000 nodes, 9667 on tree, 54.76 best solution, best possible 54.741696 (2641.75 seconds)
Cbc0010I After 94000 nodes, 9518 on tree, 54.76 best solution, best possible 54.741696 (2660.20 seconds)
Cbc0010I After 95000 nodes, 9733 on tree, 54.76 best solution, best possible 54.741696 (2686.77 seconds)
Cbc0010I After 96000 nodes, 9893 on tree, 54.76 best solution, best possible 54.741696 (2713.97 seconds)
Cbc0010I After 97000 nodes, 10117 on tree, 54.76 best solution, best possible 54.741696 (2739.53 seconds)
Cbc0010I After 98000 nodes, 9944 on tree, 54.76 best solution, best possible 54.741696 (2757.87 seconds)
Cbc0010I After 99000 nodes, 9827 on tree, 54.76 best solution, best possible 54.741696 (2777.82 seconds)
Cbc0010I After 100000 nodes, 9749 on tree, 54.76 best solution, best possible 54.741696 (2798.28 seconds)
Cbc0010I After 101000 nodes, 9571 on tree, 54.76 best solution, best possible 54.741696 (2818.28 seconds)
Cbc0010I After 102000 nodes, 9658 on tree, 54.76 best solution, best possible 54.741696 (2842.85 seconds)
Cbc0010I After 103000 nodes, 9793 on tree, 54.76 best solution, best possible 54.741696 (2868.92 seconds)
Cbc0010I After 104000 nodes, 9992 on tree, 54.76 best solution, best possible 54.741696 (2893.95 seconds)
Cbc0010I After 105000 nodes, 10267 on tree, 54.76 best solution, best possible 54.741696 (2920.83 seconds)
Cbc0010I After 106000 nodes, 10437 on tree, 54.76 best solution, best possible 54.741696 (2947.46 seconds)
Cbc0010I After 107000 nodes, 10419 on tree, 54.76 best solution, best possible 54.741696 (2969.75 seconds)
Cbc0010I After 108000 nodes, 10499 on tree, 54.76 best solution, best possible 54.741696 (2995.51 seconds)
Cbc0010I After 109000 nodes, 10436 on tree, 54.76 best solution, best possible 54.741696 (3015.84 seconds)
Cbc0010I After 110000 nodes, 10617 on tree, 54.76 best solution, best possible 54.741696 (3042.59 seconds)
Cbc0010I After 111000 nodes, 10734 on tree, 54.76 best solution, best possible 54.741696 (3068.38 seconds)
Cbc0010I After 112000 nodes, 10944 on tree, 54.76 best solution, best possible 54.741696 (3097.22 seconds)
Cbc0010I After 113000 nodes, 10851 on tree, 54.76 best solution, best possible 54.741696 (3118.17 seconds)
Cbc0010I After 114000 nodes, 11071 on tree, 54.76 best solution, best possible 54.741696 (3144.88 seconds)
Cbc0010I After 115000 nodes, 11200 on tree, 54.76 best solution, best possible 54.741696 (3171.51 seconds)
Cbc0010I After 116000 nodes, 11252 on tree, 54.76 best solution, best possible 54.741696 (3194.77 seconds)
Cbc0010I After 117000 nodes, 11244 on tree, 54.76 best solution, best possible 54.741696 (3217.74 seconds)
Cbc0010I After 118000 nodes, 11427 on tree, 54.76 best solution, best possible 54.741696 (3243.41 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 43 rows 78 columns
Cbc0010I After 119000 nodes, 11598 on tree, 54.76 best solution, best possible 54.741696 (3270.93 seconds)
Cbc0010I After 120000 nodes, 11732 on tree, 54.76 best solution, best possible 54.741696 (3296.96 seconds)
Cbc0010I After 121000 nodes, 11675 on tree, 54.76 best solution, best possible 54.741696 (3317.54 seconds)
Cbc0010I After 122000 nodes, 11858 on tree, 54.76 best solution, best possible 54.741696 (3343.15 seconds)
Cbc0010I After 123000 nodes, 11924 on tree, 54.76 best solution, best possible 54.741696 (3367.88 seconds)
Cbc0010I After 124000 nodes, 12138 on tree, 54.76 best solution, best possible 54.741696 (3396.58 seconds)
Cbc0010I After 125000 nodes, 12216 on tree, 54.76 best solution, best possible 54.741696 (3420.58 seconds)
Cbc0010I After 126000 nodes, 12395 on tree, 54.76 best solution, best possible 54.741696 (3445.71 seconds)
Cbc0010I After 127000 nodes, 12520 on tree, 54.76 best solution, best possible 54.741696 (3471.85 seconds)
Cbc0010I After 128000 nodes, 12634 on tree, 54.76 best solution, best possible 54.741696 (3496.19 seconds)
Cbc0010I After 129000 nodes, 12673 on tree, 54.76 best solution, best possible 54.741696 (3517.70 seconds)
Cbc0038I Full problem 83 rows 888 columns, reduced to 44 rows 83 columns
Cbc0010I After 130000 nodes, 12922 on tree, 54.76 best solution, best possible 54.741696 (3543.31 seconds)
Cbc0010I After 131000 nodes, 12999 on tree, 54.76 best solution, best possible 54.741696 (3566.67 seconds)
Cbc0010I After 132000 nodes, 13108 on tree, 54.76 best solution, best possible 54.741696 (3590.83 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 54.76 (best possible 54.741696), took 5697142 iterations and 132416 nodes (3602.17 seconds)
Cbc0032I Strong branching done 1142590 times (7820863 iterations), fathomed 3413 nodes and fixed 9682 variables
Cbc0035I Maximum depth 73, 700194 variables fixed on reduced cost
Cuts at root node changed objective from 23.26 to 52.1939
Probing was tried 56 times and created 233 cuts of which 100 were active after adding rounds of cuts (1.208 seconds)
Gomory was tried 126062 times and created 185174 cuts of which 75718 were active after adding rounds of cuts (219.802 seconds)
Knapsack was tried 56 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.312 seconds)
Clique was tried 56 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
MixedIntegerRounding2 was tried 126068 times and created 877251 cuts of which 207169 were active after adding rounds of cuts (262.792 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 126062 times and created 165772 cuts of which 332 were active after adding rounds of cuts (105.571 seconds)

Result - Stopped on time limit

Objective value:                54.76000000
Lower bound:                    54.742
Gap:                            0.00
Enumerated nodes:               132416
Total iterations:               5697142
Time (CPU seconds):             3602.39
Time (Wallclock seconds):       5644.76

Total time (CPU seconds):       3602.41   (Wallclock seconds):       5644.92

=obj= 54.76000000 
C0002 19 
C0003 6 
C0025 3.24 
C0027 2 
C0028 3.42 
C0031 0.14 
C0032 0.14 
C0035 1.88 
C0036 3.23 
C0037 2.91 
C0038 3.32 
C0041 3.21 
C0042 1.94 
C0043 2.47 
C0045 1.77 
C0046 0.06 
C0047 0.03 
C0062 1 
C0094 1 
C0099 1 
C0139 1 
C0145 1 
C0182 1 
C0201 1 
C0220 1 
C0242 1 
C0267 1 
C0309 1 
C0320 1 
C0356 1 
C0379 1 
C0390 1 
C0426 1 
C0450 1 
C0473 1 
C0501 1 
C0515 1 
C0541 1 
C0564 1 
C0577 1 
C0624 1 
C0636 1 
C0661 1 
C0683 1 
C0712 1 
C0730 1 
C0749 1 
C0783 1 
C0796 1 
C0823 1 
C0857 1 
C0887 1 

@04 1393029898
@05 3600

Read MPS: 1
MIP has 888 vars and 83 constraints
Read SOL: 1
Objective value computed by solver: 54.76

Integrality tolerance: 1/10000
Linear tolerance: 1/10000
Objective tolerance: 1/10000

Check SOL: Integrality 1 Constraints 1 Objective 1
Maximum violations: Integrality 0 Constraints 0 Objective 0

-----------------------------
Fri Feb 21 19:44:58 EST 2014
-----------------------------

=ready=
@01 instances/decomplib/noswot.mps ===========
-----------------------------
Fri Feb 21 19:44:58 EST 2014
-----------------------------
@03 1393029898
Welcome to the CBC MILP Solver 
Version: Trunk (unstable) 
Build Date: Feb  9 2014 
Revision Number: 2007 

command line - /home/jiw508/miplib2010-1.0.3/bin/cbc -import instances/decomplib/noswot.mps -sec 3600 -ratio 0.0 -solve -solution /home/jiw508/miplib2010-1.0.3/results/solutions/decomp.cbc.noswot.mps.sol (default strategy 1)
At line 1 NAME           noswot
At line 2 ROWS
At line 186 COLUMNS
At line 598 RHS
At line 628 BOUNDS
At line 729 ENDATA
Problem noswot has 182 rows, 128 columns and 735 elements
Coin0008I noswot read with 0 errors
seconds was changed from 1e+100 to 3600
ratioGap was changed from 0 to 0
Continuous objective value is -43 - 0.01 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0004I processed model has 171 rows, 120 columns (95 integer) and 681 elements
Cbc0038I Initial state - 11 integers unsatisfied sum - 2.01804
Cbc0038I Pass   1: suminf.    0.58273 (2) obj. -41.4173 iterations 26
Cbc0038I Solution found of -41.4173
Cbc0038I Branch and bound needed to clear up 2 general integers
Cbc0038I Full problem 171 rows 120 columns, reduced to 15 rows 11 columns
Cbc0038I Cleaned solution of -40
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 23 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 171 rows 120 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -41.1999
Cbc0038I Pass   2: suminf.    0.58273 (2) obj. -41.4173 iterations 0
Cbc0038I Solution found of -41.4173
Cbc0038I Branch and bound needed to clear up 2 general integers
Cbc0038I Full problem 172 rows 120 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound could not fix general integers
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 23 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 171 rows 120 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -40 - took 0.06 seconds
Cbc0012I Integer solution of -40 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0012I Integer solution of -41 found by DiveCoefficient after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced to 29 rows 20 columns
Cbc0038I Full problem 171 rows 120 columns, reduced to 11 rows 8 columns
Cbc0031I 16 added rows had average density of 84.1875
Cbc0013I At root node, 16 cuts changed objective from -43 to -43 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 28 row cuts average 2.9 elements, 0 column cuts (6 active)  in 0.208 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1988 row cuts average 90.8 elements, 0 column cuts (0 active)  in 0.304 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 240 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.400 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 347 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -41 best solution, best possible -43 (3.28 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced to 70 rows 39 columns
Cbc0038I Full problem 171 rows 120 columns, reduced to 93 rows 54 columns
Cbc0038I Full problem 171 rows 120 columns, reduced to 73 rows 44 columns
Cbc0038I Full problem 171 rows 120 columns, reduced to 104 rows 63 columns
Cbc0038I Full problem 171 rows 120 columns, reduced to 97 rows 58 columns
Cbc0038I Full problem 171 rows 120 columns, reduced to 106 rows 64 columns
Cbc0038I Full problem 171 rows 120 columns, reduced to 116 rows 73 columns - 1 fixed gives 114, 72 - ok now
Cbc0038I Full problem 171 rows 120 columns, reduced to 97 rows 61 columns
Cbc0010I After 1000 nodes, 17 on tree, -41 best solution, best possible -43 (46.65 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced to 143 rows 88 columns - 4 fixed gives 134, 84 - still too large
Cbc0038I Full problem 171 rows 120 columns, reduced to 126 rows 77 columns - 3 fixed gives 120, 74 - still too large
Cbc0038I Full problem 171 rows 120 columns, reduced to 113 rows 69 columns
Cbc0010I After 2000 nodes, 10 on tree, -41 best solution, best possible -43 (77.65 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced to 110 rows 68 columns
Cbc0010I After 3000 nodes, 10 on tree, -41 best solution, best possible -43 (89.73 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced to 56 rows 30 columns
Cbc0010I After 4000 nodes, 14 on tree, -41 best solution, best possible -43 (106.08 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced to 88 rows 54 columns
Cbc0010I After 5000 nodes, 11 on tree, -41 best solution, best possible -43 (116.12 seconds)
Cbc0010I After 6000 nodes, 13 on tree, -41 best solution, best possible -43 (128.72 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced to 126 rows 75 columns - 2 fixed gives 122, 73 - still too large
Cbc0038I Full problem 171 rows 120 columns, reduced to 119 rows 71 columns - too large
Cbc0010I After 7000 nodes, 11 on tree, -41 best solution, best possible -43 (145.70 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced to 151 rows 90 columns - 4 fixed gives 143, 86 - still too large
Cbc0010I After 8000 nodes, 10 on tree, -41 best solution, best possible -43 (154.23 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced to 134 rows 80 columns - 4 fixed gives 126, 76 - still too large
Cbc0038I Full problem 171 rows 120 columns, reduced to 118 rows 71 columns - too large
Cbc0010I After 9000 nodes, 10 on tree, -41 best solution, best possible -43 (159.41 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced to 127 rows 77 columns - 4 fixed gives 119, 73 - still too large
Cbc0038I Full problem 171 rows 120 columns, reduced to 111 rows 68 columns
Cbc0010I After 10000 nodes, 14 on tree, -41 best solution, best possible -43 (166.37 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced to 57 rows 33 columns
Cbc0010I After 11000 nodes, 11 on tree, -41 best solution, best possible -43 (172.01 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced tocbc: ../../../CoinUtils/src/CoinIndexedVector.cpp:326: void CoinIndexedVector::checkClear(): Assertion `!elements_[i]' failed.
 105 rows 66 columns
Cbc0010I After 12000 nodes, 242 on tree, -41 best solution, best possible -43 (186.89 seconds)
Cbc0010I After 13000 nodes, 524 on tree, -41 best solution, best possible -43 (211.59 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced to 111 rows 65 columns
Cbc0010I After 14000 nodes, 297 on tree, -41 best solution, best possible -43 (227.75 seconds)
Cbc0010I After 15000 nodes, 563 on tree, -41 best solution, best possible -43 (266.31 seconds)
Cbc0010I After 16000 nodes, 808 on tree, -41 best solution, best possible -43 (278.52 seconds)
Cbc0010I After 17000 nodes, 972 on tree, -41 best solution, best possible -43 (299.70 seconds)
Cbc0010I After 18000 nodes, 748 on tree, -41 best solution, best possible -43 (307.10 seconds)
Cbc0010I After 19000 nodes, 991 on tree, -41 best solution, best possible -43 (322.86 seconds)
Cbc0010I After 20000 nodes, 1267 on tree, -41 best solution, best possible -43 (337.67 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced to 85 rows 53 columns
Cbc0010I After 21000 nodes, 1463 on tree, -41 best solution, best possible -43 (368.79 seconds)
Cbc0010I After 22000 nodes, 1189 on tree, -41 best solution, best possible -43 (376.18 seconds)
Cbc0010I After 23000 nodes, 1401 on tree, -41 best solution, best possible -43 (392.54 seconds)
Cbc0010I After 24000 nodes, 1600 on tree, -41 best solution, best possible -43 (409.41 seconds)
Cbc0010I After 25000 nodes, 1899 on tree, -41 best solution, best possible -43 (428.29 seconds)
Cbc0010I After 26000 nodes, 1593 on tree, -41 best solution, best possible -43 (435.35 seconds)
Cbc0010I After 27000 nodes, 1846 on tree, -41 best solution, best possible -43 (453.91 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced to 116 rows 70 columns - 1 fixed gives 114, 69 - ok now
Cbc0038I Full problem 171 rows 120 columns, reduced to 112 rows 66 columns
Cbc0010I After 28000 nodes, 2054 on tree, -41 best solution, best possible -43 (474.23 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced to 113 rows 68 columns
Cbc0010I After 29000 nodes, 2278 on tree, -41 best solution, best possible -43 (507.81 seconds)
Cbc0010I After 30000 nodes, 2007 on tree, -41 best solution, best possible -43 (517.90 seconds)
Cbc0010I After 31000 nodes, 2254 on tree, -41 best solution, best possible -43 (541.83 seconds)
Cbc0010I After 32000 nodes, 2525 on tree, -41 best solution, best possible -43 (559.83 seconds)
Cbc0010I After 33000 nodes, 2805 on tree, -41 best solution, best possible -43 (575.92 seconds)
Cbc0010I After 34000 nodes, 2579 on tree, -41 best solution, best possible -43 (582.38 seconds)
Cbc0010I After 35000 nodes, 2848 on tree, -41 best solution, best possible -43 (602.56 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced to 103 rows 62 columns
Cbc0010I After 36000 nodes, 3034 on tree, -41 best solution, best possible -43 (613.05 seconds)
Cbc0010I After 37000 nodes, 3266 on tree, -41 best solution, best possible -43 (623.44 seconds)
Cbc0010I After 38000 nodes, 3039 on tree, -41 best solution, best possible -43 (629.80 seconds)
Cbc0010I After 39000 nodes, 3325 on tree, -41 best solution, best possible -43 (642.68 seconds)
Cbc0010I After 40000 nodes, 3574 on tree, -41 best solution, best possible -43 (653.60 seconds)
Cbc0010I After 41000 nodes, 3759 on tree, -41 best solution, best possible -43 (663.76 seconds)
Cbc0010I After 42000 nodes, 3534 on tree, -41 best solution, best possible -43 (669.30 seconds)
Cbc0010I After 43000 nodes, 3828 on tree, -41 best solution, best possible -43 (682.12 seconds)
Cbc0038I Full problem 171 rows 120 columns, reduced to 108 rows 65 columns
Cbc0010I After 44000 nodes, 3982 on tree, -41 best solution, best possible -43 (689.27 seconds)
Cbc0010I After 45000 nodes, 4124 on tree, -41 best solution, best possible -43 (696.58 seconds)
Cbc0010I After 46000 nodes, 3884 on tree, -41 best solution, best possible -43 (700.80 seconds)
Cbc0010I After 47000 nodes, 4143 on tree, -41 best solution, best possible -43 (713.65 seconds)
/home/jiw508/miplib2010-1.0.3/scripts/run_cbc.sh: line 25: 25847 Aborted                 $BINNAME -import $NAME -sec $TIMELIMIT -ratio $MIPGAP -solve -solution $SOLFILE
  

@04 1393030624
@05 3600

Read MPS: 1
MIP has 128 vars and 182 constraints
Read SOL: 0

-----------------------------
Fri Feb 21 19:57:04 EST 2014
-----------------------------

=ready=
@01 instances/decomplib/ns1702808.mps ===========
-----------------------------
Fri Feb 21 19:57:04 EST 2014
-----------------------------
@03 1393030624
Welcome to the CBC MILP Solver 
Version: Trunk (unstable) 
Build Date: Feb  9 2014 
Revision Number: 2007 

command line - /home/jiw508/miplib2010-1.0.3/bin/cbc -import instances/decomplib/ns1702808.mps -sec 3600 -ratio 0.0 -solve -solution /home/jiw508/miplib2010-1.0.3/results/solutions/decomp.cbc.ns1702808.mps.sol (default strategy 1)
At line 1 NAME           ns1702808
At line 2 ROWS
At line 1478 COLUMNS
At line 7997 RHS
At line 9412 BOUNDS
At line 10217 ENDATA
Problem ns1702808 has 1474 rows, 804 columns and 5856 elements
Coin0008I ns1702808 read with 0 errors
seconds was changed from 1e+100 to 3600
ratioGap was changed from 0 to 0
Continuous objective value is 1700 - 0.03 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 540 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 540 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 540 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 540 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 540 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 288 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 162 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 162 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 162 strengthened rows, 0 substitutions
Cgl0004I processed model has 1180 rows, 744 columns (624 integer) and 8598 elements
Cbc0038I Initial state - 20 integers unsatisfied sum - 2.01645
Cbc0038I Pass   1: suminf.    1.87442 (29) obj. 2556.07 iterations 157
Cbc0038I Pass   2: suminf.    5.72530 (21) obj. 11691.8 iterations 276
Cbc0038I Pass   3: suminf.    4.04881 (15) obj. 11920.1 iterations 59
Cbc0038I Pass   4: suminf.    3.38020 (11) obj. 10234.8 iterations 70
Cbc0038I Pass   5: suminf.    3.21490 (15) obj. 10270.4 iterations 71
Cbc0038I Pass   6: suminf.    3.20504 (10) obj. 9000.93 iterations 125
Cbc0038I Pass   7: suminf.    2.45397 (10) obj. 7391.74 iterations 28
Cbc0038I Pass   8: suminf.    2.96987 (10) obj. 7857.37 iterations 41
Cbc0038I Pass   9: suminf.    2.48765 (13) obj. 7378.29 iterations 30
Cbc0038I Pass  10: suminf.    8.47059 (28) obj. 11587.1 iterations 195
Cbc0038I Pass  11: suminf.    4.39193 (12) obj. 10437.2 iterations 188
Cbc0038I Pass  12: suminf.    2.95943 (13) obj. 9740.74 iterations 93
Cbc0038I Pass  13: suminf.    2.66676 (10) obj. 9467.94 iterations 62
Cbc0038I Pass  14: suminf.    3.77921 (11) obj. 9460.28 iterations 74
Cbc0038I Pass  15: suminf.    3.00559 (11) obj. 10728.3 iterations 59
Cbc0038I Pass  16: suminf.    2.74526 (13) obj. 10000.9 iterations 13
Cbc0038I Pass  17: suminf.    2.90218 (13) obj. 8049.02 iterations 125
Cbc0038I Pass  18: suminf.    2.28045 (9) obj. 7932.36 iterations 67
Cbc0038I Pass  19: suminf.    2.28045 (9) obj. 7932.36 iterations 0
Cbc0038I Pass  20: suminf.    2.52952 (7) obj. 8308.35 iterations 46
Cbc0038I Pass  21: suminf.    2.28045 (8) obj. 7932.36 iterations 22
Cbc0038I Pass  22: suminf.    2.57242 (7) obj. 8353.18 iterations 29
Cbc0038I Pass  23: suminf.    7.20070 (22) obj. 12498.8 iterations 165
Cbc0038I Pass  24: suminf.    2.93232 (17) obj. 10890.6 iterations 109
Cbc0038I Pass  25: suminf.    2.49072 (13) obj. 10754.8 iterations 14
Cbc0038I Pass  26: suminf.    2.90479 (10) obj. 12135.8 iterations 154
Cbc0038I Pass  27: suminf.    2.72820 (15) obj. 11822 iterations 52
Cbc0038I Pass  28: suminf.    3.51163 (13) obj. 11578.1 iterations 105
Cbc0038I Pass  29: suminf.    3.05995 (18) obj. 11671.4 iterations 87
Cbc0038I Pass  30: suminf.    3.76674 (13) obj. 13586.8 iterations 75
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 466 integers at bound fixed and 26 continuous
Cbc0038I Full problem 1180 rows 744 columns, reduced to 839 rows 207 columns - too large
Cbc0038I Mini branch and bound did not improve solution (3.76 seconds)
Cbc0038I Full problem 1181 rows 744 columns, reduced to 1181 rows 744 columns - too large
Cbc0038I After 3.83 seconds - Feasibility pump exiting - took 1.32 seconds
Cbc0031I 40 added rows had average density of 61.175
Cbc0013I At root node, 40 cuts changed objective from 1700 to 4119.8982 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 20 row cuts average 10.0 elements, 0 column cuts (10 active)  in 0.332 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 141 row cuts average 256.9 elements, 0 column cuts (22 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 43.7 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 78 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 4119.8982 (6.98 seconds)
Cbc0010I After 1000 nodes, 33 on tree, 1e+50 best solution, best possible 4119.8982 (76.64 seconds)
Cbc0010I After 2000 nodes, 98 on tree, 1e+50 best solution, best possible 4119.8982 (144.64 seconds)
Cbc0010I After 3000 nodes, 87 on tree, 1e+50 best solution, best possible 4119.8982 (227.53 seconds)
Cbc0010I After 4000 nodes, 77 on tree, 1e+50 best solution, best possible 4119.8982 (296.34 seconds)
Cbc0010I After 5000 nodes, 58 on tree, 1e+50 best solution, best possible 4119.8982 (367.33 seconds)
Cbc0010I After 6000 nodes, 94 on tree, 1e+50 best solution, best possible 4119.8982 (482.31 seconds)
Cbc0010I After 7000 nodes, 96 on tree, 1e+50 best solution, best possible 4119.8982 (572.32 seconds)
Cbc0010I After 8000 nodes, 80 on tree, 1e+50 best solution, best possible 4119.8982 (649.40 seconds)
Cbc0010I After 9000 nodes, 77 on tree, 1e+50 best solution, best possible 4119.8982 (730.70 seconds)
Cbc0010I After 10000 nodes, 170 on tree, 1e+50 best solution, best possible 4119.8982 (851.21 seconds)
Cbc0010I After 11000 nodes, 185 on tree, 1e+50 best solution, best possible 4119.8982 (939.73 seconds)
Cbc0010I After 12000 nodes, 611 on tree, 1e+50 best solution, best possible 4634.8747 (1024.58 seconds)
Cbc0010I After 13000 nodes, 1076 on tree, 1e+50 best solution, best possible 4703.2551 (1101.54 seconds)
Cbc0010I After 14000 nodes, 1145 on tree, 1e+50 best solution, best possible 4703.2551 (1155.56 seconds)
Cbc0010I After 15000 nodes, 1130 on tree, 1e+50 best solution, best possible 4703.2551 (1205.76 seconds)
Cbc0010I After 16000 nodes, 1111 on tree, 1e+50 best solution, best possible 4703.2551 (1260.16 seconds)
Cbc0010I After 17000 nodes, 1105 on tree, 1e+50 best solution, best possible 4703.2551 (1322.06 seconds)
Cbc0010I After 18000 nodes, 1102 on tree, 1e+50 best solution, best possible 4703.2551 (1397.72 seconds)
Cbc0010I After 19000 nodes, 1112 on tree, 1e+50 best solution, best possible 4703.2551 (1476.84 seconds)
Cbc0010I After 20000 nodes, 1089 on tree, 1e+50 best solution, best possible 4703.2551 (1542.14 seconds)
Cbc0010I After 21000 nodes, 1112 on tree, 1e+50 best solution, best possible 4703.2551 (1624.22 seconds)
Cbc0010I After 22000 nodes, 1091 on tree, 1e+50 best solution, best possible 4703.2551 (1699.63 seconds)
Cbc0010I After 23000 nodes, 1097 on tree, 1e+50 best solution, best possible 4703.2551 (1783.18 seconds)
Cbc0010I After 24000 nodes, 1079 on tree, 1e+50 best solution, best possible 4703.2551 (1853.83 seconds)
Cbc0010I After 25000 nodes, 1088 on tree, 1e+50 best solution, best possible 4703.2551 (1944.93 seconds)
Cbc0010I After 26000 nodes, 1069 on tree, 1e+50 best solution, best possible 4703.9362 (2026.93 seconds)
Cbc0010I After 27000 nodes, 1075 on tree, 1e+50 best solution, best possible 4703.9362 (2119.98 seconds)
Cbc0010I After 28000 nodes, 1077 on tree, 1e+50 best solution, best possible 4703.9362 (2210.50 seconds)
Cbc0010I After 29000 nodes, 1131 on tree, 1e+50 best solution, best possible 4703.9362 (2279.29 seconds)
Cbc0010I After 30000 nodes, 1113 on tree, 1e+50 best solution, best possible 4704.2271 (2361.46 seconds)
Cbc0010I After 31000 nodes, 1107 on tree, 1e+50 best solution, best possible 4704.2271 (2450.67 seconds)
Cbc0010I After 32000 nodes, 1104 on tree, 1e+50 best solution, best possible 4704.2271 (2528.21 seconds)
Cbc0010I After 33000 nodes, 1101 on tree, 1e+50 best solution, best possible 4704.2271 (2603.65 seconds)
Cbc0010I After 34000 nodes, 1107 on tree, 1e+50 best solution, best possible 4704.2271 (2686.23 seconds)
Cbc0010I After 35000 nodes, 1124 on tree, 1e+50 best solution, best possible 4704.298 (2762.86 seconds)
Cbc0010I After 36000 nodes, 1103 on tree, 1e+50 best solution, best possible 4704.298 (2838.23 seconds)
Cbc0010I After 37000 nodes, 1093 on tree, 1e+50 best solution, best possible 4704.298 (2905.19 seconds)
Cbc0010I After 38000 nodes, 1080 on tree, 1e+50 best solution, best possible 4704.313 (2983.82 seconds)
Cbc0010I After 39000 nodes, 1076 on tree, 1e+50 best solution, best possible 4704.313 (3055.08 seconds)
Cbc0010I After 40000 nodes, 1075 on tree, 1e+50 best solution, best possible 4704.313 (3150.44 seconds)
Cbc0010I After 41000 nodes, 1090 on tree, 1e+50 best solution, best possible 4704.313 (3218.91 seconds)
Cbc0010I After 42000 nodes, 1080 on tree, 1e+50 best solution, best possible 4704.6197 (3294.26 seconds)
Cbc0010I After 43000 nodes, 1080 on tree, 1e+50 best solution, best possible 4704.6197 (3363.59 seconds)
Cbc0010I After 44000 nodes, 1075 on tree, 1e+50 best solution, best possible 4704.6197 (3427.26 seconds)
Cbc0010I After 45000 nodes, 1108 on tree, 1e+50 best solution, best possible 4704.6197 (3504.46 seconds)
Cbc0010I After 46000 nodes, 1097 on tree, 1e+50 best solution, best possible 4704.7155 (3578.81 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 4704.7155), took 3665373 iterations and 46244 nodes (3597.62 seconds)
Cbc0032I Strong branching done 101416 times (2503348 iterations), fathomed 5644 nodes and fixed 28704 variables
Cbc0035I Maximum depth 170, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1700 to 4119.9
Probing was tried 49479 times and created 200586 cuts of which 85334 were active after adding rounds of cuts (125.108 seconds)
Gomory was tried 48628 times and created 59527 cuts of which 9113 were active after adding rounds of cuts (142.341 seconds)
Knapsack was tried 48628 times and created 6706 cuts of which 1819 were active after adding rounds of cuts (233.327 seconds)
Clique was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 48628 times and created 114142 cuts of which 18702 were active after adding rounds of cuts (195.756 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    4704.716
Enumerated nodes:               46244
Total iterations:               3665373
Time (CPU seconds):             3597.64
Time (Wallclock seconds):       3608.66

Total time (CPU seconds):       3597.68   (Wallclock seconds):       3608.74


@04 1393034233
@05 3600

Read MPS: 1
MIP has 804 vars and 1474 constraints
Read SOL: 0

-----------------------------
Fri Feb 21 20:57:13 EST 2014
-----------------------------

=ready=
@01 instances/decomplib/p12502.mps ===========
-----------------------------
Fri Feb 21 20:57:13 EST 2014
-----------------------------
@03 1393034233
Welcome to the CBC MILP Solver 
Version: Trunk (unstable) 
Build Date: Feb  9 2014 
Revision Number: 2007 

command line - /home/jiw508/miplib2010-1.0.3/bin/cbc -import instances/decomplib/p12502.mps -sec 3600 -ratio 0.0 -solve -solution /home/jiw508/miplib2010-1.0.3/results/solutions/decomp.cbc.p12502.mps.sol (default strategy 1)
At line 1 NAME check/instances/cpmp/p1250-2.l
At line 2 ROWS
At line 105 COLUMNS
At line 5208 RHS
At line 5260 BOUNDS
At line 7811 ENDATA
Problem check/instances/cpmp/p1250-2.l has 101 rows, 2550 columns and 5100 elements
Coin0008I check/instances/cpmp/p1250-2.l read with 0 errors
seconds was changed from 1e+100 to 3600
ratioGap was changed from 0 to 0
Continuous objective value is 0 - 0.02 seconds
Cgl0004I processed model has 101 rows, 2550 columns (2550 integer) and 5100 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 48 integers unsatisfied sum - 9.92
Cbc0038I Pass   1: suminf.    9.92000 (48) obj. 0 iterations 2
Cbc0038I Pass   2: suminf.    9.00000 (47) obj. 0 iterations 7
Cbc0038I Pass   3: suminf.    9.00000 (47) obj. 0 iterations 3
Cbc0038I Pass   4: suminf.    9.32000 (48) obj. 0 iterations 8
Cbc0038I Pass   5: suminf.    9.32000 (48) obj. 0 iterations 3
Cbc0038I Pass   6: suminf.    9.72000 (48) obj. 0 iterations 7
Cbc0038I Pass   7: suminf.    9.72000 (48) obj. 0 iterations 0
Cbc0038I Pass   8: suminf.    9.92000 (48) obj. 0 iterations 1
Cbc0038I Pass   9: suminf.    9.92000 (48) obj. 0 iterations 0
Cbc0038I Pass  10: suminf.    9.72000 (48) obj. 0 iterations 1
Cbc0038I Pass  11: suminf.    3.88000 (15) obj. 2124 iterations 116
Cbc0038I Pass  12: suminf.    3.88000 (15) obj. 2124 iterations 80
Cbc0038I Pass  13: suminf.    4.76000 (16) obj. 2124 iterations 20
Cbc0038I Pass  14: suminf.    4.76000 (16) obj. 2124 iterations 16
Cbc0038I Pass  15: suminf.    5.04000 (16) obj. 2124 iterations 29
Cbc0038I Pass  16: suminf.    2.96000 (15) obj. 2355.2 iterations 137
Cbc0038I Pass  17: suminf.    2.48000 (14) obj. 2356 iterations 98
Cbc0038I Pass  18: suminf.    2.76000 (14) obj. 2356 iterations 30
Cbc0038I Pass  19: suminf.    2.36000 (14) obj. 2356 iterations 38
Cbc0038I Pass  20: suminf.    2.84000 (15) obj. 2356 iterations 35
Cbc0038I Pass  21: suminf.    2.84000 (15) obj. 2356 iterations 25
Cbc0038I Pass  22: suminf.    2.76000 (14) obj. 2356 iterations 38
Cbc0038I Pass  23: suminf.    3.50000 (22) obj. 2140.09 iterations 194
Cbc0038I Pass  24: suminf.    2.67053 (20) obj. 2116.75 iterations 106
Cbc0038I Pass  25: suminf.    4.57053 (23) obj. 2105.05 iterations 65
Cbc0038I Pass  26: suminf.    3.96000 (19) obj. 2107 iterations 31
Cbc0038I Pass  27: suminf.    4.16000 (19) obj. 2107 iterations 35
Cbc0038I Pass  28: suminf.    3.88000 (19) obj. 2107 iterations 47
Cbc0038I Pass  29: suminf.    3.96000 (19) obj. 2107 iterations 32
Cbc0038I Pass  30: suminf.    7.21195 (22) obj. 2551.11 iterations 197
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2301 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 2550 columns, reduced to 98 rows 246 columns
Cbc0038I Mini branch and bound did not improve solution (2.41 seconds)
Cbc0038I Full problem 102 rows 2550 columns, reduced to 102 rows 2550 columns - too large
Cbc0038I After 4.45 seconds - Feasibility pump exiting - took 4.12 seconds
Cbc0031I 158 added rows had average density of 75.379747
Cbc0013I At root node, 158 cuts changed objective from 0 to 404.03257 in 42 passes
Cbc0014I Cut generator 0 (Probing) - 176 row cuts average 2.0 elements, 0 column cuts (129 active)  in 2.484 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 373 row cuts average 478.5 elements, 0 column cuts (0 active)  in 1.996 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 50 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.392 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 207 row cuts average 26.5 elements, 0 column cuts (2 active)  in 1.352 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 329 row cuts average 165.8 elements, 0 column cuts (0 active)  in 0.384 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 404.03257 (16.53 seconds)
Cbc0012I Integer solution of 413 found by DiveCoefficient after 1320 iterations and 6 nodes (18.15 seconds)
Cbc0038I Full problem 101 rows 2550 columns, reduced to 36 rows 87 columns
Cbc0004I Integer solution of 412 found after 1992 iterations and 21 nodes (20.79 seconds)
Cbc0001I Search completed - best objective 412, took 3097 iterations and 30 nodes (22.00 seconds)
Cbc0032I Strong branching done 284 times (4879 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 12, 15906 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 404.033
Probing was tried 92 times and created 869 cuts of which 227 were active after adding rounds of cuts (2.660 seconds)
Gomory was tried 91 times and created 458 cuts of which 8 were active after adding rounds of cuts (2.536 seconds)
Knapsack was tried 91 times and created 256 cuts of which 16 were active after adding rounds of cuts (0.980 seconds)
Clique was tried 42 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
MixedIntegerRounding2 was tried 91 times and created 361 cuts of which 12 were active after adding rounds of cuts (1.872 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 91 times and created 380 cuts of which 3 were active after adding rounds of cuts (0.636 seconds)

Result - Optimal solution found

Objective value:                412.00000000
Enumerated nodes:               30
Total iterations:               3097
Time (CPU seconds):             22.07
Time (Wallclock seconds):       22.16

Total time (CPU seconds):       22.10   (Wallclock seconds):       22.22

=obj= 412.00000000 
x#1#41 1 
x#4#2 1 
x#5#3 1 
x#6#16 1 
x#7#48 1 
x#8#47 1 
x#9#48 1 
x#11#31 1 
x#12#31 1 
x#14#13 1 
x#17#15 1 
x#18#10 1 
x#19#44 1 
x#20#47 1 
x#21#23 1 
x#22#31 1 
x#24#16 1 
x#25#48 1 
x#26#48 1 
x#27#10 1 
x#28#47 1 
x#29#41 1 
x#30#16 1 
x#32#2 1 
x#33#44 1 
x#34#44 1 
x#35#23 1 
x#36#44 1 
x#37#16 1 
x#38#23 1 
x#39#10 1 
x#40#16 1 
x#42#16 1 
x#43#15 1 
x#45#13 1 
x#46#44 1 
x#49#41 1 
x#50#47 1 
x#2#2 1 
x#3#3 1 
x#10#10 1 
x#13#13 1 
x#15#15 1 
x#16#16 1 
x#23#23 1 
x#31#31 1 
x#41#41 1 
x#44#44 1 
x#47#47 1 
x#48#48 1 
y#2 1 
y#3 1 
y#10 1 
y#13 1 
y#15 1 
y#16 1 
y#23 1 
y#31 1 
y#41 1 
y#44 1 
y#47 1 
y#48 1 

@04 1393034255
@05 3600

Read MPS: 1
MIP has 2550 vars and 101 constraints
Read SOL: 1
Objective value computed by solver: 412

Integrality tolerance: 1/10000
Linear tolerance: 1/10000
Objective tolerance: 1/10000

Check SOL: Integrality 1 Constraints 1 Objective 1
Maximum violations: Integrality 0 Constraints 0 Objective 0

-----------------------------
Fri Feb 21 20:57:35 EST 2014
-----------------------------

=ready=
@01 instances/decomplib/p16502.mps ===========
-----------------------------
Fri Feb 21 20:57:35 EST 2014
-----------------------------
@03 1393034255
Welcome to the CBC MILP Solver 
Version: Trunk (unstable) 
Build Date: Feb  9 2014 
Revision Number: 2007 

command line - /home/jiw508/miplib2010-1.0.3/bin/cbc -import instances/decomplib/p16502.mps -sec 3600 -ratio 0.0 -solve -solution /home/jiw508/miplib2010-1.0.3/results/solutions/decomp.cbc.p16502.mps.sol (default strategy 1)
At line 1 NAME check/instances/cpmp/p1650-2.t
At line 2 ROWS
At line 105 COLUMNS
At line 5208 RHS
At line 5260 BOUNDS
At line 7811 ENDATA
Problem check/instances/cpmp/p1650-2.t has 101 rows, 2550 columns and 5100 elements
Coin0008I check/instances/cpmp/p1650-2.t read with 0 errors
seconds was changed from 1e+100 to 3600
ratioGap was changed from 0 to 0
Continuous objective value is 0 - 0.02 seconds
Cgl0004I processed model has 101 rows, 2550 columns (2550 integer) and 5100 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 47 integers unsatisfied sum - 12.5789
Cbc0038I Pass   1: suminf.   11.73684 (46) obj. 0 iterations 2
Cbc0038I Pass   2: suminf.   11.73684 (46) obj. 0 iterations 0
Cbc0038I Pass   3: suminf.   10.63158 (45) obj. 0 iterations 7
Cbc0038I Pass   4: suminf.   10.63158 (45) obj. 0 iterations 0
Cbc0038I Pass   5: suminf.   11.05263 (46) obj. 0 iterations 5
Cbc0038I Pass   6: suminf.   11.05263 (46) obj. 0 iterations 0
Cbc0038I Pass   7: suminf.   11.05263 (46) obj. 0 iterations 0
Cbc0038I Pass   8: suminf.    5.24958 (18) obj. 1764.44 iterations 117
Cbc0038I Pass   9: suminf.    3.13684 (13) obj. 1793.57 iterations 83
Cbc0038I Pass  10: suminf.    3.32105 (14) obj. 1735.69 iterations 28
Cbc0038I Pass  11: suminf.    2.31579 (9) obj. 1713 iterations 6
Cbc0038I Pass  12: suminf.    2.31579 (9) obj. 1713 iterations 12
Cbc0038I Pass  13: suminf.    2.31579 (9) obj. 1713 iterations 10
Cbc0038I Pass  14: suminf.    6.66584 (22) obj. 2022.12 iterations 124
Cbc0038I Pass  15: suminf.    3.45390 (17) obj. 2028.39 iterations 116
Cbc0038I Pass  16: suminf.    3.45390 (17) obj. 2028.39 iterations 1
Cbc0038I Pass  17: suminf.    3.88854 (15) obj. 2024.49 iterations 44
Cbc0038I Pass  18: suminf.    3.10526 (14) obj. 2023.29 iterations 13
Cbc0038I Pass  19: suminf.    3.10526 (14) obj. 2023.29 iterations 2
Cbc0038I Pass  20: suminf.    3.24737 (11) obj. 2005.45 iterations 37
Cbc0038I Pass  21: suminf.    2.67895 (11) obj. 2012.15 iterations 35
Cbc0038I Pass  22: suminf.    2.93684 (11) obj. 2044.8 iterations 33
Cbc0038I Pass  23: suminf.    2.57895 (11) obj. 2050.9 iterations 19
Cbc0038I Pass  24: suminf.    3.03684 (11) obj. 2050.85 iterations 21
Cbc0038I Pass  25: suminf.    2.67895 (11) obj. 2056.95 iterations 13
Cbc0038I Pass  26: suminf.    4.55756 (18) obj. 2161.09 iterations 148
Cbc0038I Pass  27: suminf.    4.10892 (17) obj. 2152.32 iterations 103
Cbc0038I Pass  28: suminf.    4.28421 (16) obj. 2164.27 iterations 65
Cbc0038I Pass  29: suminf.    3.70526 (15) obj. 2164.77 iterations 21
Cbc0038I Pass  30: suminf.    6.21053 (17) obj. 2188.09 iterations 43
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2318 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 2550 columns, reduced to 91 rows 222 columns
Cbc0038I Mini branch and bound did not improve solution (1.60 seconds)
Cbc0038I Full problem 102 rows 2550 columns, reduced to 102 rows 2550 columns - too large
Cbc0038I After 3.64 seconds - Feasibility pump exiting - took 3.30 seconds
Cbc0031I 154 added rows had average density of 117.63636
Cbc0013I At root node, 154 cuts changed objective from 0 to 326.01563 in 54 passes
Cbc0014I Cut generator 0 (Probing) - 255 row cuts average 2.0 elements, 0 column cuts (119 active)  in 3.340 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 732 row cuts average 542.4 elements, 0 column cuts (2 active)  in 3.292 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 132 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.604 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 295 row cuts average 68.1 elements, 0 column cuts (0 active)  in 2.224 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 390 row cuts average 170.3 elements, 0 column cuts (0 active)  in 0.548 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 326.01563 (22.36 seconds)
Cbc0016I Integer solution of 376 found by strong branching after 3116 iterations and 31 nodes (28.41 seconds)
Cbc0038I Full problem 101 rows 2550 columns, reduced to 16 rows 35 columns
Cbc0012I Integer solution of 361 found by RINS after 3408 iterations and 43 nodes (29.36 seconds)
Cbc0038I Full problem 101 rows 2550 columns, reduced to 0 rows 0 columns
Cbc0038I Full problem 255 rows 2550 columns, reduced to 101 rows 1378 columns
Cbc0044I Reduced cost fixing - 101 rows, 1378 columns - restarting search
Cbc0012I Integer solution of 361 found by Previous solution after 0 iterations and 0 nodes (30.52 seconds)
Cbc0031I 141 added rows had average density of 56.893617
Cbc0013I At root node, 141 cuts changed objective from 0 to 332.58614 in 29 passes
Cbc0014I Cut generator 0 (Probing) - 502 row cuts average 2.0 elements, 5 column cuts (99 active)  in 0.552 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 220 row cuts average 269.7 elements, 0 column cuts (0 active)  in 1.764 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 223 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.272 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 189 row cuts average 30.9 elements, 0 column cuts (0 active)  in 0.648 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 178 row cuts average 57.1 elements, 0 column cuts (0 active)  in 0.264 seconds - new frequency is 1
Cbc0014I Cut generator 8 (Stored from first) - 261 row cuts average 74.8 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 361 best solution, best possible 332.58614 (36.85 seconds)
Cbc0004I Integer solution of 340 found after 2898 iterations and 31 nodes (39.88 seconds)
Cbc0004I Integer solution of 339 found after 2909 iterations and 34 nodes (39.94 seconds)
Cbc0038I Full problem 101 rows 1378 columns, reduced to 31 rows 70 columns
Cbc0012I Integer solution of 338 found by RINS after 3442 iterations and 42 nodes (40.62 seconds)
Cbc0004I Integer solution of 337 found after 4692 iterations and 81 nodes (41.97 seconds)
Cbc0038I Full problem 101 rows 1378 columns, reduced to 5 rows 12 columns
Cbc0038I Full problem 101 rows 1378 columns, reduced to 49 rows 113 columns
Cbc0012I Integer solution of 336 found by RINS after 5414 iterations and 92 nodes (43.99 seconds)
Cbc0038I Full problem 101 rows 1378 columns, reduced to 15 rows 36 columns
Cbc0010I After 100 nodes, 6 on tree, 336 best solution, best possible 332.58614 (44.66 seconds)
Cbc0001I Search completed - best objective 336, took 7121 iterations and 112 nodes (45.69 seconds)
Cbc0032I Strong branching done 530 times (10945 iterations), fathomed 2 nodes and fixed 38 variables
Cbc0035I Maximum depth 24, 9682 variables fixed on reduced cost
Cbc0038I Probing was tried 118 times and created 1663 cuts of which 367 were active after adding rounds of cuts (0.748 seconds)
Cbc0038I Gomory was tried 118 times and created 338 cuts of which 0 were active after adding rounds of cuts (2.468 seconds)
Cbc0038I Knapsack was tried 118 times and created 650 cuts of which 16 were active after adding rounds of cuts (0.952 seconds)
Cbc0038I Clique was tried 29 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
Cbc0038I MixedIntegerRounding2 was tried 118 times and created 473 cuts of which 4 were active after adding rounds of cuts (1.104 seconds)
Cbc0038I FlowCover was tried 29 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Cbc0038I TwoMirCuts was tried 118 times and created 227 cuts of which 0 were active after adding rounds of cuts (0.400 seconds)
Cbc0038I Stored from first was tried 118 times and created 585 cuts of which 6 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of 336 found by Reduced search after 10961 iterations and 162 nodes (45.75 seconds)
Cbc0001I Search completed - best objective 336, took 10961 iterations and 162 nodes (45.75 seconds)
Cbc0032I Strong branching done 452 times (7189 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 21, 9906 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 326.016
Probing was tried 148 times and created 480 cuts of which 227 were active after adding rounds of cuts (3.736 seconds)
Gomory was tried 148 times and created 755 cuts of which 2 were active after adding rounds of cuts (3.716 seconds)
Knapsack was tried 148 times and created 329 cuts of which 62 were active after adding rounds of cuts (1.760 seconds)
Clique was tried 54 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.060 seconds)
MixedIntegerRounding2 was tried 148 times and created 538 cuts of which 26 were active after adding rounds of cuts (3.880 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 148 times and created 435 cuts of which 2 were active after adding rounds of cuts (0.816 seconds)

Result - Optimal solution found

Objective value:                336.00000000
Enumerated nodes:               162
Total iterations:               10961
Time (CPU seconds):             45.86
Time (Wallclock seconds):       45.95

Total time (CPU seconds):       45.88   (Wallclock seconds):       46.00

=obj= 336.00000000 
x#1#41 1 
x#4#2 1 
x#5#3 1 
x#6#47 1 
x#8#23 1 
x#9#48 1 
x#11#12 1 
x#13#45 1 
x#14#12 1 
x#15#17 1 
x#16#24 1 
x#18#10 1 
x#19#44 1 
x#20#45 1 
x#21#45 1 
x#22#31 1 
x#25#36 1 
x#26#48 1 
x#27#10 1 
x#28#47 1 
x#29#41 1 
x#32#2 1 
x#33#44 1 
x#34#44 1 
x#35#23 1 
x#37#24 1 
x#38#47 1 
x#39#7 1 
x#40#30 1 
x#42#24 1 
x#43#7 1 
x#46#44 1 
x#49#48 1 
x#50#24 1 
x#2#2 1 
x#3#3 1 
x#7#7 1 
x#10#10 1 
x#12#12 1 
x#17#17 1 
x#23#23 1 
x#24#24 1 
x#30#30 1 
x#31#31 1 
x#36#36 1 
x#41#41 1 
x#44#44 1 
x#45#45 1 
x#47#47 1 
x#48#48 1 
y#2 1 
y#3 1 
y#7 1 
y#10 1 
y#12 1 
y#17 1 
y#23 1 
y#24 1 
y#30 1 
y#31 1 
y#36 1 
y#41 1 
y#44 1 
y#45 1 
y#47 1 
y#48 1 

@04 1393034301
@05 3600

Read MPS: 1
MIP has 2550 vars and 101 constraints
Read SOL: 1
Objective value computed by solver: 336

Integrality tolerance: 1/10000
Linear tolerance: 1/10000
Objective tolerance: 1/10000

Check SOL: Integrality 1 Constraints 1 Objective 1
Maximum violations: Integrality 0 Constraints 0 Objective 0

-----------------------------
Fri Feb 21 20:58:21 EST 2014
-----------------------------

=ready=
@01 instances/decomplib/p20501.mps ===========
-----------------------------
Fri Feb 21 20:58:21 EST 2014
-----------------------------
@03 1393034301
Welcome to the CBC MILP Solver 
Version: Trunk (unstable) 
Build Date: Feb  9 2014 
Revision Number: 2007 

command line - /home/jiw508/miplib2010-1.0.3/bin/cbc -import instances/decomplib/p20501.mps -sec 3600 -ratio 0.0 -solve -solution /home/jiw508/miplib2010-1.0.3/results/solutions/decomp.cbc.p20501.mps.sol (default strategy 1)
At line 1 NAME check/instances/cpmp/p2050-1.t
At line 2 ROWS
At line 105 COLUMNS
At line 5208 RHS
At line 5260 BOUNDS
At line 7811 ENDATA
Problem check/instances/cpmp/p2050-1.t has 101 rows, 2550 columns and 5100 elements
Coin0008I check/instances/cpmp/p2050-1.t read with 0 errors
seconds was changed from 1e+100 to 3600
ratioGap was changed from 0 to 0
Continuous objective value is 0 - 0.02 seconds
Cgl0004I processed model has 101 rows, 2550 columns (2550 integer) and 5100 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 45 integers unsatisfied sum - 12.3333
Cbc0038I Pass   1: suminf.   11.73333 (44) obj. 0 iterations 8
Cbc0038I Pass   2: suminf.   11.73333 (44) obj. 0 iterations 0
Cbc0038I Pass   3: suminf.   11.33333 (43) obj. 0 iterations 5
Cbc0038I Pass   4: suminf.   11.33333 (43) obj. 0 iterations 0
Cbc0038I Pass   5: suminf.   11.00000 (43) obj. 0 iterations 2
Cbc0038I Pass   6: suminf.   11.00000 (43) obj. 0 iterations 2
Cbc0038I Pass   7: suminf.   11.26667 (43) obj. 0 iterations 2
Cbc0038I Pass   8: suminf.   11.26667 (43) obj. 0 iterations 0
Cbc0038I Pass   9: suminf.   11.00000 (43) obj. 0 iterations 3
Cbc0038I Pass  10: suminf.    6.55597 (25) obj. 2577.93 iterations 139
Cbc0038I Pass  11: suminf.    4.80759 (20) obj. 2636.56 iterations 116
Cbc0038I Pass  12: suminf.    4.68995 (19) obj. 2630.62 iterations 6
Cbc0038I Pass  13: suminf.    2.12500 (11) obj. 2578.31 iterations 35
Cbc0038I Pass  14: suminf.    1.85833 (8) obj. 2582.81 iterations 5
Cbc0038I Pass  15: suminf.    1.85833 (8) obj. 2582.81 iterations 6
Cbc0038I Pass  16: suminf.    2.26667 (7) obj. 2580 iterations 25
Cbc0038I Pass  17: suminf.    2.26667 (7) obj. 2580 iterations 1
Cbc0038I Pass  18: suminf.    2.26667 (7) obj. 2580 iterations 4
Cbc0038I Pass  19: suminf.    2.26667 (7) obj. 2580 iterations 3
Cbc0038I Pass  20: suminf.    5.15833 (23) obj. 2502.8 iterations 138
Cbc0038I Pass  21: suminf.    3.35953 (17) obj. 2499.25 iterations 130
Cbc0038I Pass  22: suminf.    5.34214 (18) obj. 2558.92 iterations 68
Cbc0038I Pass  23: suminf.    3.92109 (16) obj. 2586.42 iterations 25
Cbc0038I Pass  24: suminf.    3.78266 (14) obj. 2550.75 iterations 46
Cbc0038I Pass  25: suminf.    3.22828 (14) obj. 2543.8 iterations 18
Cbc0038I Pass  26: suminf.    3.22828 (14) obj. 2543.8 iterations 2
Cbc0038I Pass  27: suminf.    4.13560 (14) obj. 2551.34 iterations 30
Cbc0038I Pass  28: suminf.    3.58122 (14) obj. 2544.39 iterations 14
Cbc0038I Pass  29: suminf.    3.58122 (14) obj. 2544.39 iterations 2
Cbc0038I Pass  30: suminf.    3.78266 (14) obj. 2550.75 iterations 30
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2356 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 2550 columns, reduced to 79 rows 172 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to 1584 (1.46 seconds)
Cbc0038I Round again with cutoff of 1424.7
Cbc0038I Pass  30: suminf.   11.73333 (44) obj. 0 iterations 0
Cbc0038I Pass  31: suminf.   11.73333 (44) obj. 0 iterations 0
Cbc0038I Pass  32: suminf.   11.33333 (43) obj. 0 iterations 7
Cbc0038I Pass  33: suminf.   11.33333 (43) obj. 0 iterations 0
Cbc0038I Pass  34: suminf.   11.86667 (44) obj. 0 iterations 9
Cbc0038I Pass  35: suminf.   11.86667 (44) obj. 0 iterations 0
Cbc0038I Pass  36: suminf.   11.93333 (44) obj. 0 iterations 3
Cbc0038I Pass  37: suminf.   11.86667 (44) obj. 0 iterations 2
Cbc0038I Pass  38: suminf.    5.91314 (29) obj. 1424.7 iterations 147
Cbc0038I Pass  39: suminf.    3.67647 (25) obj. 1424.7 iterations 95
Cbc0038I Pass  40: suminf.    3.34314 (25) obj. 1424.7 iterations 36
Cbc0038I Pass  41: suminf.    4.67639 (25) obj. 1424.7 iterations 79
Cbc0038I Pass  42: suminf.    4.67639 (25) obj. 1424.7 iterations 13
Cbc0038I Pass  43: suminf.    4.11779 (20) obj. 1424.7 iterations 147
Cbc0038I Pass  44: suminf.    3.51779 (18) obj. 1423.37 iterations 22
Cbc0038I Pass  45: suminf.    4.18346 (21) obj. 1424.7 iterations 87
Cbc0038I Pass  46: suminf.    4.05013 (20) obj. 1424.7 iterations 11
Cbc0038I Pass  47: suminf.    5.60000 (23) obj. 1424.7 iterations 81
Cbc0038I Pass  48: suminf.    5.33684 (23) obj. 1424.7 iterations 35
Cbc0038I Pass  49: suminf.    5.33684 (23) obj. 1424.7 iterations 2
Cbc0038I Pass  50: suminf.    4.21303 (20) obj. 1341.5 iterations 84
Cbc0038I Pass  51: suminf.    3.94637 (19) obj. 1355.33 iterations 18
Cbc0038I Pass  52: suminf.    3.54637 (19) obj. 1355.33 iterations 9
Cbc0038I Pass  53: suminf.    4.97594 (20) obj. 1400.28 iterations 53
Cbc0038I Pass  54: suminf.    4.97594 (20) obj. 1402.64 iterations 6
Cbc0038I Pass  55: suminf.    4.69717 (19) obj. 1424.7 iterations 79
Cbc0038I Pass  56: suminf.    4.19825 (19) obj. 1424.7 iterations 49
Cbc0038I Pass  57: suminf.    4.63684 (20) obj. 1418.85 iterations 85
Cbc0038I Pass  58: suminf.    4.63684 (19) obj. 1408.05 iterations 20
Cbc0038I Pass  59: suminf.    5.23158 (20) obj. 1424.7 iterations 69
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2389 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 2550 columns, reduced to 56 rows 115 columns
Cbc0038I Mini branch and bound did not improve solution (2.02 seconds)
Cbc0038I After 2.02 seconds - Feasibility pump exiting with objective of 1584 - took 1.67 seconds
Cbc0012I Integer solution of 1584 found by feasibility pump after 0 iterations and 0 nodes (2.03 seconds)
Cbc0038I Full problem 101 rows 2550 columns, reduced to 36 rows 68 columns
Cbc0031I 118 added rows had average density of 140.94915
Cbc0013I At root node, 118 cuts changed objective from 0 to 263.25018 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 236 row cuts average 2.0 elements, 0 column cuts (99 active)  in 6.880 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1398 row cuts average 706.6 elements, 0 column cuts (0 active)  in 3.464 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 120 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.984 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 378 row cuts average 62.9 elements, 0 column cuts (0 active)  in 2.420 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 432 row cuts average 153.4 elements, 0 column cuts (0 active)  in 0.500 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1584 best solution, best possible 263.25018 (28.57 seconds)
Cbc0016I Integer solution of 272 found by strong branching after 4414 iterations and 16 nodes (32.52 seconds)
Cbc0004I Integer solution of 269 found after 4449 iterations and 19 nodes (32.77 seconds)
Cbc0038I Full problem 101 rows 2550 columns, reduced to 5 rows 10 columns
Cbc0016I Integer solution of 268 found by strong branching after 5479 iterations and 40 nodes (34.59 seconds)
Cbc0038I Full problem 101 rows 2550 columns, reduced to 37 rows 79 columns
Cbc0038I Full problem 101 rows 2550 columns, reduced to 15 rows 32 columns
Cbc0012I Integer solution of 266 found by combine solutions after 5490 iterations and 41 nodes (34.93 seconds)
Cbc0001I Search completed - best objective 266, took 6053 iterations and 46 nodes (35.50 seconds)
Cbc0032I Strong branching done 322 times (4708 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 13, 18407 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 263.25
Probing was tried 198 times and created 796 cuts of which 218 were active after adding rounds of cuts (7.216 seconds)
Gomory was tried 198 times and created 1464 cuts of which 12 were active after adding rounds of cuts (4.048 seconds)
Knapsack was tried 198 times and created 378 cuts of which 40 were active after adding rounds of cuts (2.096 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.052 seconds)
MixedIntegerRounding2 was tried 198 times and created 617 cuts of which 28 were active after adding rounds of cuts (3.276 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 198 times and created 477 cuts of which 4 were active after adding rounds of cuts (0.812 seconds)

Result - Optimal solution found

Objective value:                266.00000000
Enumerated nodes:               46
Total iterations:               6053
Time (CPU seconds):             35.68
Time (Wallclock seconds):       35.84

Total time (CPU seconds):       35.71   (Wallclock seconds):       35.89

=obj= 266.00000000 
x#1#50 1 
x#2#6 1 
x#3#11 1 
x#5#22 1 
x#8#20 1 
x#9#20 1 
x#13#11 1 
x#14#41 1 
x#16#33 1 
x#17#10 1 
x#18#21 1 
x#19#31 1 
x#23#11 1 
x#24#28 1 
x#25#6 1 
x#27#4 1 
x#29#33 1 
x#32#41 1 
x#34#26 1 
x#36#50 1 
x#37#4 1 
x#38#30 1 
x#39#15 1 
x#42#46 1 
x#43#12 1 
x#44#21 1 
x#45#7 1 
x#47#31 1 
x#48#22 1 
x#49#10 1 
x#4#4 1 
x#6#6 1 
x#7#7 1 
x#10#10 1 
x#11#11 1 
x#12#12 1 
x#15#15 1 
x#20#20 1 
x#21#21 1 
x#22#22 1 
x#26#26 1 
x#28#28 1 
x#30#30 1 
x#31#31 1 
x#33#33 1 
x#35#35 1 
x#40#40 1 
x#41#41 1 
x#46#46 1 
x#50#50 1 
y#4 1 
y#6 1 
y#7 1 
y#10 1 
y#11 1 
y#12 1 
y#15 1 
y#20 1 
y#21 1 
y#22 1 
y#26 1 
y#28 1 
y#30 1 
y#31 1 
y#33 1 
y#35 1 
y#40 1 
y#41 1 
y#46 1 
y#50 1 

@04 1393034337
@05 3600

Read MPS: 1
MIP has 2550 vars and 101 constraints
Read SOL: 1
Objective value computed by solver: 266

Integrality tolerance: 1/10000
Linear tolerance: 1/10000
Objective tolerance: 1/10000

Check SOL: Integrality 1 Constraints 1 Objective 1
Maximum violations: Integrality 0 Constraints 0 Objective 0

-----------------------------
Fri Feb 21 20:58:57 EST 2014
-----------------------------

=ready=
@01 instances/decomplib/scene_select.mps ===========
-----------------------------
Fri Feb 21 20:58:57 EST 2014
-----------------------------
@03 1393034337
Welcome to the CBC MILP Solver 
Version: Trunk (unstable) 
Build Date: Feb  9 2014 
Revision Number: 2007 

command line - /home/jiw508/miplib2010-1.0.3/bin/cbc -import instances/decomplib/scene_select.mps -sec 3600 -ratio 0.0 -solve -solution /home/jiw508/miplib2010-1.0.3/results/solutions/decomp.cbc.scene_select.mps.sol (default strategy 1)
At line 1 NAME scene_select
At line 2 ROWS
At line 275 COLUMNS
At line 650 RHS
At line 674 RANGES
At line 679 BOUNDS
At line 800 ENDATA
Problem scene_select has 271 rows, 120 columns and 648 elements
Coin0008I scene_select read with 0 errors
seconds was changed from 1e+100 to 3600
ratioGap was changed from 0 to 0
Continuous objective value is 137739 - 0.03 seconds
Cgl0004I processed model has 271 rows, 120 columns (120 integer) and 648 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 120 integers unsatisfied sum - 30
Cbc0038I Pass   1: suminf.   30.00000 (120) obj. 137739 iterations 20
Cbc0038I Pass   2: suminf.   15.90476 (59) obj. 359390 iterations 149
Cbc0038I Pass   3: suminf.    7.66667 (46) obj. 408124 iterations 47
Cbc0038I Pass   4: suminf.    7.66667 (46) obj. 408124 iterations 6
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 500839 iterations 49
Cbc0038I Solution found of 500839
Cbc0038I Rounding solution of 469131 is better than previous of 500839

Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 271 rows 120 columns, reduced to 271 rows 120 columns - 16 fixed gives 88, 77 - ok now
Cbc0038I Full problem 271 rows 120 columns, reduced to 88 rows 77 columns
Cbc0038I Mini branch and bound improved solution from 469131 to 384800 (0.26 seconds)
Cbc0038I Round again with cutoff of 360093
Cbc0038I Pass   6: suminf.   30.00000 (120) obj. 137739 iterations 0
Cbc0038I Pass   7: suminf.   20.05495 (76) obj. 280968 iterations 95
Cbc0038I Pass   8: suminf.   20.05495 (76) obj. 280968 iterations 13
Cbc0038I Pass   9: suminf.   16.35065 (59) obj. 351996 iterations 38
Cbc0038I Pass  10: suminf.   12.19166 (36) obj. 360093 iterations 45
Cbc0038I Pass  11: suminf.   11.85957 (41) obj. 360093 iterations 64
Cbc0038I Pass  12: suminf.   10.43471 (53) obj. 360093 iterations 13
Cbc0038I Pass  13: suminf.    9.24878 (36) obj. 360093 iterations 24
Cbc0038I Pass  14: suminf.   10.58528 (35) obj. 360093 iterations 41
Cbc0038I Pass  15: suminf.   10.34938 (37) obj. 360093 iterations 17
Cbc0038I Pass  16: suminf.    5.68208 (33) obj. 360093 iterations 44
Cbc0038I Pass  17: suminf.    5.22687 (32) obj. 360093 iterations 19
Cbc0038I Pass  18: suminf.    6.51788 (52) obj. 360093 iterations 51
Cbc0038I Pass  19: suminf.    4.69868 (48) obj. 360093 iterations 35
Cbc0038I Pass  20: suminf.    4.59346 (41) obj. 360093 iterations 7
Cbc0038I Pass  21: suminf.    2.71357 (12) obj. 360093 iterations 71
Cbc0038I Pass  22: suminf.    0.00000 (0) obj. 357299 iterations 10
Cbc0038I Solution found of 357299
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 271 rows 120 columns, reduced to 271 rows 120 columns - 20 fixed gives 138, 94 - still too large
Cbc0038I Full problem 271 rows 120 columns, reduced to 138 rows 94 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.42 seconds)
Cbc0038I Round again with cutoff of 313386
Cbc0038I Pass  23: suminf.   30.00000 (120) obj. 137739 iterations 0
Cbc0038I Pass  24: suminf.   22.00000 (85) obj. 224516 iterations 80
Cbc0038I Pass  25: suminf.   22.00000 (85) obj. 224516 iterations 11
Cbc0038I Pass  26: suminf.   19.73469 (70) obj. 281849 iterations 44
Cbc0038I Pass  27: suminf.   19.45238 (67) obj. 282698 iterations 9
Cbc0038I Pass  28: suminf.   13.43030 (54) obj. 313386 iterations 76
Cbc0038I Pass  29: suminf.   11.07118 (61) obj. 313386 iterations 17
Cbc0038I Pass  30: suminf.    9.10312 (54) obj. 313386 iterations 24
Cbc0038I Pass  31: suminf.    8.76890 (53) obj. 313386 iterations 26
Cbc0038I Pass  32: suminf.   16.98960 (45) obj. 313386 iterations 61
Cbc0038I Pass  33: suminf.    8.82521 (53) obj. 313386 iterations 51
Cbc0038I Pass  34: suminf.   17.81636 (57) obj. 313386 iterations 82
Cbc0038I Pass  35: suminf.   15.76536 (52) obj. 313386 iterations 46
Cbc0038I Pass  36: suminf.   15.53121 (55) obj. 313386 iterations 12
Cbc0038I Pass  37: suminf.   15.01513 (54) obj. 313386 iterations 18
Cbc0038I Pass  38: suminf.   14.41322 (56) obj. 313386 iterations 29
Cbc0038I Pass  39: suminf.   14.66034 (60) obj. 313386 iterations 41
Cbc0038I Pass  40: suminf.   14.39057 (55) obj. 313386 iterations 17
Cbc0038I Pass  41: suminf.   14.20471 (55) obj. 313386 iterations 30
Cbc0038I Pass  42: suminf.   14.13762 (55) obj. 313386 iterations 7
Cbc0038I Pass  43: suminf.   13.98208 (63) obj. 313386 iterations 16
Cbc0038I Pass  44: suminf.   11.82483 (66) obj. 313386 iterations 41
Cbc0038I Pass  45: suminf.   10.01580 (62) obj. 313386 iterations 16
Cbc0038I Pass  46: suminf.   20.05769 (67) obj. 261274 iterations 54
Cbc0038I Pass  47: suminf.   13.91859 (62) obj. 313386 iterations 49
Cbc0038I Pass  48: suminf.   12.52310 (65) obj. 313386 iterations 33
Cbc0038I Pass  49: suminf.   17.13788 (62) obj. 313386 iterations 56
Cbc0038I Pass  50: suminf.   15.64091 (54) obj. 307576 iterations 16
Cbc0038I Pass  51: suminf.   14.85778 (54) obj. 313386 iterations 8
Cbc0038I Pass  52: suminf.   14.19013 (55) obj. 313386 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 271 rows 120 columns, reduced to 271 rows 120 columns - 20 fixed gives 138, 94 - still too large
Cbc0038I Full problem 271 rows 120 columns, reduced to 138 rows 94 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.64 seconds)
Cbc0038I After 0.64 seconds - Feasibility pump exiting with objective of 357299 - took 0.59 seconds
Cbc0012I Integer solution of 357299 found by feasibility pump after 0 iterations and 0 nodes (0.64 seconds)
Cbc0038I Full problem 271 rows 120 columns, reduced to 0 rows 0 columns
Cbc0031I 30 added rows had average density of 112.6
Cbc0013I At root node, 30 cuts changed objective from 137739 to 183031.11 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (9 active)  in 0.448 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1756 row cuts average 119.0 elements, 0 column cuts (14 active)  in 2.468 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.652 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 145 row cuts average 70.9 elements, 0 column cuts (0 active)  in 0.408 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 357299 best solution, best possible 183031.11 (17.55 seconds)
Cbc0038I Full problem 271 rows 120 columns, reduced to 171 rows 92 columns - 17 fixed gives 82, 71 - ok now
Cbc0038I Full problem 271 rows 120 columns, reduced to 80 rows 70 columns
Cbc0012I Integer solution of 345791 found by RINS after 10157 iterations and 42 nodes (21.32 seconds)
Cbc0038I Full problem 271 rows 120 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of 336410 found by combine solutions after 10157 iterations and 42 nodes (21.35 seconds)
Cbc0038I Full problem 271 rows 120 columns, reduced to 101 rows 62 columns
Cbc0016I Integer solution of 334144 found by strong branching after 22610 iterations and 361 nodes (31.83 seconds)
Cbc0038I Full problem 271 rows 120 columns, reduced to 98 rows 51 columns
Cbc0038I Full problem 271 rows 120 columns, reduced to 119 rows 76 columns
Cbc0038I Full problem 271 rows 120 columns, reduced to 133 rows 70 columns - 8 fixed gives 98, 60 - ok now
Cbc0038I Full problem 271 rows 120 columns, reduced to 98 rows 60 columns
Cbc0010I After 1000 nodes, 8 on tree, 334144 best solution, best possible 183031.11 (66.43 seconds)
Cbc0038I Full problem 271 rows 120 columns, reduced to 144 rows 85 columns - 10 fixed gives 101, 73 - ok now
Cbc0038I Full problem 271 rows 120 columns, reduced to 87 rows 58 columns
Cbc0038I Full problem 271 rows 120 columns, reduced to 119 rows 73 columns
Cbc0001I Search completed - best objective 334144, took 194174 iterations and 10685 nodes (81.09 seconds)
Cbc0032I Strong branching done 11716 times (253916 iterations), fathomed 235 nodes and fixed 518 variables
Cbc0041I Maximum depth 22, 1120 variables fixed on reduced cost (9313 nodes in complete fathoming taking 141058 iterations)
Cuts at root node changed objective from 137739 to 183031
Probing was tried 100 times and created 0 cuts of which 9 were active after adding rounds of cuts (0.448 seconds)
Gomory was tried 1496 times and created 2835 cuts of which 511 were active after adding rounds of cuts (6.656 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.092 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.096 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.652 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 100 times and created 145 cuts of which 0 were active after adding rounds of cuts (0.408 seconds)

Result - Optimal solution found

Objective value:                334144.00000000
Enumerated nodes:               10685
Total iterations:               194174
Time (CPU seconds):             81.14
Time (Wallclock seconds):       81.48

Total time (CPU seconds):       81.14   (Wallclock seconds):       81.50

=obj= 334144.00000000 
AssignActor[1,1] 1 
AssignActor[2,1] 1 
AssignActor[3,1] 1 
AssignActor[5,1] 1 
AssignActor[8,1] 1 
AssignActor[9,1] 1 
AssignActor[11,1] 1 
AssignActor[1,2] 1 
AssignActor[2,2] 1 
AssignActor[4,2] 1 
AssignActor[6,2] 1 
AssignActor[9,2] 1 
AssignActor[3,3] 1 
AssignActor[6,3] 1 
AssignActor[7,3] 1 
AssignActor[8,3] 1 
AssignActor[10,3] 1 
AssignActor[11,3] 1 
AssignActor[1,4] 1 
AssignActor[4,4] 1 
AssignActor[5,4] 1 
AssignActor[6,4] 1 
AssignActor[7,4] 1 
AssignActor[8,4] 1 
AssignActor[9,4] 1 
AssignActor[10,4] 1 
AssignActor[11,4] 1 
AssignScene[10,1] 1 
AssignScene[17,1] 1 
AssignScene[9,1] 1 
AssignScene[16,1] 1 
AssignScene[3,1] 1 
AssignScene[7,2] 1 
AssignScene[11,2] 1 
AssignScene[13,2] 1 
AssignScene[4,2] 1 
AssignScene[19,2] 1 
AssignScene[6,3] 1 
AssignScene[14,3] 1 
AssignScene[18,3] 1 
AssignScene[1,3] 1 
AssignScene[2,4] 1 
AssignScene[5,4] 1 
AssignScene[15,4] 1 
AssignScene[8,4] 1 
AssignScene[12,4] 1 

@04 1393034419
@05 3600

Read MPS: 1
MIP has 120 vars and 271 constraints
Read SOL: 1
Objective value computed by solver: 334144

Integrality tolerance: 1/10000
Linear tolerance: 1/10000
Objective tolerance: 1/10000

Check SOL: Integrality 1 Constraints 1 Objective 1
Maximum violations: Integrality 0 Constraints 0 Objective 0

-----------------------------
Fri Feb 21 21:00:19 EST 2014
-----------------------------

=ready=
@01 instances/decomplib/unitcommitment.mps ===========
-----------------------------
Fri Feb 21 21:00:19 EST 2014
-----------------------------
@03 1393034419
Welcome to the CBC MILP Solver 
Version: Trunk (unstable) 
Build Date: Feb  9 2014 
Revision Number: 2007 

command line - /home/jiw508/miplib2010-1.0.3/bin/cbc -import instances/decomplib/unitcommitment.mps -sec 3600 -ratio 0.0 -solve -solution /home/jiw508/miplib2010-1.0.3/results/solutions/decomp.cbc.unitcommitment.mps.sol (default strategy 1)
At line 1 NAME BLANK
At line 2 ROWS
At line 37324 COLUMNS
At line 88937 RHS
At line 99738 RANGES
At line 99751 BOUNDS
At line 113109 ENDATA
Problem BLANK has 37320 rows, 13357 columns and 96912 elements
Coin0008I BLANK read with 0 errors
seconds was changed from 1e+100 to 3600
ratioGap was changed from 0 to 0
Continuous objective value is 23236.6 - 4.99 seconds
Cgl0003I 22 fixed, 0 tightened bounds, 2611 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1007 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 391 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 77 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 19652 rows, 11182 columns (5183 integer) and 66452 elements
Cbc0038I Initial state - 227 integers unsatisfied sum - 35.572
Cbc0038I Pass   1: (17.14 seconds) suminf.   12.67049 (125) obj. 23717.1 iterations 1636
Cbc0038I Pass   2: (17.63 seconds) suminf.   13.85884 (123) obj. 24054.7 iterations 228
Cbc0038I Pass   3: (17.96 seconds) suminf.   13.27109 (120) obj. 23960.8 iterations 83
Cbc0038I Pass   4: (18.29 seconds) suminf.   12.74689 (119) obj. 24033.9 iterations 119
Cbc0038I Pass   5: (18.59 seconds) suminf.   12.33565 (118) obj. 24009.5 iterations 69
Cbc0038I Pass   6: (18.93 seconds) suminf.   13.60986 (117) obj. 24118.4 iterations 126
Cbc0038I Pass   7: (19.26 seconds) suminf.   12.95567 (118) obj. 24010.9 iterations 82
Cbc0038I Pass   8: (19.65 seconds) suminf.   11.69137 (108) obj. 24505.3 iterations 251
Cbc0038I Pass   9: (20.01 seconds) suminf.   11.29487 (107) obj. 24401.2 iterations 72
Cbc0038I Pass  10: (20.47 seconds) suminf.   11.15484 (104) obj. 24501.9 iterations 218
Cbc0038I Pass  11: (20.79 seconds) suminf.   10.42323 (105) obj. 24402.6 iterations 88
Cbc0038I Pass  12: (21.12 seconds) suminf.   10.81816 (104) obj. 24503.2 iterations 123
Cbc0038I Pass  13: (21.43 seconds) suminf.   10.08554 (105) obj. 24404 iterations 96
Cbc0038I Pass  14: (21.98 seconds) suminf.   11.18159 (95) obj. 24831.9 iterations 329
Cbc0038I Pass  15: (22.35 seconds) suminf.    9.13194 (100) obj. 24929.4 iterations 188
Cbc0038I Pass  16: (22.77 seconds) suminf.    7.69693 (95) obj. 24852.7 iterations 168
Cbc0038I Pass  17: (23.07 seconds) suminf.    7.65901 (91) obj. 24852.3 iterations 54
Cbc0038I Pass  18: (23.51 seconds) suminf.   11.53306 (89) obj. 24897.4 iterations 366
Cbc0038I Pass  19: (23.82 seconds) suminf.    9.59185 (101) obj. 24864.1 iterations 109
Cbc0038I Pass  20: (24.23 seconds) suminf.    8.38110 (91) obj. 25030.7 iterations 145
Cbc0038I Pass  21: (24.53 seconds) suminf.    8.04006 (90) obj. 24866.4 iterations 56
Cbc0038I Pass  22: (24.92 seconds) suminf.    9.58446 (87) obj. 24952.9 iterations 302
Cbc0038I Pass  23: (25.21 seconds) suminf.    8.92619 (94) obj. 24910.8 iterations 64
Cbc0038I Pass  24: (25.62 seconds) suminf.    6.80778 (83) obj. 24936.8 iterations 156
Cbc0038I Pass  25: (25.91 seconds) suminf.    6.66473 (81) obj. 24914.2 iterations 57
Cbc0038I Pass  26: (26.33 seconds) suminf.    9.86912 (79) obj. 25585.6 iterations 317
Cbc0038I Pass  27: (26.63 seconds) suminf.    8.22753 (91) obj. 25562.9 iterations 79
Cbc0038I Pass  28: (27.09 seconds) suminf.    9.31359 (85) obj. 26136.8 iterations 330
Cbc0038I Pass  29: (27.40 seconds) suminf.    8.15278 (80) obj. 26134 iterations 58
Cbc0038I Pass  30: (27.72 seconds) suminf.    5.95715 (74) obj. 27012.3 iterations 92
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4845 integers at bound fixed and 242 continuous
Cbc0038I Full problem 19652 rows 11182 columns, reduced to 4088 rows 3610 columns
Cbc0038I Mini branch and bound did not improve solution (29.99 seconds)
Cbc0038I Full problem 19653 rows 11182 columns, reduced to 19653 rows 11182 columns - too large
Cbc0038I After 35.96 seconds - Feasibility pump exiting - took 20.31 seconds
Cbc0031I 290 added rows had average density of 382.13793
Cbc0013I At root node, 290 cuts changed objective from 23236.611 to 23428.259 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 60 row cuts average 2.0 elements, 0 column cuts (239 active)  in 3.860 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1873 row cuts average 385.0 elements, 0 column cuts (0 active)  in 18.041 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.520 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 119 row cuts average 4.5 elements, 0 column cuts (0 active)  in 1.528 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 23428.259 (154.93 seconds)
Cbc0010I After 100 nodes, 15 on tree, 1e+50 best solution, best possible 23428.259 (624.15 seconds)
Cbc0010I After 200 nodes, 21 on tree, 1e+50 best solution, best possible 23428.259 (880.76 seconds)
Cbc0010I After 300 nodes, 65 on tree, 1e+50 best solution, best possible 23428.259 (1113.56 seconds)
Cbc0010I After 400 nodes, 56 on tree, 1e+50 best solution, best possible 23428.259 (1205.98 seconds)
Cbc0010I After 500 nodes, 116 on tree, 1e+50 best solution, best possible 23428.259 (1285.08 seconds)
Cbc0010I After 600 nodes, 142 on tree, 1e+50 best solution, best possible 23428.259 (1355.64 seconds)
Cbc0010I After 700 nodes, 152 on tree, 1e+50 best solution, best possible 23428.259 (1414.51 seconds)
Cbc0010I After 800 nodes, 183 on tree, 1e+50 best solution, best possible 23428.259 (1487.08 seconds)
Cbc0010I After 900 nodes, 267 on tree, 1e+50 best solution, best possible 23428.259 (1558.15 seconds)
Cbc0010I After 1000 nodes, 219 on tree, 1e+50 best solution, best possible 23428.259 (1632.04 seconds)
Cbc0010I After 1100 nodes, 317 on tree, 1e+50 best solution, best possible 23428.259 (1989.30 seconds)
Cbc0010I After 1200 nodes, 417 on tree, 1e+50 best solution, best possible 23428.259 (2089.78 seconds)
Cbc0010I After 1300 nodes, 432 on tree, 1e+50 best solution, best possible 23428.259 (2334.57 seconds)
Cbc0010I After 1400 nodes, 332 on tree, 1e+50 best solution, best possible 23428.259 (2587.41 seconds)
Cbc0010I After 1500 nodes, 421 on tree, 1e+50 best solution, best possible 23428.259 (2796.37 seconds)
Cbc0010I After 1600 nodes, 521 on tree, 1e+50 best solution, best possible 23428.259 (2970.79 seconds)
Cbc0010I After 1700 nodes, 621 on tree, 1e+50 best solution, best possible 23428.259 (3044.50 seconds)
Cbc0010I After 1800 nodes, 721 on tree, 1e+50 best solution, best possible 23428.259 (3127.46 seconds)
Cbc0010I After 1900 nodes, 821 on tree, 1e+50 best solution, best possible 23428.259 (3321.81 seconds)
Cbc0010I After 2000 nodes, 921 on tree, 1e+50 best solution, best possible 23428.259 (3458.76 seconds)
Cbc0010I After 2100 nodes, 1019 on tree, 1e+50 best solution, best possible 23428.259 (3550.32 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 23428.259), took 273054 iterations and 2182 nodes (3593.39 seconds)
Cbc0032I Strong branching done 10784 times (283561 iterations), fathomed 230 nodes and fixed 131 variables
Cbc0035I Maximum depth 886, 0 variables fixed on reduced cost
Cuts at root node changed objective from 23236.6 to 23428.3
Probing was tried 20 times and created 60 cuts of which 239 were active after adding rounds of cuts (3.860 seconds)
Gomory was tried 474 times and created 2028 cuts of which 65 were active after adding rounds of cuts (189.672 seconds)
Knapsack was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.520 seconds)
Clique was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
MixedIntegerRounding2 was tried 20 times and created 119 cuts of which 0 were active after adding rounds of cuts (1.528 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    23428.259
Enumerated nodes:               2182
Total iterations:               273054
Time (CPU seconds):             3596.25
Time (Wallclock seconds):       3646.15

Total time (CPU seconds):       3596.62   (Wallclock seconds):       3646.61


@04 1393038066
@05 3600

Read MPS: 1
MIP has 13357 vars and 37320 constraints
Read SOL: 0

-----------------------------
Fri Feb 21 22:01:07 EST 2014
-----------------------------

=ready=
@01 instances/decomplib/vrp_p_n22_k8_3index.mps ===========
-----------------------------
Fri Feb 21 22:01:07 EST 2014
-----------------------------
@03 1393038067
Welcome to the CBC MILP Solver 
Version: Trunk (unstable) 
Build Date: Feb  9 2014 
Revision Number: 2007 

command line - /home/jiw508/miplib2010-1.0.3/bin/cbc -import instances/decomplib/vrp_p_n22_k8_3index.mps -sec 3600 -ratio 0.0 -solve -solution /home/jiw508/miplib2010-1.0.3/results/solutions/decomp.cbc.vrp_p_n22_k8_3index.mps.sol (default strategy 1)
At line 1 NAME vrp_P_n22_k8_3index
At line 2 ROWS
At line 4241 COLUMNS
At line 19036 RHS
At line 19058 BOUNDS
At line 26627 ENDATA
Problem vrp_P_n22_k8_3index has 4237 rows, 7568 columns and 22528 elements
Coin0008I vrp_P_n22_k8_3index read with 0 errors
seconds was changed from 1e+100 to 3600
ratioGap was changed from 0 to 0
Continuous objective value is 487.433 - 2.92 seconds
Cgl0004I processed model has 4237 rows, 7560 columns (3864 integer) and 22512 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 274 integers unsatisfied sum - 44.5214
Cbc0038I Pass   1: (6.37 seconds) suminf.   24.34440 (112) obj. 835.543 iterations 3361
Cbc0038I Pass   2: (7.33 seconds) suminf.   11.36306 (58) obj. 836.226 iterations 1249
Cbc0038I Pass   3: (7.66 seconds) suminf.    9.55927 (49) obj. 845.657 iterations 465
Cbc0038I Pass   4: (7.88 seconds) suminf.    8.48625 (56) obj. 839.139 iterations 222
Cbc0038I Pass   5: (8.59 seconds) suminf.   11.48368 (77) obj. 880.905 iterations 1036
Cbc0038I Pass   6: (9.13 seconds) suminf.    7.01714 (65) obj. 877.042 iterations 786
Cbc0038I Pass   7: (9.26 seconds) suminf.    6.93143 (68) obj. 878.906 iterations 129
Cbc0038I Pass   8: (9.82 seconds) suminf.    8.86638 (52) obj. 897.117 iterations 758
Cbc0038I Pass   9: (10.20 seconds) suminf.    5.13143 (43) obj. 878.925 iterations 548
Cbc0038I Pass  10: (10.51 seconds) suminf.    5.70921 (37) obj. 903.601 iterations 445
Cbc0038I Pass  11: (10.75 seconds) suminf.    3.53143 (39) obj. 896.011 iterations 302
Cbc0038I Pass  12: (11.22 seconds) suminf.    6.63813 (60) obj. 872.742 iterations 696
Cbc0038I Pass  13: (11.54 seconds) suminf.    5.83143 (49) obj. 871.693 iterations 390
Cbc0038I Pass  14: (11.70 seconds) suminf.    7.99810 (46) obj. 868.214 iterations 136
Cbc0038I Pass  15: (11.96 seconds) suminf.    5.05963 (37) obj. 866.931 iterations 304
Cbc0038I Pass  16: (12.10 seconds) suminf.    5.02095 (39) obj. 869.823 iterations 154
Cbc0038I Pass  17: (12.40 seconds) suminf.    4.58079 (33) obj. 865.645 iterations 439
Cbc0038I Pass  18: (12.65 seconds) suminf.    1.93143 (22) obj. 864.668 iterations 278
Cbc0038I Pass  19: (12.92 seconds) suminf.    5.99390 (33) obj. 864.153 iterations 419
Cbc0038I Pass  20: (13.15 seconds) suminf.    1.93143 (22) obj. 864.668 iterations 318
Cbc0038I Pass  21: (13.23 seconds) suminf.    1.93143 (22) obj. 864.668 iterations 41
Cbc0038I Pass  22: (14.05 seconds) suminf.    5.91869 (96) obj. 938.592 iterations 1261
Cbc0038I Pass  23: (14.49 seconds) suminf.    3.60762 (42) obj. 900.086 iterations 549
Cbc0038I Pass  24: (14.78 seconds) suminf.    7.29143 (36) obj. 876.245 iterations 366
Cbc0038I Pass  25: (14.95 seconds) suminf.    5.97381 (34) obj. 897.321 iterations 181
Cbc0038I Pass  26: (15.14 seconds) suminf.    3.29582 (22) obj. 914.194 iterations 179
Cbc0038I Pass  27: (15.31 seconds) suminf.    3.15810 (22) obj. 910.521 iterations 180
Cbc0038I Pass  28: (15.62 seconds) suminf.    6.87238 (25) obj. 882.087 iterations 446
Cbc0038I Pass  29: (15.95 seconds) suminf.    3.69151 (25) obj. 900.838 iterations 424
Cbc0038I Pass  30: (16.77 seconds) suminf.   10.14051 (71) obj. 946.543 iterations 1284
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3280 integers at bound fixed and 3407 continuous
Cbc0038I Full problem 4237 rows 7560 columns, reduced to 586 rows 786 columns
Cbc0038I Mini branch and bound did not improve solution (17.83 seconds)
Cbc0038I Full problem 4238 rows 7560 columns, reduced to 4238 rows 7560 columns - too large
Cbc0038I After 25.07 seconds - Feasibility pump exiting - took 21.43 seconds
Cbc0031I 102 added rows had average density of 351.18627
Cbc0013I At root node, 102 cuts changed objective from 487.43333 to 491.05185 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 2.088 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 279 row cuts average 1989.8 elements, 0 column cuts (61 active)  in 10.593 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.308 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 444 row cuts average 360.5 elements, 0 column cuts (7 active)  in 2.548 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 9 row cuts average 24.2 elements, 0 column cuts (0 active)  in 0.500 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 491.05185 (92.99 seconds)
Cbc0010I After 100 nodes, 32 on tree, 1e+50 best solution, best possible 491.05185 (284.32 seconds)
Cbc0010I After 200 nodes, 49 on tree, 1e+50 best solution, best possible 491.05185 (332.93 seconds)
Cbc0010I After 300 nodes, 54 on tree, 1e+50 best solution, best possible 491.05185 (381.90 seconds)
Cbc0010I After 400 nodes, 64 on tree, 1e+50 best solution, best possible 491.05185 (426.35 seconds)
Cbc0010I After 500 nodes, 67 on tree, 1e+50 best solution, best possible 491.05185 (467.64 seconds)
Cbc0010I After 600 nodes, 72 on tree, 1e+50 best solution, best possible 491.05185 (496.65 seconds)
Cbc0010I After 700 nodes, 66 on tree, 1e+50 best solution, best possible 491.05185 (545.87 seconds)
Cbc0010I After 800 nodes, 64 on tree, 1e+50 best solution, best possible 491.05185 (597.01 seconds)
Cbc0010I After 900 nodes, 64 on tree, 1e+50 best solution, best possible 491.05185 (641.12 seconds)
Cbc0010I After 1000 nodes, 58 on tree, 1e+50 best solution, best possible 491.05185 (695.94 seconds)
Cbc0010I After 1100 nodes, 155 on tree, 1e+50 best solution, best possible 491.61395 (860.05 seconds)
Cbc0010I After 1200 nodes, 255 on tree, 1e+50 best solution, best possible 491.61395 (928.35 seconds)
Cbc0010I After 1300 nodes, 355 on tree, 1e+50 best solution, best possible 491.61395 (982.20 seconds)
Cbc0010I After 1400 nodes, 416 on tree, 1e+50 best solution, best possible 491.61395 (1016.96 seconds)
Cbc0010I After 1500 nodes, 489 on tree, 1e+50 best solution, best possible 491.61395 (1042.80 seconds)
Cbc0010I After 1600 nodes, 413 on tree, 1e+50 best solution, best possible 491.61395 (1055.15 seconds)
Cbc0010I After 1700 nodes, 413 on tree, 1e+50 best solution, best possible 491.61395 (1078.38 seconds)
Cbc0010I After 1800 nodes, 430 on tree, 1e+50 best solution, best possible 491.61395 (1091.56 seconds)
Cbc0010I After 1900 nodes, 407 on tree, 1e+50 best solution, best possible 491.61395 (1106.59 seconds)
Cbc0010I After 2000 nodes, 439 on tree, 1e+50 best solution, best possible 491.61395 (1124.17 seconds)
Cbc0010I After 2100 nodes, 421 on tree, 1e+50 best solution, best possible 491.61395 (1140.96 seconds)
Cbc0010I After 2200 nodes, 415 on tree, 1e+50 best solution, best possible 491.61395 (1159.99 seconds)
Cbc0010I After 2300 nodes, 468 on tree, 1e+50 best solution, best possible 491.61395 (1177.98 seconds)
Cbc0010I After 2400 nodes, 424 on tree, 1e+50 best solution, best possible 491.61395 (1202.25 seconds)
Cbc0010I After 2500 nodes, 400 on tree, 1e+50 best solution, best possible 491.61395 (1255.87 seconds)
Cbc0010I After 2600 nodes, 388 on tree, 1e+50 best solution, best possible 491.61395 (1297.49 seconds)
Cbc0010I After 2700 nodes, 419 on tree, 1e+50 best solution, best possible 491.61395 (1360.18 seconds)
Cbc0010I After 2800 nodes, 434 on tree, 1e+50 best solution, best possible 491.61395 (1397.80 seconds)
Cbc0010I After 2900 nodes, 386 on tree, 1e+50 best solution, best possible 491.61395 (1441.78 seconds)
Cbc0010I After 3000 nodes, 470 on tree, 1e+50 best 